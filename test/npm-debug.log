0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'mocha-phantomjs',
1 verbose cli   'phantomjs' ]
2 info using npm@1.2.11
3 info using node@v0.8.20
4 verbose read json /usr/local/lib/package.json
5 verbose read json /usr/local/lib/package.json
6 verbose cache add [ 'mocha-phantomjs', null ]
7 verbose cache add name=undefined spec="mocha-phantomjs" args=["mocha-phantomjs",null]
8 verbose parsed url { pathname: 'mocha-phantomjs',
8 verbose parsed url   path: 'mocha-phantomjs',
8 verbose parsed url   href: 'mocha-phantomjs' }
9 verbose cache add [ 'phantomjs', null ]
10 verbose cache add name=undefined spec="phantomjs" args=["phantomjs",null]
11 verbose parsed url { pathname: 'phantomjs', path: 'phantomjs', href: 'phantomjs' }
12 silly lockFile b744f0a9-mocha-phantomjs mocha-phantomjs
13 verbose lock mocha-phantomjs /home/eric/.npm/b744f0a9-mocha-phantomjs.lock
14 silly lockFile 30d7cd7d-phantomjs phantomjs
15 verbose lock phantomjs /home/eric/.npm/30d7cd7d-phantomjs.lock
16 silly lockFile b744f0a9-mocha-phantomjs mocha-phantomjs
17 silly lockFile b744f0a9-mocha-phantomjs mocha-phantomjs
18 silly lockFile 30d7cd7d-phantomjs phantomjs
19 silly lockFile 30d7cd7d-phantomjs phantomjs
20 verbose addNamed [ 'mocha-phantomjs', '' ]
21 verbose addNamed [ null, '' ]
22 silly lockFile 0392cad4-mocha-phantomjs mocha-phantomjs@
23 verbose lock mocha-phantomjs@ /home/eric/.npm/0392cad4-mocha-phantomjs.lock
24 verbose addNamed [ 'phantomjs', '' ]
25 verbose addNamed [ null, '' ]
26 silly lockFile 29cf7fd6-phantomjs phantomjs@
27 verbose lock phantomjs@ /home/eric/.npm/29cf7fd6-phantomjs.lock
28 silly addNameRange { name: 'mocha-phantomjs', range: '', hasData: false }
29 silly addNameRange { name: 'phantomjs', range: '', hasData: false }
30 verbose url raw mocha-phantomjs
31 verbose url resolving [ 'https://registry.npmjs.org/', './mocha-phantomjs' ]
32 verbose url resolved https://registry.npmjs.org/mocha-phantomjs
33 info trying registry request attempt 1 at 21:24:42
34 verbose etag "F2Y2DO9IOQJAQTIYNYXXIY28Q"
35 http GET https://registry.npmjs.org/mocha-phantomjs
36 verbose url raw phantomjs
37 verbose url resolving [ 'https://registry.npmjs.org/', './phantomjs' ]
38 verbose url resolved https://registry.npmjs.org/phantomjs
39 info trying registry request attempt 1 at 21:24:42
40 verbose etag "7MNBZVKYZ806V4LHCPH109CAU"
41 http GET https://registry.npmjs.org/phantomjs
42 http 304 https://registry.npmjs.org/mocha-phantomjs
43 silly registry.get cb [ 304,
43 silly registry.get   { server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
43 silly registry.get     etag: '"F2Y2DO9IOQJAQTIYNYXXIY28Q"',
43 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:50 GMT',
43 silly registry.get     'content-length': '0' } ]
44 verbose etag mocha-phantomjs from cache
45 silly addNameRange number 2 { name: 'mocha-phantomjs', range: '', hasData: true }
46 silly addNameRange versions [ 'mocha-phantomjs',
46 silly addNameRange   [ '1.0.0',
46 silly addNameRange     '1.0.1',
46 silly addNameRange     '1.1.0',
46 silly addNameRange     '1.1.1',
46 silly addNameRange     '1.1.2',
46 silly addNameRange     '1.1.3',
46 silly addNameRange     '2.0.0',
46 silly addNameRange     '2.0.1',
46 silly addNameRange     '2.0.2',
46 silly addNameRange     '2.0.3',
46 silly addNameRange     '3.0.0',
46 silly addNameRange     '3.1.0',
46 silly addNameRange     '3.1.1' ] ]
47 verbose addNamed [ 'mocha-phantomjs', '3.1.1' ]
48 verbose addNamed [ '3.1.1', '3.1.1' ]
49 silly lockFile 1604a294-mocha-phantomjs-3-1-1 mocha-phantomjs@3.1.1
50 verbose lock mocha-phantomjs@3.1.1 /home/eric/.npm/1604a294-mocha-phantomjs-3-1-1.lock
51 verbose read json /home/eric/.npm/mocha-phantomjs/3.1.1/package/package.json
52 silly lockFile 1604a294-mocha-phantomjs-3-1-1 mocha-phantomjs@3.1.1
53 silly lockFile 1604a294-mocha-phantomjs-3-1-1 mocha-phantomjs@3.1.1
54 silly lockFile 0392cad4-mocha-phantomjs mocha-phantomjs@
55 silly lockFile 0392cad4-mocha-phantomjs mocha-phantomjs@
56 http 304 https://registry.npmjs.org/phantomjs
57 silly registry.get cb [ 304,
57 silly registry.get   { server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
57 silly registry.get     etag: '"7MNBZVKYZ806V4LHCPH109CAU"',
57 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:50 GMT',
57 silly registry.get     'content-length': '0' } ]
58 verbose etag phantomjs from cache
59 silly addNameRange number 2 { name: 'phantomjs', range: '', hasData: true }
60 silly addNameRange versions [ 'phantomjs',
60 silly addNameRange   [ '0.0.1',
60 silly addNameRange     '0.0.2',
60 silly addNameRange     '0.0.3',
60 silly addNameRange     '0.0.4',
60 silly addNameRange     '0.0.5',
60 silly addNameRange     '0.0.6',
60 silly addNameRange     '0.0.7',
60 silly addNameRange     '0.0.8',
60 silly addNameRange     '0.0.9',
60 silly addNameRange     '0.1.0',
60 silly addNameRange     '0.1.1',
60 silly addNameRange     '0.2.0',
60 silly addNameRange     '0.2.1',
60 silly addNameRange     '0.2.2',
60 silly addNameRange     '0.2.3',
60 silly addNameRange     '0.2.4',
60 silly addNameRange     '0.2.5',
60 silly addNameRange     '0.2.6',
60 silly addNameRange     '1.8.0-1',
60 silly addNameRange     '1.8.1-1',
60 silly addNameRange     '1.8.1-2',
60 silly addNameRange     '1.8.1-3',
60 silly addNameRange     '1.8.2-0',
60 silly addNameRange     '1.8.2-1',
60 silly addNameRange     '1.8.2-2',
60 silly addNameRange     '1.9.0-0',
60 silly addNameRange     '1.9.0-1',
60 silly addNameRange     '1.9.0-2',
60 silly addNameRange     '1.9.0-3',
60 silly addNameRange     '1.9.0-4',
60 silly addNameRange     '1.9.0-5',
60 silly addNameRange     '1.9.0-6',
60 silly addNameRange     '1.9.1-0',
60 silly addNameRange     '1.9.1-2',
60 silly addNameRange     '1.9.1-3',
60 silly addNameRange     '1.9.1-4',
60 silly addNameRange     '1.9.1-5' ] ]
61 verbose addNamed [ 'phantomjs', '1.9.1-5' ]
62 verbose addNamed [ '1.9.1-5', '1.9.1-5' ]
63 silly lockFile 0767b6a8-phantomjs-1-9-1-5 phantomjs@1.9.1-5
64 verbose lock phantomjs@1.9.1-5 /home/eric/.npm/0767b6a8-phantomjs-1-9-1-5.lock
65 verbose read json /home/eric/.npm/phantomjs/1.9.1-5/package/package.json
66 silly lockFile 0767b6a8-phantomjs-1-9-1-5 phantomjs@1.9.1-5
67 silly lockFile 0767b6a8-phantomjs-1-9-1-5 phantomjs@1.9.1-5
68 silly lockFile 29cf7fd6-phantomjs phantomjs@
69 silly lockFile 29cf7fd6-phantomjs phantomjs@
70 silly resolved [ { name: 'mocha-phantomjs',
70 silly resolved     description: 'PhantomJS Runners for Mocha',
70 silly resolved     keywords:
70 silly resolved      [ 'phantomjs',
70 silly resolved        'mocha',
70 silly resolved        'test',
70 silly resolved        'runner',
70 silly resolved        'command line',
70 silly resolved        'browser' ],
70 silly resolved     version: '3.1.1',
70 silly resolved     author:
70 silly resolved      { name: 'Ken Collins',
70 silly resolved        email: 'ken@metaskills.net',
70 silly resolved        url: 'http://metaskills.net/' },
70 silly resolved     licenses: [ [Object] ],
70 silly resolved     repository:
70 silly resolved      { type: 'git',
70 silly resolved        url: 'http://github.com/metaskills/mocha-phantomjs.git' },
70 silly resolved     bugs: { url: 'http://github.com/metaskills/mocha-phantomjs/issues' },
70 silly resolved     main: './lib/mocha-phantomjs.coffee',
70 silly resolved     bin: { 'mocha-phantomjs': './bin/mocha-phantomjs' },
70 silly resolved     scripts: { test: 'cake test' },
70 silly resolved     dependencies: { mocha: '1.12.x', commander: '1.2.x' },
70 silly resolved     devDependencies:
70 silly resolved      { chai: '1.7.x',
70 silly resolved        async: '0.2.x',
70 silly resolved        'coffee-script': '1.6.x',
70 silly resolved        requirejs: '2.1.x' },
70 silly resolved     readme: '# PhantomJS Runners for Mocha\n\n[Mocha](http://visionmedia.github.com/mocha/) is a feature-rich JavaScript test framework running on node and the browser. Along with the [Chai](http://chaijs.com) assertion library they make an impressive combo. [PhantomJS](http://phantomjs.org) is a headless WebKit with a JavaScript/CoffeeScript API. It has fast and native support for various web standards like DOM handling, CSS selectors, JSON, Canvas, and SVG.\n\nThe mocha-phantomjs project provides a `mocha-phantomjs.coffee` script file and extensions to drive PhantomJS while testing your HTML pages with Mocha from the console. The preferred usage is to install `mocha-phantomjs` via node\'s packaged modules and use the `mocha-phantomjs` binary wrapper. Tested with Mocha 1.12.x, Chai 1.7.x, and PhantomJS 1.9.1.\n\n  * **Since version 3.0 of mocha-phantomjs, you must use PhantomJS 1.9.1 or higher.**\n\n[![Build Status](https://secure.travis-ci.org/metaskills/mocha-phantomjs.png)](http://travis-ci.org/metaskills/mocha-phantomjs)\n\n\n# Key Features\n\n### Standard Out\n\nFinally, `process.stdout.write`, done right. Mocha is primarily written for node, hence it relies on writing to standard out without trailing newline characters. This behavior is critical for reporters like the dot reporter. We make up for PhantomJS\'s lack of stream support by both customizing `console.log` and creating a `process.stdout.write` function to the current PhantomJS process. This technique combined with a handful of fancy [ANSI cursor movement codes](http://web.mit.edu/gnu/doc/html/screen_10.html) allows PhantomJS to support Mocha\'s diverse reporter options.\n\n### Exit Codes\n\nProper exit status codes from PhantomJS using Mocha\'s failures count. So in standard UNIX fashion, a `0` code means success. This means you can use mocha-phantomjs on your CI server of choice.\n\n### Mixed Mode Runs\n\nYou can use your existing Mocha HTML file reporters side by side with mocha-phantomjs. This gives you the option to run your tests both in a browser or with PhantomJS. Since mocha-phantomjs needs to control when the `run()` command is sent to the mocha object, we accomplish this by setting the `mochaPhantomJS` on the `window` object to `true`. Below, in the usage section, is an example of a HTML structure that can be used both by opening the file in your browser or choice or using mocha-phantomjs.\n\n\n# Installation\n\nWe distribute [mocha-phantomjs as an npm](https://npmjs.org/package/mocha-phantomjs) that is easy to install. Once done, you will have a `mocha-phantomjs` binary. See the next usage section for docs or use the `-h` flag.\n\nWe have an undeclared dependency on PhantomJS. This allows you to choose to install PhantomJS via the node package manager (npm), or to use system PhantomJS downloaded and installed from [the PhantomJS website](http://phantomjs.org). We have heard reports that Windows users have better results with the official PhantomJS download vs the npm.\n\nIf you would like to use PhantomJS installed from npm:\n\n```\n$ npm install -g mocha-phantomjs phantomjs\n```\n\nOtherwise, once you have downloaded and installed PhantomJS yourself:\n\n```\n$ npm install -g mocha-phantomjs\n```\n\nIf you don\'t install phantomjs using either of these approaches, you will get an unhelpful **ENOENT** error when you try to run `mocha-phantomjs`.\n\n# Usage\n\n```\nUsage: mocha-phantomjs [options] page\n\n Options:\n\n   -h, --help                   output usage information\n   -V, --version                output the version number\n   -R, --reporter <name>        specify the reporter to use\n   -t, --timeout <timeout>      specify the test startup timeout to use\n   -A, --agent <userAgent>      specify the user agent to use\n   -c, --cookies <Object>       phantomjs cookie object http://git.io/RmPxgA\n   -h, --header <name>=<value>  specify custom header\n   -s, --setting <key>=<value>  specify phantomjs WebPage settings\n   -v, --view <width>x<height>  specify phantomjs viewport size\n   -C, --no-color               disable color escape codes\n   -p, --path <path>            path to PhantomJS binary\n\n Examples:\n\n   $ mocha-phantomjs -R dot /test/file.html\n   $ mocha-phantomjs http://testserver.com/file.html\n   $ mocha-phantomjs -s localToRemoteUrlAccessEnabled=true -s webSecurityEnabled=false http://testserver.com/file.html\n   $ mocha-phantomjs -p ~/bin/phantomjs /test/file.html\n```\n\nNow as an node package, using `mocha-phantomjs` has never been easier. The page argument can be either a local or fully qualified path or a http or file URL. See the list of reporters below for acceptable options to the `--reporter` argument. See [phantomjs WebPage settings](https://github.com/ariya/phantomjs/wiki/API-Reference-WebPage#wiki-webpage-settings) for options that may be supplied to the `--setting` argument.\n\nYour HTML file\'s structure should look something like this. The reporter set below to `html` is only needed for viewing the HTML page in your browser. The `mocha-phantomjs.coffee` script overrides that reporter value. The conditional run at the bottom allows the mixed mode feature described above.\n\n```html\n<html>\n  <head>\n    <meta charset="utf-8">\n    <link rel="stylesheet" href="mocha.css" />\n  </head>\n  <body>\n    <div id="mocha"></div>\n    <script src="mocha.js"></script>\n    <script src="chai.js"></script>\n    <script>\n      mocha.ui(\'bdd\');\n      mocha.reporter(\'html\');\n      expect = chai.expect;\n    </script>\n    <script src="test/mycode.js"></script>\n    <script>\n      if (window.mochaPhantomJS) { mochaPhantomJS.run(); }\n      else { mocha.run(); }\n    </script>\n  </body>\n</html>\n```\n\n\n# Supported Reporters\n\nMocha-phantomjs does not scrap the web page under test! No other PhantomJS driver stacks up to our runner support. Some have used a debounce method to keep duplicate messages in the spec reporter from showing up twice. Loosing one of Mocha\'s console reporters neatest features, initial test start feedback. The animation below is an example of how our runner script fully compiles with expected Mocha behavior.\n\n<div style="text-align:center;">\n  <img src="https://raw.github.com/metaskills/mocha-phantomjs/master/public/images/slow.gif" alt="Slow Tests Example">\n</div>\n\nThe following is a list of tested reporters. Since moving PhantomJS 1.9.1, most core Mocha reporters should "just work" since we now support stdout properly. If you have an issue with a reporter, [open a github issue](https://github.com/metaskills/mocha-phantomjs/issues) and let me know.\n\n### Spec Reporter (default)\n\nThe default reporter. You can force it using `spec` for the reporter argument.\n\n<div style="text-align:center;">\n  <img src="https://raw.github.com/metaskills/mocha-phantomjs/master/public/images/reporter_spec.gif" alt="Spec Reporter" width="616">\n</div>\n\n### Dot Matrix Reporter\n\nUse `dot` for the reporter argument.\n\n<div style="text-align:center;">\n  <img src="https://raw.github.com/metaskills/mocha-phantomjs/master/public/images/reporter_dot.gif" alt="Dot Matrix Reporter" width="616">\n</div>\n\nThe PhantomJS process has no way of knowing anything about your console window\'s width. So we default the width to 75 columns. But if you pass down the `COLUMNS` environment variable, it will pick that up and adjust to your current terminal width. For example, using the `$COLUMNS` variable like so.\n\n```\nenv COLUMNS=$COLUMNS phantomjs mocha-phantomjs.coffee URL dot\n```\n\n### TAP Reporter\n\nUse `tap` for the reporter argument.\n\n<div style="text-align:center;">\n  <img src="https://raw.github.com/metaskills/mocha-phantomjs/master/public/images/reporter_tap.gif" alt="TAP Reporter" width="616">\n</div>\n\n### Min Reporter\n\nUse `min` for the reporter argument.\n\n<div style="text-align:center;">\n  <img src="https://raw.github.com/metaskills/mocha-phantomjs/master/public/images/reporter_min.gif" alt="Min Reporter" width="616">\n</div>\n\n### List Reporter\n\nUse `list` for the reporter argument.\n\n<div style="text-align:center;">\n  <img src="https://raw.github.com/metaskills/mocha-phantomjs/master/public/images/reporter_list.gif" alt="List Reporter" width="616">\n</div>\n\n### Doc Reporter\n\nUse `doc` for the reporter argument.\n\n<div style="text-align:center;">\n  <img src="https://raw.github.com/metaskills/mocha-phantomjs/master/public/images/reporter_doc.gif" alt="Doc Reporter" width="616">\n</div>\n\n### TeamCity Reporter\n\nUse `teamcity` for the reporter argument.\n\n```\n$ mocha-phantomjs -R teamcity test/passing.html\n##teamcity[testSuiteStarted name=\'mocha.suite\']\n##teamcity[testStarted name=\'Tests Passing passes 1\']\n##teamcity[testFinished name=\'Tests Passing passes 1\' duration=\'0\']\n##teamcity[testStarted name=\'Tests Passing passes 2\']\n##teamcity[testFinished name=\'Tests Passing passes 2\' duration=\'0\']\n##teamcity[testStarted name=\'Tests Passing passes 3\']\n##teamcity[testFinished name=\'Tests Passing passes 3\' duration=\'0\']\n##teamcity[testIgnored name=\'Tests Passing skips 1\' message=\'pending\']\n##teamcity[testFinished name=\'Tests Passing skips 1\' duration=\'undefined\']\n##teamcity[testIgnored name=\'Tests Passing skips 2\' message=\'pending\']\n##teamcity[testFinished name=\'Tests Passing skips 2\' duration=\'undefined\']\n##teamcity[testIgnored name=\'Tests Passing skips 3\' message=\'pending\']\n##teamcity[testFinished name=\'Tests Passing skips 3\' duration=\'undefined\']\n##teamcity[testSuiteFinished name=\'mocha.suite\' duration=\'133\']\n```\n\n### JSON Reporter\n\nUse `json` for the reporter argument.\n\n```\n$ mocha-phantomjs -R json test/passing.html\n{\n  "stats": {\n    "suites": 1,\n    "tests": 6,\n    "passes": 3,\n    "pending": 3,\n    "failures": 0,\n  ...\n```\n\n### JSONCov Reporter\n\nUse `json-cov` for the reporter argument. I have not tested these as they require the [node-jscoverage](https://github.com/visionmedia/node-jscoverage) tool to be used.\n\n```\n$ mocha-phantomjs -r json-cov test/passing.html\n{\n  "instrumentation": "node-jscoverage",\n  "sloc": 0,\n  "hits": 0,\n  "misses": 0,\n  "coverage": 0,\n  "files": [],\n  "stats": {\n    "suites": 1,\n    "tests": 6,\n    "passes": 3,\n    "pending": 3,\n    ...\n```\n\n### HTMLCov Reporter\n\nUse `html-cov` for the reporter argument. I have not tested these as they require the [node-jscoverage](https://github.com/visionmedia/node-jscoverage) tool to be used.\n\n### XUnit Reporter\n\nUse `xunit` for the reporter argument.\n\n```\n<testsuite name="Mocha Tests" tests="18" failures="6" errors="6" skip="6" timestamp="Sun, 21 Oct 2012 17:29:59 GMT" time="0.36">\n<testcase classname="Tests Mixed" name="passes 1" time="0"/>\n<testcase classname="Tests Mixed" name="passes 2" time="0.001"/>\n<testcase classname="Tests Mixed" name="passes 3" time="0"/>\n...\n```\n\n\n# Testing\n\nSimple! Just clone the repo, then run `npm install` and the various node development dependencies will install to the `node_modules` directory of the project. If you have not done so, it is typically a good idea to add `/node_modules/.bin` to your `$PATH` so these modules bins are used. Now run `cake test` to start off the test suite.\n\nWe also use Travis CI to run our tests too. The current build status:\n\n[![Build Status](https://secure.travis-ci.org/metaskills/mocha-phantomjs.png)](http://travis-ci.org/metaskills/mocha-phantomjs)\n\n\n# TODO\n\n* Create a `mocha-phantomjs` bin file for use in Node.js and publish a NPM.\n\n\n# Alternatives\n\n* OpenPhantomScripts - https://github.com/mark-rushakoff/OpenPhantomScripts\n* Front Tests - https://github.com/Backbonist/front-tests\n\n\n# License\n\nReleased under the MIT license. Copyright (c) 2012 Ken Collins.\n\n',
70 silly resolved     readmeFilename: 'README.md',
70 silly resolved     _id: 'mocha-phantomjs@3.1.1',
70 silly resolved     _from: 'mocha-phantomjs@' },
70 silly resolved   { name: 'phantomjs',
70 silly resolved     version: '1.9.1-5',
70 silly resolved     keywords: [ 'phantomjs', 'headless', 'webkit' ],
70 silly resolved     description: 'Headless WebKit with JS API',
70 silly resolved     homepage: 'https://github.com/Obvious/phantomjs',
70 silly resolved     repository: { type: 'git', url: 'git://github.com/Obvious/phantomjs.git' },
70 silly resolved     licenses: [ [Object] ],
70 silly resolved     author:
70 silly resolved      { name: 'Dan Pupius',
70 silly resolved        email: 'dan@obvious.com',
70 silly resolved        url: 'http://pupius.co.uk' },
70 silly resolved     maintainers: [ [Object] ],
70 silly resolved     main: 'lib/phantomjs',
70 silly resolved     bin: { phantomjs: './bin/phantomjs' },
70 silly resolved     scripts:
70 silly resolved      { install: 'node install.js',
70 silly resolved        test: 'nodeunit --reporter=minimal test/tests.js' },
70 silly resolved     dependencies:
70 silly resolved      { 'adm-zip': '0.2.1',
70 silly resolved        kew: '~0.1.7',
70 silly resolved        ncp: '0.4.2',
70 silly resolved        npmconf: '0.0.24',
70 silly resolved        mkdirp: '0.3.5',
70 silly resolved        rimraf: '~2.0.2',
70 silly resolved        which: '~1.0.5' },
70 silly resolved     devDependencies: { nodeunit: '~0.7.4' },
70 silly resolved     readme: 'phantom\n=======\n\nAn NPM wrapper for [PhantomJS](http://phantomjs.org/), headless webkit with JS API.\n\nBuilding and Installing\n-----------------------\n\n```shell\nnpm install phantomjs\n```\n\nOr grab the source and\n\n```shell\nnode ./install.js\n```\n\nWhat this is really doing is just grabbing a particular "blessed" (by\nthis module) version of Phantom. As new versions of Phantom are released\nand vetted, this module will be updated accordingly.\n\nThe package has been set up to fetch and run Phantom for MacOS (darwin),\nLinux based platforms (as identified by nodejs), and -- as of version 0.2.0 --\nWindows (thanks to [Domenic Denicola](https://github.com/domenic)).  If you\nspot any platform weirdnesses, let us know or send a patch.\n\nRunning\n-------\n\n```shell\nbin/phantom [phantom arguments]\n```\n\nAnd npm will install a link to the binary in `node_modules/.bin` as\nit is wont to do.\n\nRunning via node\n----------------\n\nThe package exports a `path` string that contains the path to the\nphantomjs binary/executable.\n\nBelow is an example of using this package via node.\n\n```javascript\nvar childProcess = require(\'child_process\')\nvar phantomjs = require(\'phantomjs\')\nvar binPath = phantomjs.path\n\nvar childArgs = [\n  path.join(__dirname, \'phantomjs-script.js\'),\n  \'some other argument (passed to phantomjs script)\'\n]\n\nchildProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {\n  // handle results\n})\n\n```\n\nVersioning\n----------\n\nThe NPM package version tracks the version of PhantomJS that will be installed,\nwith an additional build number that is used for revisions to the installer.\n\nAs such `1.8.0-1` will `1.8.0-2` will both install PhantomJs 1.8 but the latter\nhas newer changes to the installer.\n\nA Note on PhantomJS\n-------------------\n\nPhantomJS is not a library for NodeJS.  It\'s a separate environment and code\nwritten for node is unlikely to be compatible.  In particular PhantomJS does\nnot expose a Common JS package loader.\n\nThis is an _NPM wrapper_ and can be used to conveniently make Phantom available\nIt is not a Node JS wrapper.\n\nI have had reasonable experiences writing standalone Phantom scripts which I\nthen drive from within a node program by spawning phantom in a child process.\n\nRead the PhantomJS FAQ for more details: http://phantomjs.org/faq.html\n\n### Linux Note\n\nAn extra note on Linux usage, from the PhantomJS download page:\n\n > This package is built on CentOS 5.8. It should run successfully on Lucid or\n > more modern systems (including other distributions). There is no requirement\n > to install Qt, WebKit, or any other libraries. It is however expected that\n > some base libraries necessary for rendering (FreeType, Fontconfig) and the\n > basic font files are available in the system.\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.  Submit them at\n[the project on GitHub](https://github.com/Obvious/phantomjs/).  If you haven\'t contributed to an\n[Obvious](http://github.com/Obvious/) project before please head over to the\n[Open Source Project](https://github.com/Obvious/open-source#note-to-external-contributors) and fill\nout an OCLA (it should be pretty painless).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests.\n\nAuthor\n------\n\n[Dan Pupius](https://github.com/dpup)\n([personal website](http://pupius.co.uk)), supported by\n[The Obvious Corporation](http://obvious.com/).\n\nLicense\n-------\n\nCopyright 2012 [The Obvious Corporation](http://obvious.com/).\n\nLicensed under the Apache License, Version 2.0.\nSee the top-level file `LICENSE.txt` and\n(http://www.apache.org/licenses/LICENSE-2.0).\n',
70 silly resolved     readmeFilename: 'README.md',
70 silly resolved     _id: 'phantomjs@1.9.1-5',
70 silly resolved     _from: 'phantomjs@' } ]
71 info install mocha-phantomjs@3.1.1 into /usr/local/lib
72 info install phantomjs@1.9.1-5 into /usr/local/lib
73 info installOne mocha-phantomjs@3.1.1
74 info installOne phantomjs@1.9.1-5
75 verbose from cache /home/eric/.npm/mocha-phantomjs/3.1.1/package/package.json
76 verbose from cache /home/eric/.npm/phantomjs/1.9.1-5/package/package.json
77 info /usr/local/lib/node_modules/mocha-phantomjs unbuild
78 verbose read json /usr/local/lib/node_modules/mocha-phantomjs/package.json
79 info /usr/local/lib/node_modules/phantomjs unbuild
80 verbose read json /usr/local/lib/node_modules/phantomjs/package.json
81 verbose tar unpack /home/eric/.npm/mocha-phantomjs/3.1.1/package.tgz
82 verbose tar unpack /home/eric/.npm/phantomjs/1.9.1-5/package.tgz
83 silly lockFile 9e611a8f-lib-node-modules-mocha-phantomjs /usr/local/lib/node_modules/mocha-phantomjs
84 verbose lock /usr/local/lib/node_modules/mocha-phantomjs /home/eric/.npm/9e611a8f-lib-node-modules-mocha-phantomjs.lock
85 silly lockFile 243cea62-ocha-phantomjs-3-1-1-package-tgz /home/eric/.npm/mocha-phantomjs/3.1.1/package.tgz
86 verbose lock /home/eric/.npm/mocha-phantomjs/3.1.1/package.tgz /home/eric/.npm/243cea62-ocha-phantomjs-3-1-1-package-tgz.lock
87 silly lockFile 9e1b60a1-local-lib-node-modules-phantomjs /usr/local/lib/node_modules/phantomjs
88 verbose lock /usr/local/lib/node_modules/phantomjs /home/eric/.npm/9e1b60a1-local-lib-node-modules-phantomjs.lock
89 silly lockFile 01cd643b-pm-phantomjs-1-9-1-5-package-tgz /home/eric/.npm/phantomjs/1.9.1-5/package.tgz
90 verbose lock /home/eric/.npm/phantomjs/1.9.1-5/package.tgz /home/eric/.npm/01cd643b-pm-phantomjs-1-9-1-5-package-tgz.lock
91 silly gunzTarPerm modes [ '755', '644' ]
92 silly gunzTarPerm modes [ '755', '644' ]
93 silly gunzTarPerm extractEntry package.json
94 silly gunzTarPerm extractEntry package.json
95 silly gunzTarPerm extractEntry .npmignore
96 silly gunzTarPerm extractEntry README.md
97 silly gunzTarPerm extractEntry MIT-LICENSE
98 silly gunzTarPerm extractEntry bin/mocha-phantomjs
99 silly gunzTarPerm extractEntry CHANGELOG.md
100 silly gunzTarPerm extractEntry Cakefile
101 silly gunzTarPerm extractEntry lib/mocha-phantomjs.coffee
102 silly gunzTarPerm extractEntry .npmignore
103 silly gunzTarPerm extractEntry README.md
104 silly gunzTarPerm extractEntry lib/mocha-phantomjs/core_extensions.js
105 silly gunzTarPerm extractEntry install.js
106 silly gunzTarPerm extractEntry bin/phantomjs
107 silly gunzTarPerm extractEntry LICENSE.txt
108 silly gunzTarPerm extractEntry .jshintrc
109 silly gunzTarPerm extractEntry .travis.yml
110 silly gunzTarPerm extractEntry lib/phantomjs.js
111 silly gunzTarPerm extractEntry test/tests.js
112 silly gunzTarPerm extractEntry test/loadspeed.js
113 verbose read json /usr/local/lib/node_modules/mocha-phantomjs/package.json
114 silly lockFile 9e611a8f-lib-node-modules-mocha-phantomjs /usr/local/lib/node_modules/mocha-phantomjs
115 silly lockFile 9e611a8f-lib-node-modules-mocha-phantomjs /usr/local/lib/node_modules/mocha-phantomjs
116 silly lockFile 243cea62-ocha-phantomjs-3-1-1-package-tgz /home/eric/.npm/mocha-phantomjs/3.1.1/package.tgz
117 silly lockFile 243cea62-ocha-phantomjs-3-1-1-package-tgz /home/eric/.npm/mocha-phantomjs/3.1.1/package.tgz
118 info preinstall mocha-phantomjs@3.1.1
119 verbose from cache /usr/local/lib/node_modules/mocha-phantomjs/package.json
120 verbose read json /usr/local/lib/node_modules/phantomjs/package.json
121 silly lockFile 9e1b60a1-local-lib-node-modules-phantomjs /usr/local/lib/node_modules/phantomjs
122 silly lockFile 9e1b60a1-local-lib-node-modules-phantomjs /usr/local/lib/node_modules/phantomjs
123 silly lockFile 01cd643b-pm-phantomjs-1-9-1-5-package-tgz /home/eric/.npm/phantomjs/1.9.1-5/package.tgz
124 silly lockFile 01cd643b-pm-phantomjs-1-9-1-5-package-tgz /home/eric/.npm/phantomjs/1.9.1-5/package.tgz
125 info preinstall phantomjs@1.9.1-5
126 verbose from cache /usr/local/lib/node_modules/phantomjs/package.json
127 verbose readDependencies using package.json deps
128 verbose from cache /usr/local/lib/node_modules/mocha-phantomjs/package.json
129 verbose readDependencies using package.json deps
130 verbose from cache /usr/local/lib/node_modules/phantomjs/package.json
131 verbose readDependencies using package.json deps
132 verbose readDependencies using package.json deps
133 verbose cache add [ 'mocha@1.12.x', null ]
134 verbose cache add name=undefined spec="mocha@1.12.x" args=["mocha@1.12.x",null]
135 verbose parsed url { pathname: 'mocha@1.12.x',
135 verbose parsed url   path: 'mocha@1.12.x',
135 verbose parsed url   href: 'mocha@1.12.x' }
136 verbose cache add name="mocha" spec="1.12.x" args=["mocha","1.12.x"]
137 verbose parsed url { pathname: '1.12.x', path: '1.12.x', href: '1.12.x' }
138 verbose addNamed [ 'mocha', '1.12.x' ]
139 verbose addNamed [ null, '>=1.12.0- <1.13.0-' ]
140 silly lockFile 9b8cb677-mocha-1-12-x mocha@1.12.x
141 verbose lock mocha@1.12.x /home/eric/.npm/9b8cb677-mocha-1-12-x.lock
142 verbose cache add [ 'commander@1.2.x', null ]
143 verbose cache add name=undefined spec="commander@1.2.x" args=["commander@1.2.x",null]
144 verbose parsed url { pathname: 'commander@1.2.x',
144 verbose parsed url   path: 'commander@1.2.x',
144 verbose parsed url   href: 'commander@1.2.x' }
145 verbose cache add name="commander" spec="1.2.x" args=["commander","1.2.x"]
146 verbose parsed url { pathname: '1.2.x', path: '1.2.x', href: '1.2.x' }
147 verbose addNamed [ 'commander', '1.2.x' ]
148 verbose addNamed [ null, '>=1.2.0- <1.3.0-' ]
149 silly lockFile c6adb5d0-commander-1-2-x commander@1.2.x
150 verbose lock commander@1.2.x /home/eric/.npm/c6adb5d0-commander-1-2-x.lock
151 verbose cache add [ 'adm-zip@0.2.1', null ]
152 verbose cache add name=undefined spec="adm-zip@0.2.1" args=["adm-zip@0.2.1",null]
153 verbose parsed url { pathname: 'adm-zip@0.2.1',
153 verbose parsed url   path: 'adm-zip@0.2.1',
153 verbose parsed url   href: 'adm-zip@0.2.1' }
154 verbose cache add name="adm-zip" spec="0.2.1" args=["adm-zip","0.2.1"]
155 verbose parsed url { pathname: '0.2.1', path: '0.2.1', href: '0.2.1' }
156 verbose addNamed [ 'adm-zip', '0.2.1' ]
157 verbose addNamed [ '0.2.1', '0.2.1' ]
158 silly lockFile 56d2b9bc-adm-zip-0-2-1 adm-zip@0.2.1
159 verbose lock adm-zip@0.2.1 /home/eric/.npm/56d2b9bc-adm-zip-0-2-1.lock
160 verbose cache add [ 'kew@~0.1.7', null ]
161 verbose cache add name=undefined spec="kew@~0.1.7" args=["kew@~0.1.7",null]
162 verbose parsed url { pathname: 'kew@~0.1.7',
162 verbose parsed url   path: 'kew@~0.1.7',
162 verbose parsed url   href: 'kew@~0.1.7' }
163 verbose cache add name="kew" spec="~0.1.7" args=["kew","~0.1.7"]
164 verbose parsed url { pathname: '~0.1.7', path: '~0.1.7', href: '~0.1.7' }
165 verbose addNamed [ 'kew', '~0.1.7' ]
166 verbose addNamed [ null, '>=0.1.7- <0.2.0-' ]
167 silly lockFile fbc33e87-kew-0-1-7 kew@~0.1.7
168 verbose lock kew@~0.1.7 /home/eric/.npm/fbc33e87-kew-0-1-7.lock
169 verbose cache add [ 'ncp@0.4.2', null ]
170 verbose cache add name=undefined spec="ncp@0.4.2" args=["ncp@0.4.2",null]
171 verbose parsed url { pathname: 'ncp@0.4.2', path: 'ncp@0.4.2', href: 'ncp@0.4.2' }
172 verbose cache add name="ncp" spec="0.4.2" args=["ncp","0.4.2"]
173 verbose parsed url { pathname: '0.4.2', path: '0.4.2', href: '0.4.2' }
174 verbose addNamed [ 'ncp', '0.4.2' ]
175 verbose addNamed [ '0.4.2', '0.4.2' ]
176 silly lockFile e43cb36a-ncp-0-4-2 ncp@0.4.2
177 verbose lock ncp@0.4.2 /home/eric/.npm/e43cb36a-ncp-0-4-2.lock
178 verbose cache add [ 'npmconf@0.0.24', null ]
179 verbose cache add name=undefined spec="npmconf@0.0.24" args=["npmconf@0.0.24",null]
180 verbose parsed url { pathname: 'npmconf@0.0.24',
180 verbose parsed url   path: 'npmconf@0.0.24',
180 verbose parsed url   href: 'npmconf@0.0.24' }
181 verbose cache add name="npmconf" spec="0.0.24" args=["npmconf","0.0.24"]
182 verbose parsed url { pathname: '0.0.24', path: '0.0.24', href: '0.0.24' }
183 verbose addNamed [ 'npmconf', '0.0.24' ]
184 verbose addNamed [ '0.0.24', '0.0.24' ]
185 silly lockFile af02651e-npmconf-0-0-24 npmconf@0.0.24
186 verbose lock npmconf@0.0.24 /home/eric/.npm/af02651e-npmconf-0-0-24.lock
187 silly addNameRange { name: 'mocha', range: '>=1.12.0- <1.13.0-', hasData: false }
188 silly addNameRange { name: 'commander', range: '>=1.2.0- <1.3.0-', hasData: false }
189 silly addNameRange { name: 'kew', range: '>=0.1.7- <0.2.0-', hasData: false }
190 verbose cache add [ 'mkdirp@0.3.5', null ]
191 verbose cache add name=undefined spec="mkdirp@0.3.5" args=["mkdirp@0.3.5",null]
192 verbose parsed url { pathname: 'mkdirp@0.3.5',
192 verbose parsed url   path: 'mkdirp@0.3.5',
192 verbose parsed url   href: 'mkdirp@0.3.5' }
193 verbose cache add name="mkdirp" spec="0.3.5" args=["mkdirp","0.3.5"]
194 verbose parsed url { pathname: '0.3.5', path: '0.3.5', href: '0.3.5' }
195 verbose addNamed [ 'mkdirp', '0.3.5' ]
196 verbose addNamed [ '0.3.5', '0.3.5' ]
197 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
198 verbose lock mkdirp@0.3.5 /home/eric/.npm/67d2df2a-mkdirp-0-3-5.lock
199 verbose cache add [ 'rimraf@~2.0.2', null ]
200 verbose cache add name=undefined spec="rimraf@~2.0.2" args=["rimraf@~2.0.2",null]
201 verbose parsed url { pathname: 'rimraf@~2.0.2',
201 verbose parsed url   path: 'rimraf@~2.0.2',
201 verbose parsed url   href: 'rimraf@~2.0.2' }
202 verbose cache add name="rimraf" spec="~2.0.2" args=["rimraf","~2.0.2"]
203 verbose parsed url { pathname: '~2.0.2', path: '~2.0.2', href: '~2.0.2' }
204 verbose addNamed [ 'rimraf', '~2.0.2' ]
205 verbose addNamed [ null, '>=2.0.2- <2.1.0-' ]
206 silly lockFile 723423b4-rimraf-2-0-2 rimraf@~2.0.2
207 verbose lock rimraf@~2.0.2 /home/eric/.npm/723423b4-rimraf-2-0-2.lock
208 verbose cache add [ 'which@~1.0.5', null ]
209 verbose cache add name=undefined spec="which@~1.0.5" args=["which@~1.0.5",null]
210 verbose parsed url { pathname: 'which@~1.0.5',
210 verbose parsed url   path: 'which@~1.0.5',
210 verbose parsed url   href: 'which@~1.0.5' }
211 verbose cache add name="which" spec="~1.0.5" args=["which","~1.0.5"]
212 verbose parsed url { pathname: '~1.0.5', path: '~1.0.5', href: '~1.0.5' }
213 verbose addNamed [ 'which', '~1.0.5' ]
214 verbose addNamed [ null, '>=1.0.5- <1.1.0-' ]
215 silly lockFile d158d65e-which-1-0-5 which@~1.0.5
216 verbose lock which@~1.0.5 /home/eric/.npm/d158d65e-which-1-0-5.lock
217 verbose url raw adm-zip/0.2.1
218 verbose url resolving [ 'https://registry.npmjs.org/', './adm-zip/0.2.1' ]
219 verbose url resolved https://registry.npmjs.org/adm-zip/0.2.1
220 info trying registry request attempt 1 at 21:24:46
221 http GET https://registry.npmjs.org/adm-zip/0.2.1
222 verbose url raw npmconf/0.0.24
223 verbose url resolving [ 'https://registry.npmjs.org/', './npmconf/0.0.24' ]
224 verbose url resolved https://registry.npmjs.org/npmconf/0.0.24
225 info trying registry request attempt 1 at 21:24:46
226 http GET https://registry.npmjs.org/npmconf/0.0.24
227 silly addNameRange { name: 'rimraf', range: '>=2.0.2- <2.1.0-', hasData: false }
228 silly addNameRange { name: 'which', range: '>=1.0.5- <1.1.0-', hasData: false }
229 verbose url raw kew
230 verbose url resolving [ 'https://registry.npmjs.org/', './kew' ]
231 verbose url resolved https://registry.npmjs.org/kew
232 info trying registry request attempt 1 at 21:24:46
233 http GET https://registry.npmjs.org/kew
234 verbose url raw ncp/0.4.2
235 verbose url resolving [ 'https://registry.npmjs.org/', './ncp/0.4.2' ]
236 verbose url resolved https://registry.npmjs.org/ncp/0.4.2
237 info trying registry request attempt 1 at 21:24:46
238 http GET https://registry.npmjs.org/ncp/0.4.2
239 verbose url raw rimraf
240 verbose url resolving [ 'https://registry.npmjs.org/', './rimraf' ]
241 verbose url resolved https://registry.npmjs.org/rimraf
242 info trying registry request attempt 1 at 21:24:46
243 http GET https://registry.npmjs.org/rimraf
244 verbose url raw which
245 verbose url resolving [ 'https://registry.npmjs.org/', './which' ]
246 verbose url resolved https://registry.npmjs.org/which
247 info trying registry request attempt 1 at 21:24:46
248 http GET https://registry.npmjs.org/which
249 verbose url raw commander
250 verbose url resolving [ 'https://registry.npmjs.org/', './commander' ]
251 verbose url resolved https://registry.npmjs.org/commander
252 info trying registry request attempt 1 at 21:24:47
253 http GET https://registry.npmjs.org/commander
254 verbose url raw mocha
255 verbose url resolving [ 'https://registry.npmjs.org/', './mocha' ]
256 verbose url resolved https://registry.npmjs.org/mocha
257 info trying registry request attempt 1 at 21:24:47
258 verbose etag "D6629COUKWN56YDWY3K25D63Z"
259 http GET https://registry.npmjs.org/mocha
260 verbose url raw mkdirp/0.3.5
261 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp/0.3.5' ]
262 verbose url resolved https://registry.npmjs.org/mkdirp/0.3.5
263 info trying registry request attempt 1 at 21:24:47
264 verbose etag "A3251S0G3NT2AB7LYIM1NH7UK"
265 http GET https://registry.npmjs.org/mkdirp/0.3.5
266 http 200 https://registry.npmjs.org/adm-zip/0.2.1
267 silly registry.get cb [ 200,
267 silly registry.get   { vary: 'Accept',
267 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
267 silly registry.get     etag: '"DEWMC58B79MYHNRIX3C4LEL47"',
267 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:53 GMT',
267 silly registry.get     'content-type': 'application/json',
267 silly registry.get     'content-length': '3307' } ]
268 silly lockFile 4638a7dc-js-org-adm-zip-adm-zip-0-2-1-tgz https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz
269 verbose lock https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz /home/eric/.npm/4638a7dc-js-org-adm-zip-adm-zip-0-2-1-tgz.lock
270 verbose addRemoteTarball [ 'https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz',
270 verbose addRemoteTarball   'e801cedeb5bd9a4e98d699c5c0f4239e2731dcbf' ]
271 info retry fetch attempt 1 at 21:24:49
272 verbose fetch to= /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/tmp.tgz
273 http GET https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz
274 http 200 https://registry.npmjs.org/npmconf/0.0.24
275 silly registry.get cb [ 200,
275 silly registry.get   { vary: 'Accept',
275 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
275 silly registry.get     etag: '"EUWKWADSV8G0CH81HK973P36A"',
275 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:53 GMT',
275 silly registry.get     'content-type': 'application/json',
275 silly registry.get     'content-length': '1976' } ]
276 silly lockFile 9d788611-s-org-npmconf-npmconf-0-0-24-tgz https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz
277 verbose lock https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz /home/eric/.npm/9d788611-s-org-npmconf-npmconf-0-0-24-tgz.lock
278 verbose addRemoteTarball [ 'https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz',
278 verbose addRemoteTarball   'b78875b088ccc3c0afa3eceb3ce3244b1b52390c' ]
279 info retry fetch attempt 1 at 21:24:50
280 verbose fetch to= /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/tmp.tgz
281 http GET https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz
282 http 200 https://registry.npmjs.org/ncp/0.4.2
283 silly registry.get cb [ 200,
283 silly registry.get   { vary: 'Accept',
283 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
283 silly registry.get     etag: '"ATS9XSOJIH1FYJKRVWQHX9UNW"',
283 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:53 GMT',
283 silly registry.get     'content-type': 'application/json',
283 silly registry.get     'content-length': '2934' } ]
284 silly lockFile b3172d45-stry-npmjs-org-ncp-ncp-0-4-2-tgz https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz
285 verbose lock https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz /home/eric/.npm/b3172d45-stry-npmjs-org-ncp-ncp-0-4-2-tgz.lock
286 verbose addRemoteTarball [ 'https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz',
286 verbose addRemoteTarball   'abcc6cbd3ec2ed2a729ff6e7c1fa8f01784a8574' ]
287 info retry fetch attempt 1 at 21:24:50
288 verbose fetch to= /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/tmp.tgz
289 http GET https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz
290 http 304 https://registry.npmjs.org/mocha
291 silly registry.get cb [ 304,
291 silly registry.get   { server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
291 silly registry.get     etag: '"D6629COUKWN56YDWY3K25D63Z"',
291 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:54 GMT',
291 silly registry.get     'content-length': '0' } ]
292 verbose etag mocha from cache
293 silly addNameRange number 2 { name: 'mocha', range: '>=1.12.0- <1.13.0-', hasData: true }
294 silly addNameRange versions [ 'mocha',
294 silly addNameRange   [ '0.0.1-alpha1',
294 silly addNameRange     '0.0.1-alpha2',
294 silly addNameRange     '0.0.1-alpha3',
294 silly addNameRange     '0.0.1-alpha4',
294 silly addNameRange     '0.0.1-alpha5',
294 silly addNameRange     '0.0.1-alpha6',
294 silly addNameRange     '0.0.1',
294 silly addNameRange     '0.0.2',
294 silly addNameRange     '0.0.3',
294 silly addNameRange     '0.0.4',
294 silly addNameRange     '0.0.5',
294 silly addNameRange     '0.0.6',
294 silly addNameRange     '0.0.7',
294 silly addNameRange     '0.0.8',
294 silly addNameRange     '0.1.0',
294 silly addNameRange     '0.2.0',
294 silly addNameRange     '0.3.0',
294 silly addNameRange     '0.3.1',
294 silly addNameRange     '0.3.2',
294 silly addNameRange     '0.3.3',
294 silly addNameRange     '0.3.4',
294 silly addNameRange     '0.3.6',
294 silly addNameRange     '0.4.0',
294 silly addNameRange     '0.5.0',
294 silly addNameRange     '0.6.0',
294 silly addNameRange     '0.7.0',
294 silly addNameRange     '0.7.1',
294 silly addNameRange     '0.8.0',
294 silly addNameRange     '0.8.1',
294 silly addNameRange     '0.9.0',
294 silly addNameRange     '0.10.0',
294 silly addNameRange     '0.10.1',
294 silly addNameRange     '0.10.2',
294 silly addNameRange     '0.11.0',
294 silly addNameRange     '0.12.0',
294 silly addNameRange     '0.12.1',
294 silly addNameRange     '0.13.0',
294 silly addNameRange     '0.14.0',
294 silly addNameRange     '0.14.1',
294 silly addNameRange     '1.0.0',
294 silly addNameRange     '1.0.1',
294 silly addNameRange     '1.0.2',
294 silly addNameRange     '1.0.3',
294 silly addNameRange     '1.1.0',
294 silly addNameRange     '1.2.0',
294 silly addNameRange     '1.2.1',
294 silly addNameRange     '1.2.2',
294 silly addNameRange     '1.3.0',
294 silly addNameRange     '1.3.1',
294 silly addNameRange     '1.3.2',
294 silly addNameRange     '1.4.0',
294 silly addNameRange     '1.4.1',
294 silly addNameRange     '1.4.2',
294 silly addNameRange     '1.4.3',
294 silly addNameRange     '1.5.0',
294 silly addNameRange     '1.6.0',
294 silly addNameRange     '1.7.0',
294 silly addNameRange     '1.7.1',
294 silly addNameRange     '1.7.2',
294 silly addNameRange     '1.7.3',
294 silly addNameRange     '1.7.4',
294 silly addNameRange     '1.8.0',
294 silly addNameRange     '1.8.1',
294 silly addNameRange     '1.8.2',
294 silly addNameRange     '1.9.0',
294 silly addNameRange     '1.10.0',
294 silly addNameRange     '1.11.0',
294 silly addNameRange     '1.12.0' ] ]
295 verbose addNamed [ 'mocha', '1.12.0' ]
296 verbose addNamed [ '1.12.0', '1.12.0' ]
297 silly lockFile 0c423f39-mocha-1-12-0 mocha@1.12.0
298 verbose lock mocha@1.12.0 /home/eric/.npm/0c423f39-mocha-1-12-0.lock
299 verbose read json /home/eric/.npm/mocha/1.12.0/package/package.json
300 silly lockFile 0c423f39-mocha-1-12-0 mocha@1.12.0
301 silly lockFile 0c423f39-mocha-1-12-0 mocha@1.12.0
302 silly lockFile 9b8cb677-mocha-1-12-x mocha@1.12.x
303 silly lockFile 9b8cb677-mocha-1-12-x mocha@1.12.x
304 http 304 https://registry.npmjs.org/mkdirp/0.3.5
305 silly registry.get cb [ 304,
305 silly registry.get   { server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
305 silly registry.get     etag: '"A3251S0G3NT2AB7LYIM1NH7UK"',
305 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:54 GMT',
305 silly registry.get     'content-length': '0' } ]
306 verbose etag mkdirp/0.3.5 from cache
307 verbose read json /home/eric/.npm/mkdirp/0.3.5/package/package.json
308 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
309 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
310 http 200 https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz
311 http 200 https://registry.npmjs.org/which
312 silly registry.get cb [ 200,
312 silly registry.get   { vary: 'Accept',
312 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
312 silly registry.get     etag: '"43PJVZ0U2IY5DUOK5LXY2JGYD"',
312 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:54 GMT',
312 silly registry.get     'content-type': 'application/json',
312 silly registry.get     'content-length': '5953' } ]
313 silly addNameRange number 2 { name: 'which', range: '>=1.0.5- <1.1.0-', hasData: true }
314 silly addNameRange versions [ 'which', [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '1.0.5' ] ]
315 verbose addNamed [ 'which', '1.0.5' ]
316 verbose addNamed [ '1.0.5', '1.0.5' ]
317 silly lockFile 4aed4494-which-1-0-5 which@1.0.5
318 verbose lock which@1.0.5 /home/eric/.npm/4aed4494-which-1-0-5.lock
319 silly lockFile 9c4bb536--npmjs-org-which-which-1-0-5-tgz https://registry.npmjs.org/which/-/which-1.0.5.tgz
320 verbose lock https://registry.npmjs.org/which/-/which-1.0.5.tgz /home/eric/.npm/9c4bb536--npmjs-org-which-which-1-0-5-tgz.lock
321 verbose addRemoteTarball [ 'https://registry.npmjs.org/which/-/which-1.0.5.tgz',
321 verbose addRemoteTarball   '5630d6819dda692f1464462e7956cb42c0842739' ]
322 info retry fetch attempt 1 at 21:24:53
323 verbose fetch to= /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/tmp.tgz
324 http GET https://registry.npmjs.org/which/-/which-1.0.5.tgz
325 http 200 https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz
326 silly shasum updated bytes 11845
327 info shasum b78875b088ccc3c0afa3eceb3ce3244b1b52390c
327 info shasum /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/tmp.tgz
328 verbose tar unpack /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/tmp.tgz
329 silly lockFile 14dfb111-90105-0-6638598351273686-package /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package
330 verbose lock /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package /home/eric/.npm/14dfb111-90105-0-6638598351273686-package.lock
331 silly lockFile 918228ba-90105-0-6638598351273686-tmp-tgz /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/tmp.tgz
332 verbose lock /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/tmp.tgz /home/eric/.npm/918228ba-90105-0-6638598351273686-tmp-tgz.lock
333 silly gunzTarPerm modes [ '755', '644' ]
334 silly gunzTarPerm extractEntry package.json
335 silly gunzTarPerm extractEntry .npmignore
336 silly gunzTarPerm extractEntry README.md
337 silly gunzTarPerm extractEntry LICENSE
338 silly gunzTarPerm extractEntry config-defs.js
339 silly gunzTarPerm extractEntry npmconf.js
340 silly gunzTarPerm extractEntry test/00-setup.js
341 silly gunzTarPerm extractEntry test/basic.js
342 silly gunzTarPerm extractEntry test/builtin.js
343 silly gunzTarPerm extractEntry test/save.js
344 silly gunzTarPerm extractEntry test/fixtures/builtin
345 silly gunzTarPerm extractEntry test/fixtures/globalconfig
346 silly gunzTarPerm extractEntry test/fixtures/userconfig
347 verbose read json /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package/package.json
348 silly lockFile 14dfb111-90105-0-6638598351273686-package /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package
349 silly lockFile 14dfb111-90105-0-6638598351273686-package /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package
350 silly lockFile 918228ba-90105-0-6638598351273686-tmp-tgz /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/tmp.tgz
351 silly lockFile 918228ba-90105-0-6638598351273686-tmp-tgz /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/tmp.tgz
352 verbose from cache /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package/package.json
353 verbose tar pack [ '/home/eric/.npm/npmconf/0.0.24/package.tgz',
353 verbose tar pack   '/home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package' ]
354 verbose tarball /home/eric/.npm/npmconf/0.0.24/package.tgz
355 verbose folder /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package
356 silly lockFile 14dfb111-90105-0-6638598351273686-package /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package
357 verbose lock /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package /home/eric/.npm/14dfb111-90105-0-6638598351273686-package.lock
358 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
359 verbose lock /home/eric/.npm/npmconf/0.0.24/package.tgz /home/eric/.npm/36ff404d-c-npm-npmconf-0-0-24-package-tgz.lock
360 silly lockFile 14dfb111-90105-0-6638598351273686-package /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package
361 silly lockFile 14dfb111-90105-0-6638598351273686-package /home/eric/tmp/npm-10959/1376763890105-0.6638598351273686/package
362 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
363 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
364 silly lockFile 9e7beb7f--eric-npm-npmconf-0-0-24-package /home/eric/.npm/npmconf/0.0.24/package
365 verbose lock /home/eric/.npm/npmconf/0.0.24/package /home/eric/.npm/9e7beb7f--eric-npm-npmconf-0-0-24-package.lock
366 silly lockFile 9e7beb7f--eric-npm-npmconf-0-0-24-package /home/eric/.npm/npmconf/0.0.24/package
367 silly lockFile 9e7beb7f--eric-npm-npmconf-0-0-24-package /home/eric/.npm/npmconf/0.0.24/package
368 verbose tar unpack /home/eric/.npm/npmconf/0.0.24/package.tgz
369 silly lockFile 9e7beb7f--eric-npm-npmconf-0-0-24-package /home/eric/.npm/npmconf/0.0.24/package
370 verbose lock /home/eric/.npm/npmconf/0.0.24/package /home/eric/.npm/9e7beb7f--eric-npm-npmconf-0-0-24-package.lock
371 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
372 verbose lock /home/eric/.npm/npmconf/0.0.24/package.tgz /home/eric/.npm/36ff404d-c-npm-npmconf-0-0-24-package-tgz.lock
373 silly gunzTarPerm modes [ '755', '644' ]
374 silly gunzTarPerm extractEntry package.json
375 silly gunzTarPerm extractEntry .npmignore
376 silly gunzTarPerm extractEntry README.md
377 silly gunzTarPerm extractEntry LICENSE
378 silly gunzTarPerm extractEntry config-defs.js
379 silly gunzTarPerm extractEntry npmconf.js
380 silly gunzTarPerm extractEntry test/save.js
381 silly gunzTarPerm extractEntry test/builtin.js
382 silly gunzTarPerm extractEntry test/00-setup.js
383 silly gunzTarPerm extractEntry test/basic.js
384 silly gunzTarPerm extractEntry test/fixtures/userconfig
385 silly gunzTarPerm extractEntry test/fixtures/globalconfig
386 silly gunzTarPerm extractEntry test/fixtures/builtin
387 verbose read json /home/eric/.npm/npmconf/0.0.24/package/package.json
388 silly lockFile 9e7beb7f--eric-npm-npmconf-0-0-24-package /home/eric/.npm/npmconf/0.0.24/package
389 silly lockFile 9e7beb7f--eric-npm-npmconf-0-0-24-package /home/eric/.npm/npmconf/0.0.24/package
390 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
391 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
392 silly shasum updated bytes 11832
393 info shasum a14d89b1c352bcfd4e107b3af7f577f548293b0a
393 info shasum /home/eric/.npm/npmconf/0.0.24/package.tgz
394 verbose from cache /home/eric/.npm/npmconf/0.0.24/package/package.json
395 verbose chmod /home/eric/.npm/npmconf/0.0.24/package.tgz 644
396 verbose chown /home/eric/.npm/npmconf/0.0.24/package.tgz [ 1000, 1000 ]
397 silly lockFile 9d788611-s-org-npmconf-npmconf-0-0-24-tgz https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz
398 silly lockFile 9d788611-s-org-npmconf-npmconf-0-0-24-tgz https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz
399 silly lockFile af02651e-npmconf-0-0-24 npmconf@0.0.24
400 silly lockFile af02651e-npmconf-0-0-24 npmconf@0.0.24
401 http 200 https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz
402 silly shasum updated bytes 4826
403 info shasum abcc6cbd3ec2ed2a729ff6e7c1fa8f01784a8574
403 info shasum /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/tmp.tgz
404 verbose tar unpack /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/tmp.tgz
405 silly lockFile c9adc5bd-90159-0-4994703137781471-package /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package
406 verbose lock /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package /home/eric/.npm/c9adc5bd-90159-0-4994703137781471-package.lock
407 silly lockFile dc096259-90159-0-4994703137781471-tmp-tgz /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/tmp.tgz
408 verbose lock /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/tmp.tgz /home/eric/.npm/dc096259-90159-0-4994703137781471-tmp-tgz.lock
409 silly gunzTarPerm modes [ '755', '644' ]
410 silly gunzTarPerm extractEntry package.json
411 silly gunzTarPerm extractEntry .npmignore
412 silly gunzTarPerm extractEntry README.md
413 silly gunzTarPerm extractEntry .travis.yml
414 silly gunzTarPerm extractEntry bin/ncp
415 silly gunzTarPerm extractEntry lib/ncp.js
416 silly gunzTarPerm extractEntry LICENSE.md
417 silly gunzTarPerm extractEntry test/ncp-test.js
418 silly gunzTarPerm extractEntry test/fixtures/src/a
419 silly gunzTarPerm extractEntry test/fixtures/src/b
420 silly gunzTarPerm extractEntry test/fixtures/src/c
421 silly gunzTarPerm extractEntry test/fixtures/src/d
422 silly gunzTarPerm extractEntry test/fixtures/src/e
423 silly gunzTarPerm extractEntry test/fixtures/src/f
424 silly gunzTarPerm extractEntry test/fixtures/src/sub/a
425 silly gunzTarPerm extractEntry test/fixtures/src/sub/b
426 verbose read json /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package/package.json
427 silly lockFile c9adc5bd-90159-0-4994703137781471-package /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package
428 silly lockFile c9adc5bd-90159-0-4994703137781471-package /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package
429 silly lockFile dc096259-90159-0-4994703137781471-tmp-tgz /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/tmp.tgz
430 silly lockFile dc096259-90159-0-4994703137781471-tmp-tgz /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/tmp.tgz
431 verbose from cache /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package/package.json
432 verbose tar pack [ '/home/eric/.npm/ncp/0.4.2/package.tgz',
432 verbose tar pack   '/home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package' ]
433 verbose tarball /home/eric/.npm/ncp/0.4.2/package.tgz
434 verbose folder /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package
435 silly lockFile c9adc5bd-90159-0-4994703137781471-package /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package
436 verbose lock /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package /home/eric/.npm/c9adc5bd-90159-0-4994703137781471-package.lock
437 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
438 verbose lock /home/eric/.npm/ncp/0.4.2/package.tgz /home/eric/.npm/cf232116-e-eric-npm-ncp-0-4-2-package-tgz.lock
439 silly lockFile c9adc5bd-90159-0-4994703137781471-package /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package
440 silly lockFile c9adc5bd-90159-0-4994703137781471-package /home/eric/tmp/npm-10959/1376763890159-0.4994703137781471/package
441 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
442 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
443 silly lockFile 772f5768-home-eric-npm-ncp-0-4-2-package /home/eric/.npm/ncp/0.4.2/package
444 verbose lock /home/eric/.npm/ncp/0.4.2/package /home/eric/.npm/772f5768-home-eric-npm-ncp-0-4-2-package.lock
445 silly lockFile 772f5768-home-eric-npm-ncp-0-4-2-package /home/eric/.npm/ncp/0.4.2/package
446 silly lockFile 772f5768-home-eric-npm-ncp-0-4-2-package /home/eric/.npm/ncp/0.4.2/package
447 verbose tar unpack /home/eric/.npm/ncp/0.4.2/package.tgz
448 silly lockFile 772f5768-home-eric-npm-ncp-0-4-2-package /home/eric/.npm/ncp/0.4.2/package
449 verbose lock /home/eric/.npm/ncp/0.4.2/package /home/eric/.npm/772f5768-home-eric-npm-ncp-0-4-2-package.lock
450 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
451 verbose lock /home/eric/.npm/ncp/0.4.2/package.tgz /home/eric/.npm/cf232116-e-eric-npm-ncp-0-4-2-package-tgz.lock
452 silly gunzTarPerm modes [ '755', '644' ]
453 silly gunzTarPerm extractEntry package.json
454 silly gunzTarPerm extractEntry .npmignore
455 silly gunzTarPerm extractEntry README.md
456 silly gunzTarPerm extractEntry bin/ncp
457 silly gunzTarPerm extractEntry .travis.yml
458 silly gunzTarPerm extractEntry lib/ncp.js
459 silly gunzTarPerm extractEntry test/ncp-test.js
460 silly gunzTarPerm extractEntry test/fixtures/src/b
461 silly gunzTarPerm extractEntry test/fixtures/src/c
462 silly gunzTarPerm extractEntry test/fixtures/src/d
463 silly gunzTarPerm extractEntry test/fixtures/src/sub/b
464 silly gunzTarPerm extractEntry test/fixtures/src/sub/a
465 silly gunzTarPerm extractEntry test/fixtures/src/f
466 silly gunzTarPerm extractEntry test/fixtures/src/a
467 silly gunzTarPerm extractEntry test/fixtures/src/e
468 silly gunzTarPerm extractEntry LICENSE.md
469 verbose read json /home/eric/.npm/ncp/0.4.2/package/package.json
470 silly lockFile 772f5768-home-eric-npm-ncp-0-4-2-package /home/eric/.npm/ncp/0.4.2/package
471 silly lockFile 772f5768-home-eric-npm-ncp-0-4-2-package /home/eric/.npm/ncp/0.4.2/package
472 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
473 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
474 silly shasum updated bytes 4827
475 info shasum 838ca836fcbf817328ac8a27a978374a81cfa383
475 info shasum /home/eric/.npm/ncp/0.4.2/package.tgz
476 verbose from cache /home/eric/.npm/ncp/0.4.2/package/package.json
477 verbose chmod /home/eric/.npm/ncp/0.4.2/package.tgz 644
478 verbose chown /home/eric/.npm/ncp/0.4.2/package.tgz [ 1000, 1000 ]
479 silly lockFile b3172d45-stry-npmjs-org-ncp-ncp-0-4-2-tgz https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz
480 silly lockFile b3172d45-stry-npmjs-org-ncp-ncp-0-4-2-tgz https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz
481 silly lockFile e43cb36a-ncp-0-4-2 ncp@0.4.2
482 silly lockFile e43cb36a-ncp-0-4-2 ncp@0.4.2
483 http 200 https://registry.npmjs.org/which/-/which-1.0.5.tgz
484 silly shasum updated bytes 2504
485 info shasum 5630d6819dda692f1464462e7956cb42c0842739
485 info shasum /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/tmp.tgz
486 verbose tar unpack /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/tmp.tgz
487 silly lockFile 97e19876-3461-0-11866261903196573-package /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package
488 verbose lock /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package /home/eric/.npm/97e19876-3461-0-11866261903196573-package.lock
489 silly lockFile 7083fb89-3461-0-11866261903196573-tmp-tgz /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/tmp.tgz
490 verbose lock /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/tmp.tgz /home/eric/.npm/7083fb89-3461-0-11866261903196573-tmp-tgz.lock
491 silly gunzTarPerm modes [ '755', '644' ]
492 silly gunzTarPerm extractEntry bin/
493 silly gunzTarPerm extractEntry bin/which
494 silly gunzTarPerm extractEntry LICENSE
495 silly gunzTarPerm extractEntry package.json
496 silly gunzTarPerm extractEntry README.md
497 silly gunzTarPerm extractEntry which.js
498 verbose read json /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package/package.json
499 silly lockFile 97e19876-3461-0-11866261903196573-package /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package
500 silly lockFile 97e19876-3461-0-11866261903196573-package /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package
501 silly lockFile 7083fb89-3461-0-11866261903196573-tmp-tgz /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/tmp.tgz
502 silly lockFile 7083fb89-3461-0-11866261903196573-tmp-tgz /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/tmp.tgz
503 verbose from cache /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package/package.json
504 verbose tar pack [ '/home/eric/.npm/which/1.0.5/package.tgz',
504 verbose tar pack   '/home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package' ]
505 verbose tarball /home/eric/.npm/which/1.0.5/package.tgz
506 verbose folder /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package
507 silly lockFile 97e19876-3461-0-11866261903196573-package /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package
508 verbose lock /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package /home/eric/.npm/97e19876-3461-0-11866261903196573-package.lock
509 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
510 verbose lock /home/eric/.npm/which/1.0.5/package.tgz /home/eric/.npm/016a8f98-eric-npm-which-1-0-5-package-tgz.lock
511 silly lockFile 97e19876-3461-0-11866261903196573-package /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package
512 silly lockFile 97e19876-3461-0-11866261903196573-package /home/eric/tmp/npm-10959/1376763893461-0.11866261903196573/package
513 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
514 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
515 silly lockFile d67aee56-ome-eric-npm-which-1-0-5-package /home/eric/.npm/which/1.0.5/package
516 verbose lock /home/eric/.npm/which/1.0.5/package /home/eric/.npm/d67aee56-ome-eric-npm-which-1-0-5-package.lock
517 silly lockFile d67aee56-ome-eric-npm-which-1-0-5-package /home/eric/.npm/which/1.0.5/package
518 silly lockFile d67aee56-ome-eric-npm-which-1-0-5-package /home/eric/.npm/which/1.0.5/package
519 verbose tar unpack /home/eric/.npm/which/1.0.5/package.tgz
520 silly lockFile d67aee56-ome-eric-npm-which-1-0-5-package /home/eric/.npm/which/1.0.5/package
521 verbose lock /home/eric/.npm/which/1.0.5/package /home/eric/.npm/d67aee56-ome-eric-npm-which-1-0-5-package.lock
522 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
523 verbose lock /home/eric/.npm/which/1.0.5/package.tgz /home/eric/.npm/016a8f98-eric-npm-which-1-0-5-package-tgz.lock
524 silly gunzTarPerm modes [ '755', '644' ]
525 silly gunzTarPerm extractEntry package.json
526 silly gunzTarPerm extractEntry README.md
527 silly gunzTarPerm extractEntry LICENSE
528 silly gunzTarPerm extractEntry which.js
529 silly gunzTarPerm extractEntry bin/which
530 verbose read json /home/eric/.npm/which/1.0.5/package/package.json
531 silly lockFile d67aee56-ome-eric-npm-which-1-0-5-package /home/eric/.npm/which/1.0.5/package
532 silly lockFile d67aee56-ome-eric-npm-which-1-0-5-package /home/eric/.npm/which/1.0.5/package
533 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
534 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
535 silly shasum updated bytes 2462
536 info shasum 061486f5423bbb98bb42bc77501271b0f9f8139b
536 info shasum /home/eric/.npm/which/1.0.5/package.tgz
537 verbose from cache /home/eric/.npm/which/1.0.5/package/package.json
538 verbose chmod /home/eric/.npm/which/1.0.5/package.tgz 644
539 verbose chown /home/eric/.npm/which/1.0.5/package.tgz [ 1000, 1000 ]
540 silly lockFile 9c4bb536--npmjs-org-which-which-1-0-5-tgz https://registry.npmjs.org/which/-/which-1.0.5.tgz
541 silly lockFile 9c4bb536--npmjs-org-which-which-1-0-5-tgz https://registry.npmjs.org/which/-/which-1.0.5.tgz
542 silly lockFile 4aed4494-which-1-0-5 which@1.0.5
543 silly lockFile 4aed4494-which-1-0-5 which@1.0.5
544 silly lockFile d158d65e-which-1-0-5 which@~1.0.5
545 silly lockFile d158d65e-which-1-0-5 which@~1.0.5
546 http 200 https://registry.npmjs.org/rimraf
547 silly registry.get cb [ 200,
547 silly registry.get   { vary: 'Accept',
547 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
547 silly registry.get     etag: '"50X3LWQDSY1SAULXQ7QRKW4PE"',
547 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:53 GMT',
547 silly registry.get     'content-type': 'application/json',
547 silly registry.get     'content-length': '35001' } ]
548 silly addNameRange number 2 { name: 'rimraf', range: '>=2.0.2- <2.1.0-', hasData: true }
549 silly addNameRange versions [ 'rimraf',
549 silly addNameRange   [ '1.0.0',
549 silly addNameRange     '1.0.1',
549 silly addNameRange     '1.0.2',
549 silly addNameRange     '1.0.4',
549 silly addNameRange     '1.0.5',
549 silly addNameRange     '1.0.6',
549 silly addNameRange     '1.0.7',
549 silly addNameRange     '1.0.8',
549 silly addNameRange     '1.0.9',
549 silly addNameRange     '2.0.0',
549 silly addNameRange     '2.0.1',
549 silly addNameRange     '2.0.2',
549 silly addNameRange     '2.0.3',
549 silly addNameRange     '2.1.0',
549 silly addNameRange     '2.1.1',
549 silly addNameRange     '2.1.2',
549 silly addNameRange     '2.1.3',
549 silly addNameRange     '2.1.4',
549 silly addNameRange     '2.2.0',
549 silly addNameRange     '2.2.1',
549 silly addNameRange     '2.2.2' ] ]
550 verbose addNamed [ 'rimraf', '2.0.3' ]
551 verbose addNamed [ '2.0.3', '2.0.3' ]
552 silly lockFile 166fc4dd-rimraf-2-0-3 rimraf@2.0.3
553 verbose lock rimraf@2.0.3 /home/eric/.npm/166fc4dd-rimraf-2-0-3.lock
554 silly lockFile bcfae994-pmjs-org-rimraf-rimraf-2-0-3-tgz https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz
555 verbose lock https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz /home/eric/.npm/bcfae994-pmjs-org-rimraf-rimraf-2-0-3-tgz.lock
556 verbose addRemoteTarball [ 'https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz',
556 verbose addRemoteTarball   'f50a2965e7144e9afd998982f15df706730f56a9' ]
557 info retry fetch attempt 1 at 21:25:07
558 verbose fetch to= /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/tmp.tgz
559 http GET https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz
560 silly shasum updated bytes 24418
561 info shasum e801cedeb5bd9a4e98d699c5c0f4239e2731dcbf
561 info shasum /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/tmp.tgz
562 verbose tar unpack /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/tmp.tgz
563 silly lockFile 7d16b413-9994-0-41701222606934607-package /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package
564 verbose lock /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package /home/eric/.npm/7d16b413-9994-0-41701222606934607-package.lock
565 silly lockFile 933dda8f-9994-0-41701222606934607-tmp-tgz /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/tmp.tgz
566 verbose lock /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/tmp.tgz /home/eric/.npm/933dda8f-9994-0-41701222606934607-tmp-tgz.lock
567 silly gunzTarPerm modes [ '755', '644' ]
568 silly gunzTarPerm extractEntry package.json
569 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
570 silly gunzTarPerm extractEntry README.md
571 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
572 silly gunzTarPerm extractEntry zipEntry.js
573 silly gunzTarPerm modified mode [ 'zipEntry.js', 438, 420 ]
574 silly gunzTarPerm extractEntry sandbox.js
575 silly gunzTarPerm modified mode [ 'sandbox.js', 438, 420 ]
576 silly gunzTarPerm extractEntry adm-zip.js
577 silly gunzTarPerm modified mode [ 'adm-zip.js', 438, 420 ]
578 silly gunzTarPerm extractEntry zipFile.js
579 silly gunzTarPerm modified mode [ 'zipFile.js', 438, 420 ]
580 silly gunzTarPerm extractEntry MIT-LICENSE.txt
581 silly gunzTarPerm modified mode [ 'MIT-LICENSE.txt', 438, 420 ]
582 silly gunzTarPerm extractEntry methods/deflater.js
583 silly gunzTarPerm modified mode [ 'methods/deflater.js', 438, 420 ]
584 silly gunzTarPerm extractEntry methods/index.js
585 silly gunzTarPerm modified mode [ 'methods/index.js', 438, 420 ]
586 silly gunzTarPerm extractEntry methods/inflater.js
587 silly gunzTarPerm modified mode [ 'methods/inflater.js', 438, 420 ]
588 silly gunzTarPerm extractEntry util/constants.js
589 silly gunzTarPerm modified mode [ 'util/constants.js', 438, 420 ]
590 silly gunzTarPerm extractEntry util/errors.js
591 silly gunzTarPerm modified mode [ 'util/errors.js', 438, 420 ]
592 silly gunzTarPerm extractEntry util/fattr.js
593 silly gunzTarPerm modified mode [ 'util/fattr.js', 438, 420 ]
594 silly gunzTarPerm extractEntry util/index.js
595 silly gunzTarPerm modified mode [ 'util/index.js', 438, 420 ]
596 silly gunzTarPerm extractEntry util/utils.js
597 silly gunzTarPerm modified mode [ 'util/utils.js', 438, 420 ]
598 silly gunzTarPerm extractEntry headers/dataHeader.js
599 silly gunzTarPerm modified mode [ 'headers/dataHeader.js', 438, 420 ]
600 silly gunzTarPerm extractEntry headers/entryHeader.js
601 silly gunzTarPerm modified mode [ 'headers/entryHeader.js', 438, 420 ]
602 silly gunzTarPerm extractEntry headers/index.js
603 silly gunzTarPerm modified mode [ 'headers/index.js', 438, 420 ]
604 silly gunzTarPerm extractEntry headers/mainHeader.js
605 silly gunzTarPerm modified mode [ 'headers/mainHeader.js', 438, 420 ]
606 silly gunzTarPerm extractEntry .travis.yml
607 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
608 verbose read json /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package/package.json
609 silly lockFile 7d16b413-9994-0-41701222606934607-package /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package
610 silly lockFile 7d16b413-9994-0-41701222606934607-package /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package
611 silly lockFile 933dda8f-9994-0-41701222606934607-tmp-tgz /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/tmp.tgz
612 silly lockFile 933dda8f-9994-0-41701222606934607-tmp-tgz /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/tmp.tgz
613 verbose from cache /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package/package.json
614 verbose tar pack [ '/home/eric/.npm/adm-zip/0.2.1/package.tgz',
614 verbose tar pack   '/home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package' ]
615 verbose tarball /home/eric/.npm/adm-zip/0.2.1/package.tgz
616 verbose folder /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package
617 silly lockFile 7d16b413-9994-0-41701222606934607-package /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package
618 verbose lock /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package /home/eric/.npm/7d16b413-9994-0-41701222606934607-package.lock
619 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
620 verbose lock /home/eric/.npm/adm-zip/0.2.1/package.tgz /home/eric/.npm/b31c8def-ic-npm-adm-zip-0-2-1-package-tgz.lock
621 silly lockFile 7d16b413-9994-0-41701222606934607-package /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package
622 silly lockFile 7d16b413-9994-0-41701222606934607-package /home/eric/tmp/npm-10959/1376763889994-0.41701222606934607/package
623 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
624 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
625 silly lockFile 4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package /home/eric/.npm/adm-zip/0.2.1/package
626 verbose lock /home/eric/.npm/adm-zip/0.2.1/package /home/eric/.npm/4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package.lock
627 silly lockFile 4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package /home/eric/.npm/adm-zip/0.2.1/package
628 silly lockFile 4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package /home/eric/.npm/adm-zip/0.2.1/package
629 verbose tar unpack /home/eric/.npm/adm-zip/0.2.1/package.tgz
630 silly lockFile 4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package /home/eric/.npm/adm-zip/0.2.1/package
631 verbose lock /home/eric/.npm/adm-zip/0.2.1/package /home/eric/.npm/4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package.lock
632 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
633 verbose lock /home/eric/.npm/adm-zip/0.2.1/package.tgz /home/eric/.npm/b31c8def-ic-npm-adm-zip-0-2-1-package-tgz.lock
634 silly gunzTarPerm modes [ '755', '644' ]
635 silly gunzTarPerm extractEntry package.json
636 silly gunzTarPerm extractEntry README.md
637 silly gunzTarPerm extractEntry sandbox.js
638 silly gunzTarPerm extractEntry zipFile.js
639 silly gunzTarPerm extractEntry adm-zip.js
640 silly gunzTarPerm extractEntry zipEntry.js
641 silly gunzTarPerm extractEntry MIT-LICENSE.txt
642 silly gunzTarPerm extractEntry .travis.yml
643 silly gunzTarPerm extractEntry methods/inflater.js
644 silly gunzTarPerm extractEntry methods/index.js
645 silly gunzTarPerm extractEntry methods/deflater.js
646 silly gunzTarPerm extractEntry headers/index.js
647 silly gunzTarPerm extractEntry headers/dataHeader.js
648 silly gunzTarPerm extractEntry headers/mainHeader.js
649 silly gunzTarPerm extractEntry headers/entryHeader.js
650 silly gunzTarPerm extractEntry util/constants.js
651 silly gunzTarPerm extractEntry util/fattr.js
652 silly gunzTarPerm extractEntry util/index.js
653 silly gunzTarPerm extractEntry util/utils.js
654 silly gunzTarPerm extractEntry util/errors.js
655 verbose read json /home/eric/.npm/adm-zip/0.2.1/package/package.json
656 silly lockFile 4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package /home/eric/.npm/adm-zip/0.2.1/package
657 silly lockFile 4a7bd5cd-e-eric-npm-adm-zip-0-2-1-package /home/eric/.npm/adm-zip/0.2.1/package
658 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
659 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
660 silly shasum updated bytes 24536
661 info shasum d6cd7185ad7027dd62fa990141a110d2da1676e2
661 info shasum /home/eric/.npm/adm-zip/0.2.1/package.tgz
662 verbose from cache /home/eric/.npm/adm-zip/0.2.1/package/package.json
663 verbose chmod /home/eric/.npm/adm-zip/0.2.1/package.tgz 644
664 verbose chown /home/eric/.npm/adm-zip/0.2.1/package.tgz [ 1000, 1000 ]
665 silly lockFile 4638a7dc-js-org-adm-zip-adm-zip-0-2-1-tgz https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz
666 silly lockFile 4638a7dc-js-org-adm-zip-adm-zip-0-2-1-tgz https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz
667 silly lockFile 56d2b9bc-adm-zip-0-2-1 adm-zip@0.2.1
668 silly lockFile 56d2b9bc-adm-zip-0-2-1 adm-zip@0.2.1
669 http 200 https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz
670 silly shasum updated bytes 3398
671 info shasum f50a2965e7144e9afd998982f15df706730f56a9
671 info shasum /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/tmp.tgz
672 verbose tar unpack /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/tmp.tgz
673 silly lockFile 88f61da5-07681-0-7352487118914723-package /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package
674 verbose lock /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package /home/eric/.npm/88f61da5-07681-0-7352487118914723-package.lock
675 silly lockFile 9471fd91-07681-0-7352487118914723-tmp-tgz /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/tmp.tgz
676 verbose lock /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/tmp.tgz /home/eric/.npm/9471fd91-07681-0-7352487118914723-tmp-tgz.lock
677 silly gunzTarPerm modes [ '755', '644' ]
678 silly gunzTarPerm extractEntry package.json
679 silly gunzTarPerm extractEntry README.md
680 silly gunzTarPerm extractEntry LICENSE
681 silly gunzTarPerm extractEntry rimraf.js
682 silly gunzTarPerm extractEntry AUTHORS
683 silly gunzTarPerm extractEntry test/test-async.js
684 silly gunzTarPerm extractEntry test/test-fiber.js
685 silly gunzTarPerm extractEntry test/test-sync.js
686 silly gunzTarPerm extractEntry test/run.sh
687 silly gunzTarPerm extractEntry test/setup.sh
688 verbose read json /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package/package.json
689 silly lockFile 88f61da5-07681-0-7352487118914723-package /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package
690 silly lockFile 88f61da5-07681-0-7352487118914723-package /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package
691 silly lockFile 9471fd91-07681-0-7352487118914723-tmp-tgz /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/tmp.tgz
692 silly lockFile 9471fd91-07681-0-7352487118914723-tmp-tgz /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/tmp.tgz
693 verbose from cache /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package/package.json
694 verbose tar pack [ '/home/eric/.npm/rimraf/2.0.3/package.tgz',
694 verbose tar pack   '/home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package' ]
695 verbose tarball /home/eric/.npm/rimraf/2.0.3/package.tgz
696 verbose folder /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package
697 silly lockFile 88f61da5-07681-0-7352487118914723-package /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package
698 verbose lock /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package /home/eric/.npm/88f61da5-07681-0-7352487118914723-package.lock
699 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
700 verbose lock /home/eric/.npm/rimraf/2.0.3/package.tgz /home/eric/.npm/02ef958c-ric-npm-rimraf-2-0-3-package-tgz.lock
701 silly lockFile 88f61da5-07681-0-7352487118914723-package /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package
702 silly lockFile 88f61da5-07681-0-7352487118914723-package /home/eric/tmp/npm-10959/1376763907681-0.7352487118914723/package
703 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
704 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
705 silly lockFile 85d992f3-me-eric-npm-rimraf-2-0-3-package /home/eric/.npm/rimraf/2.0.3/package
706 verbose lock /home/eric/.npm/rimraf/2.0.3/package /home/eric/.npm/85d992f3-me-eric-npm-rimraf-2-0-3-package.lock
707 silly lockFile 85d992f3-me-eric-npm-rimraf-2-0-3-package /home/eric/.npm/rimraf/2.0.3/package
708 silly lockFile 85d992f3-me-eric-npm-rimraf-2-0-3-package /home/eric/.npm/rimraf/2.0.3/package
709 verbose tar unpack /home/eric/.npm/rimraf/2.0.3/package.tgz
710 silly lockFile 85d992f3-me-eric-npm-rimraf-2-0-3-package /home/eric/.npm/rimraf/2.0.3/package
711 verbose lock /home/eric/.npm/rimraf/2.0.3/package /home/eric/.npm/85d992f3-me-eric-npm-rimraf-2-0-3-package.lock
712 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
713 verbose lock /home/eric/.npm/rimraf/2.0.3/package.tgz /home/eric/.npm/02ef958c-ric-npm-rimraf-2-0-3-package-tgz.lock
714 silly gunzTarPerm modes [ '755', '644' ]
715 silly gunzTarPerm extractEntry package.json
716 silly gunzTarPerm extractEntry README.md
717 silly gunzTarPerm extractEntry LICENSE
718 silly gunzTarPerm extractEntry rimraf.js
719 silly gunzTarPerm extractEntry test/test-fiber.js
720 silly gunzTarPerm extractEntry test/test-async.js
721 silly gunzTarPerm extractEntry test/test-sync.js
722 silly gunzTarPerm extractEntry test/setup.sh
723 silly gunzTarPerm extractEntry test/run.sh
724 silly gunzTarPerm extractEntry AUTHORS
725 verbose read json /home/eric/.npm/rimraf/2.0.3/package/package.json
726 silly lockFile 85d992f3-me-eric-npm-rimraf-2-0-3-package /home/eric/.npm/rimraf/2.0.3/package
727 silly lockFile 85d992f3-me-eric-npm-rimraf-2-0-3-package /home/eric/.npm/rimraf/2.0.3/package
728 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
729 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
730 silly shasum updated bytes 3389
731 info shasum f911f2df742898d45bb577ddbf2fc1555e8e7321
731 info shasum /home/eric/.npm/rimraf/2.0.3/package.tgz
732 verbose from cache /home/eric/.npm/rimraf/2.0.3/package/package.json
733 verbose chmod /home/eric/.npm/rimraf/2.0.3/package.tgz 644
734 verbose chown /home/eric/.npm/rimraf/2.0.3/package.tgz [ 1000, 1000 ]
735 silly lockFile bcfae994-pmjs-org-rimraf-rimraf-2-0-3-tgz https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz
736 silly lockFile bcfae994-pmjs-org-rimraf-rimraf-2-0-3-tgz https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz
737 silly lockFile 166fc4dd-rimraf-2-0-3 rimraf@2.0.3
738 silly lockFile 166fc4dd-rimraf-2-0-3 rimraf@2.0.3
739 silly lockFile 723423b4-rimraf-2-0-2 rimraf@~2.0.2
740 silly lockFile 723423b4-rimraf-2-0-2 rimraf@~2.0.2
741 http 200 https://registry.npmjs.org/kew
742 silly registry.get cb [ 200,
742 silly registry.get   { vary: 'Accept',
742 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
742 silly registry.get     etag: '"6WI80ZVN9X93ARMY7LQ4OODM8"',
742 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:53 GMT',
742 silly registry.get     'content-type': 'application/json',
742 silly registry.get     'content-length': '77086' } ]
743 silly addNameRange number 2 { name: 'kew', range: '>=0.1.7- <0.2.0-', hasData: true }
744 silly addNameRange versions [ 'kew',
744 silly addNameRange   [ '0.0.1',
744 silly addNameRange     '0.0.2',
744 silly addNameRange     '0.0.3',
744 silly addNameRange     '0.0.4',
744 silly addNameRange     '0.1.0',
744 silly addNameRange     '0.1.1',
744 silly addNameRange     '0.1.2',
744 silly addNameRange     '0.1.3',
744 silly addNameRange     '0.1.4',
744 silly addNameRange     '0.1.5',
744 silly addNameRange     '0.1.6',
744 silly addNameRange     '0.1.7' ] ]
745 verbose addNamed [ 'kew', '0.1.7' ]
746 verbose addNamed [ '0.1.7', '0.1.7' ]
747 silly lockFile 69cee516-kew-0-1-7 kew@0.1.7
748 verbose lock kew@0.1.7 /home/eric/.npm/69cee516-kew-0-1-7.lock
749 silly lockFile aec53095-stry-npmjs-org-kew-kew-0-1-7-tgz https://registry.npmjs.org/kew/-/kew-0.1.7.tgz
750 verbose lock https://registry.npmjs.org/kew/-/kew-0.1.7.tgz /home/eric/.npm/aec53095-stry-npmjs-org-kew-kew-0-1-7-tgz.lock
751 verbose addRemoteTarball [ 'https://registry.npmjs.org/kew/-/kew-0.1.7.tgz',
751 verbose addRemoteTarball   '0a32a817ff1a9b3b12b8c9bacf4bc4d679af8e72' ]
752 info retry fetch attempt 1 at 21:25:20
753 verbose fetch to= /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/tmp.tgz
754 http GET https://registry.npmjs.org/kew/-/kew-0.1.7.tgz
755 http 200 https://registry.npmjs.org/kew/-/kew-0.1.7.tgz
756 silly shasum updated bytes 12143
757 info shasum 0a32a817ff1a9b3b12b8c9bacf4bc4d679af8e72
757 info shasum /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/tmp.tgz
758 verbose tar unpack /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/tmp.tgz
759 silly lockFile a27d43d0-0681-0-32481650076806545-package /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package
760 verbose lock /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package /home/eric/.npm/a27d43d0-0681-0-32481650076806545-package.lock
761 silly lockFile 5d1925b5-0681-0-32481650076806545-tmp-tgz /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/tmp.tgz
762 verbose lock /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/tmp.tgz /home/eric/.npm/5d1925b5-0681-0-32481650076806545-tmp-tgz.lock
763 silly gunzTarPerm modes [ '755', '644' ]
764 silly gunzTarPerm extractEntry package.json
765 silly gunzTarPerm extractEntry .npmignore
766 silly gunzTarPerm extractEntry README.md
767 silly gunzTarPerm extractEntry kew.js
768 silly gunzTarPerm extractEntry LICENSE.TXT
769 silly gunzTarPerm extractEntry test/chain.js
770 silly gunzTarPerm extractEntry test/context.js
771 silly gunzTarPerm extractEntry test/defer.js
772 silly gunzTarPerm extractEntry test/static.js
773 verbose read json /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package/package.json
774 silly lockFile a27d43d0-0681-0-32481650076806545-package /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package
775 silly lockFile a27d43d0-0681-0-32481650076806545-package /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package
776 silly lockFile 5d1925b5-0681-0-32481650076806545-tmp-tgz /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/tmp.tgz
777 silly lockFile 5d1925b5-0681-0-32481650076806545-tmp-tgz /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/tmp.tgz
778 verbose from cache /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package/package.json
779 verbose tar pack [ '/home/eric/.npm/kew/0.1.7/package.tgz',
779 verbose tar pack   '/home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package' ]
780 verbose tarball /home/eric/.npm/kew/0.1.7/package.tgz
781 verbose folder /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package
782 silly lockFile a27d43d0-0681-0-32481650076806545-package /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package
783 verbose lock /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package /home/eric/.npm/a27d43d0-0681-0-32481650076806545-package.lock
784 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
785 verbose lock /home/eric/.npm/kew/0.1.7/package.tgz /home/eric/.npm/99ef8962-e-eric-npm-kew-0-1-7-package-tgz.lock
786 silly lockFile a27d43d0-0681-0-32481650076806545-package /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package
787 silly lockFile a27d43d0-0681-0-32481650076806545-package /home/eric/tmp/npm-10959/1376763920681-0.32481650076806545/package
788 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
789 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
790 silly lockFile bdb82101-home-eric-npm-kew-0-1-7-package /home/eric/.npm/kew/0.1.7/package
791 verbose lock /home/eric/.npm/kew/0.1.7/package /home/eric/.npm/bdb82101-home-eric-npm-kew-0-1-7-package.lock
792 silly lockFile bdb82101-home-eric-npm-kew-0-1-7-package /home/eric/.npm/kew/0.1.7/package
793 silly lockFile bdb82101-home-eric-npm-kew-0-1-7-package /home/eric/.npm/kew/0.1.7/package
794 verbose tar unpack /home/eric/.npm/kew/0.1.7/package.tgz
795 silly lockFile bdb82101-home-eric-npm-kew-0-1-7-package /home/eric/.npm/kew/0.1.7/package
796 verbose lock /home/eric/.npm/kew/0.1.7/package /home/eric/.npm/bdb82101-home-eric-npm-kew-0-1-7-package.lock
797 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
798 verbose lock /home/eric/.npm/kew/0.1.7/package.tgz /home/eric/.npm/99ef8962-e-eric-npm-kew-0-1-7-package-tgz.lock
799 silly gunzTarPerm modes [ '755', '644' ]
800 silly gunzTarPerm extractEntry package.json
801 silly gunzTarPerm extractEntry .npmignore
802 silly gunzTarPerm extractEntry README.md
803 silly gunzTarPerm extractEntry kew.js
804 silly gunzTarPerm extractEntry LICENSE.TXT
805 silly gunzTarPerm extractEntry test/defer.js
806 silly gunzTarPerm extractEntry test/chain.js
807 silly gunzTarPerm extractEntry test/context.js
808 silly gunzTarPerm extractEntry test/static.js
809 verbose read json /home/eric/.npm/kew/0.1.7/package/package.json
810 silly lockFile bdb82101-home-eric-npm-kew-0-1-7-package /home/eric/.npm/kew/0.1.7/package
811 silly lockFile bdb82101-home-eric-npm-kew-0-1-7-package /home/eric/.npm/kew/0.1.7/package
812 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
813 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
814 silly shasum updated bytes 12180
815 info shasum c41fbeddb6576d70b9e0652aeb7f3d23863e92c9
815 info shasum /home/eric/.npm/kew/0.1.7/package.tgz
816 verbose from cache /home/eric/.npm/kew/0.1.7/package/package.json
817 verbose chmod /home/eric/.npm/kew/0.1.7/package.tgz 644
818 verbose chown /home/eric/.npm/kew/0.1.7/package.tgz [ 1000, 1000 ]
819 silly lockFile aec53095-stry-npmjs-org-kew-kew-0-1-7-tgz https://registry.npmjs.org/kew/-/kew-0.1.7.tgz
820 silly lockFile aec53095-stry-npmjs-org-kew-kew-0-1-7-tgz https://registry.npmjs.org/kew/-/kew-0.1.7.tgz
821 silly lockFile 69cee516-kew-0-1-7 kew@0.1.7
822 silly lockFile 69cee516-kew-0-1-7 kew@0.1.7
823 silly lockFile fbc33e87-kew-0-1-7 kew@~0.1.7
824 silly lockFile fbc33e87-kew-0-1-7 kew@~0.1.7
825 silly resolved [ { name: 'mkdirp',
825 silly resolved     description: 'Recursively mkdir, like `mkdir -p`',
825 silly resolved     version: '0.3.5',
825 silly resolved     author:
825 silly resolved      { name: 'James Halliday',
825 silly resolved        email: 'mail@substack.net',
825 silly resolved        url: 'http://substack.net' },
825 silly resolved     main: './index',
825 silly resolved     keywords: [ 'mkdir', 'directory' ],
825 silly resolved     repository:
825 silly resolved      { type: 'git',
825 silly resolved        url: 'http://github.com/substack/node-mkdirp.git' },
825 silly resolved     scripts: { test: 'tap test/*.js' },
825 silly resolved     devDependencies: { tap: '~0.4.0' },
825 silly resolved     license: 'MIT',
825 silly resolved     readme: '# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require(\'mkdirp\');\n    \nmkdirp(\'/tmp/foo/bar/baz\', function (err) {\n    if (err) console.error(err)\n    else console.log(\'pow!\')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require(\'mkdirp\');\n```\n\n## mkdirp(dir, mode, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\n## mkdirp.sync(dir, mode)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\n# license\n\nMIT\n',
825 silly resolved     readmeFilename: 'readme.markdown',
825 silly resolved     _id: 'mkdirp@0.3.5',
825 silly resolved     _from: 'mkdirp@0.3.5' },
825 silly resolved   { name: 'npmconf',
825 silly resolved     version: '0.0.24',
825 silly resolved     description: 'The config thing npm uses',
825 silly resolved     main: 'npmconf.js',
825 silly resolved     directories: { test: 'test' },
825 silly resolved     dependencies:
825 silly resolved      { 'config-chain': '~1.1.1',
825 silly resolved        inherits: '~1.0.0',
825 silly resolved        once: '~1.1.1',
825 silly resolved        mkdirp: '~0.3.3',
825 silly resolved        osenv: '0.0.3',
825 silly resolved        nopt: '2',
825 silly resolved        semver: '~1.1.0',
825 silly resolved        ini: '~1.1.0' },
825 silly resolved     devDependencies: {},
825 silly resolved     scripts: { test: 'tap test/*.js' },
825 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/npmconf' },
825 silly resolved     keywords: [ 'npm', 'config', 'config-chain', 'conf', 'ini' ],
825 silly resolved     author:
825 silly resolved      { name: 'Isaac Z. Schlueter',
825 silly resolved        email: 'i@izs.me',
825 silly resolved        url: 'http://blog.izs.me' },
825 silly resolved     license: 'BSD',
825 silly resolved     readme: '# npmconf\n\nThe config thing npm uses\n\nIf you are interested in interacting with the config settings that npm\nuses, then use this module.\n\nHowever, if you are writing a new Node.js program, and want\nconfiguration functionality similar to what npm has, but for your\nown thing, then I\'d recommend using [rc](https://github.com/dominictarr/rc),\nwhich is probably what you want.\n\nIf I were to do it all over again, that\'s what I\'d do for npm.  But,\nalas, there are many systems depending on many of the particulars of\nnpm\'s configuration setup, so it\'s not worth the cost of changing.\n\n## USAGE\n\n```javascript\nvar npmconf = require(\'npmconf\')\n\n// pass in the cli options that you read from the cli\n// or whatever top-level configs you want npm to use for now.\nnpmconf.load({some:\'configs\'}, function (er, conf) {\n  // do stuff with conf\n  conf.get(\'some\', \'cli\') // \'configs\'\n  conf.get(\'username\') // \'joebobwhatevers\'\n  conf.set(\'foo\', \'bar\', \'user\')\n  conf.save(\'user\', function (er) {\n    // foo = bar is now saved to ~/.npmrc or wherever\n  })\n})\n```\n',
825 silly resolved     readmeFilename: 'README.md',
825 silly resolved     _id: 'npmconf@0.0.24',
825 silly resolved     dist: { shasum: 'a14d89b1c352bcfd4e107b3af7f577f548293b0a' },
825 silly resolved     _from: 'npmconf@0.0.24',
825 silly resolved     _resolved: 'https://registry.npmjs.org/npmconf/-/npmconf-0.0.24.tgz' },
825 silly resolved   { name: 'ncp',
825 silly resolved     version: '0.4.2',
825 silly resolved     author: { name: 'AvianFlu', email: 'charlie@charlieistheman.com' },
825 silly resolved     description: 'Asynchronous recursive file copy utility.',
825 silly resolved     bin: { ncp: './bin/ncp' },
825 silly resolved     devDependencies: { vows: '0.6.x', rimraf: '1.0.x', 'read-dir-files': '0.0.x' },
825 silly resolved     main: './lib/ncp.js',
825 silly resolved     repository: { type: 'git', url: 'https://github.com/AvianFlu/ncp.git' },
825 silly resolved     keywords: [ 'cli', 'copy' ],
825 silly resolved     license: 'MIT',
825 silly resolved     engine: { node: '>=0.4' },
825 silly resolved     scripts: { test: 'vows --isolate --spec' },
825 silly resolved     readme: '# ncp - Asynchronous recursive file & directory copying\n\n[![Build Status](https://secure.travis-ci.org/AvianFlu/ncp.png)](http://travis-ci.org/AvianFlu/ncp)\n\nThink `cp -r`, but pure node, and asynchronous.  `ncp` can be used both as a CLI tool and programmatically.\n\n## Command Line usage\n\nUsage is simple: `ncp [source] [dest] [--limit=concurrency limit]\n[--filter=filter] --stopOnErr`\n\nThe \'filter\' is a Regular Expression - matched files will be copied.\n\nThe \'concurrency limit\' is an integer that represents how many pending file system requests `ncp` has at a time.\n\n\'stopOnErr\' is a boolean flag that will tell `ncp` to stop immediately if any\nerrors arise, rather than attempting to continue while logging errors.\n\nIf there are no errors, `ncp` will output `done.` when complete.  If there are errors, the error messages will be logged to `stdout` and to `./ncp-debug.log`, and the copy operation will attempt to continue.\n\n## Programmatic usage\n\nProgrammatic usage of `ncp` is just as simple.  The only argument to the completion callback is a possible error.  \n\n```javascript\nvar ncp = require(\'ncp\').ncp;\n\nncp.limit = 16;\n\nncp(source, destination, function (err) {\n if (err) {\n   return console.error(err);\n }\n console.log(\'done!\');\n});\n```\n\nYou can also call ncp like `ncp(source, destination, options, callback)`. \n`options` should be a dictionary. Currently, such options are available:\n\n  * `options.filter` - a `RegExp` instance, against which each file name is\n  tested to determine whether to copy it or not, or a function taking single\n  parameter: copied file name, returning `true` or `false`, determining\n  whether to copy file or not.\n\n  * `options.transform` - a function: `function (read, write) { read.pipe(write) }`\n  used to apply streaming transforms while copying.\n\n  * `options.clobber` - boolean=true. if set to false, `ncp` will not overwrite \n  destination files that already exist.\n\nPlease open an issue if any bugs arise.  As always, I accept (working) pull requests, and refunds are available at `/dev/null`.\n',
825 silly resolved     readmeFilename: 'README.md',
825 silly resolved     _id: 'ncp@0.4.2',
825 silly resolved     dist: { shasum: '838ca836fcbf817328ac8a27a978374a81cfa383' },
825 silly resolved     _from: 'ncp@0.4.2',
825 silly resolved     _resolved: 'https://registry.npmjs.org/ncp/-/ncp-0.4.2.tgz' },
825 silly resolved   { author:
825 silly resolved      { name: 'Isaac Z. Schlueter',
825 silly resolved        email: 'i@izs.me',
825 silly resolved        url: 'http://blog.izs.me' },
825 silly resolved     name: 'which',
825 silly resolved     description: 'Like which(1) unix command. Find the first instance of an executable in the PATH.',
825 silly resolved     version: '1.0.5',
825 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/node-which.git' },
825 silly resolved     main: 'which.js',
825 silly resolved     bin: { which: './bin/which' },
825 silly resolved     engines: { node: '*' },
825 silly resolved     dependencies: {},
825 silly resolved     devDependencies: {},
825 silly resolved     readme: 'The "which" util from npm\'s guts.\n\nFinds the first instance of a specified executable in the PATH\nenvironment variable.  Does not cache the results, so `hash -r` is not\nneeded when the PATH changes.\n',
825 silly resolved     readmeFilename: 'README.md',
825 silly resolved     _id: 'which@1.0.5',
825 silly resolved     dist: { shasum: '061486f5423bbb98bb42bc77501271b0f9f8139b' },
825 silly resolved     _from: 'which@~1.0.5',
825 silly resolved     _resolved: 'https://registry.npmjs.org/which/-/which-1.0.5.tgz' },
825 silly resolved   { name: 'adm-zip',
825 silly resolved     version: '0.2.1',
825 silly resolved     description: 'A Javascript implementation of zip for nodejs. Allows user to create or extract zip files both in memory or to/from disk',
825 silly resolved     keywords: [ 'zip', 'methods', 'archive', 'unzip' ],
825 silly resolved     homepage: 'http://github.com/cthackers/adm-zip',
825 silly resolved     author:
825 silly resolved      { name: 'Nasca Iacob',
825 silly resolved        email: 'sy@another-d-mention.ro',
825 silly resolved        url: 'https://github.com/cthackers' },
825 silly resolved     bugs:
825 silly resolved      { email: 'sy@another-d-mention.ro',
825 silly resolved        url: 'https://github.com/cthackers/adm-zip/issues' },
825 silly resolved     licenses: [ [Object] ],
825 silly resolved     main: 'adm-zip.js',
825 silly resolved     repository:
825 silly resolved      { type: 'git',
825 silly resolved        url: 'git://github.com/git@github.com:cthackers/adm-zip.git' },
825 silly resolved     engines: { node: '>=0.3.0' },
825 silly resolved     readme: '# ADM-ZIP for NodeJS\r\n\r\nADM-ZIP is a pure JavaScript implementation for zip data compression for [NodeJS](http://nodejs.org/). \r\n\r\n# Installation\r\n\r\nWith [npm](http://npmjs.org) do:\r\n\r\n    $ npm install adm-zip\r\n\t\r\n## What is it good for?\r\nThe library allows you to:\r\n\r\n* decompress zip files directly to disk or in memory buffers\r\n* compress files and store them to disk in .zip format or in compressed buffers\r\n* update content of/add new/delete files from an existing .zip\r\n\r\n# Dependencies\r\nThere are no other nodeJS libraries that ADM-ZIP is dependent of\r\n\r\n# Examples\r\n\r\n## Basic usage\r\n```javascript\r\n\r\n\tvar AdmZip = require(\'adm-zip\');\r\n\r\n\t// reading archives\r\n\tvar zip = new AdmZip("./my_file.zip");\r\n\tvar zipEntries = zip.getEntries(); // an array of ZipEntry records\r\n\r\n\tzipEntries.forEach(function(zipEntry) {\r\n\t    console.log(zipEntry.toString()); // outputs zip entries information\r\n\t\tif (zipEntry.entryName == "my_file.txt") {\r\n\t\t     console.log(zipEntry.data.toString(\'utf8\')); \r\n\t\t}\r\n\t});\r\n\t// outputs the content of some_folder/my_file.txt\r\n\tconsole.log(zip.readAsText("some_folder/my_file.txt")); \r\n\t// extracts the specified file to the specified location\r\n\tzip.extractEntryTo(/*entry name*/"some_folder/my_file.txt", /*target path*/"/home/me/tempfolder", /*overwrite*/true)\r\n\t// extracts everything\r\n\tzip.extractAllTo(/*target path*/"/home/me/zipcontent/", /*overwrite*/true);\r\n\t\r\n\t\r\n\t// creating archives\r\n\tvar zip = new AdmZip();\r\n\t\r\n\t// add file directly\r\n\tzip.addFile("test.txt", new Buffer("inner content of the file"), "entry comment goes here");\r\n\t// add local file\r\n\tzip.addLocalFile("/home/me/some_picture.png");\r\n\t// get everything as a buffer\r\n\tvar willSendthis = zip.toBuffer();\r\n\t// or write everything to disk\r\n\tzip.writeZip(/*target file name*/"/home/me/files.zip");\r\n\t\r\n\t\r\n\t// ... more examples in the wiki\r\n```\r\n\r\nFor more detailed information please check out the [wiki](https://github.com/cthackers/adm-zip/wiki).\n\n[![build status](https://secure.travis-ci.org/cthackers/adm-zip.png)](http://travis-ci.org/cthackers/adm-zip)',
825 silly resolved     readmeFilename: 'README.md',
825 silly resolved     _id: 'adm-zip@0.2.1',
825 silly resolved     dist: { shasum: 'd6cd7185ad7027dd62fa990141a110d2da1676e2' },
825 silly resolved     _from: 'adm-zip@0.2.1',
825 silly resolved     _resolved: 'https://registry.npmjs.org/adm-zip/-/adm-zip-0.2.1.tgz' },
825 silly resolved   { name: 'rimraf',
825 silly resolved     version: '2.0.3',
825 silly resolved     main: 'rimraf.js',
825 silly resolved     description: 'A deep deletion module for node (like `rm -rf`)',
825 silly resolved     author:
825 silly resolved      { name: 'Isaac Z. Schlueter',
825 silly resolved        email: 'i@izs.me',
825 silly resolved        url: 'http://blog.izs.me/' },
825 silly resolved     license:
825 silly resolved      { type: 'MIT',
825 silly resolved        url: 'https://github.com/isaacs/rimraf/raw/master/LICENSE' },
825 silly resolved     optionalDependencies: { 'graceful-fs': '~1.1' },
825 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/rimraf.git' },
825 silly resolved     scripts: { test: 'cd test && bash run.sh' },
825 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object] ],
825 silly resolved     readme: 'A `rm -rf` for node.\n\nInstall with `npm install rimraf`, or just drop rimraf.js somewhere.\n\n## API\n\n`rimraf(f, callback)`\n\nThe callback will be called with an error if there is one.  Certain\nerrors are handled for you:\n\n* `EBUSY` -  rimraf will back off a maximum of opts.maxBusyTries times\n  before giving up.\n* `EMFILE` - If too many file descriptors get opened, rimraf will\n  patiently wait until more become available.\n\n\n## rimraf.sync\n\nIt can remove stuff synchronously, too.  But that\'s not so good.  Use\nthe async API.  It\'s better.\n',
825 silly resolved     readmeFilename: 'README.md',
825 silly resolved     _id: 'rimraf@2.0.3',
825 silly resolved     dependencies: { 'graceful-fs': '~1.1' },
825 silly resolved     dist: { shasum: 'f911f2df742898d45bb577ddbf2fc1555e8e7321' },
825 silly resolved     _from: 'rimraf@~2.0.2',
825 silly resolved     _resolved: 'https://registry.npmjs.org/rimraf/-/rimraf-2.0.3.tgz' },
825 silly resolved   { name: 'kew',
825 silly resolved     description: 'a lightweight promise library for node',
825 silly resolved     version: '0.1.7',
825 silly resolved     homepage: 'https://github.com/Obvious/kew',
825 silly resolved     authors: [ 'Jeremy Stanley <github@azulus.com> (https://github.com/azulus)' ],
825 silly resolved     contributors: [],
825 silly resolved     keywords: [ 'kew', 'promises' ],
825 silly resolved     main: './kew.js',
825 silly resolved     repository: { type: 'git', url: 'https://github.com/Obvious/kew.git' },
825 silly resolved     dependencies: {},
825 silly resolved     devDependencies: { nodeunit: '0.7.4' },
825 silly resolved     scripts: { test: './node_modules/nodeunit/bin/nodeunit test' },
825 silly resolved     readme: 'kew: a lightweight (and super fast) promise/deferred framework for node.js\n==================================\n\n**kew** is a lightweight promise framework with an aim of providing a base set of functionality similar to that provided by the [Q library](https://github.com/kriskowal/q "Q").\n\nA few answers (for a few questions)\n-------\n\n*Why\'d we write it?*\n\nDuring our initial usage of **Q** we found that it was consuming 80% of the cpu under load (primarily in chained database callbacks). We spent some time looking at patching **Q** and ultimately found that creating our own lightweight library for server-usage would suit our needs better than figuring out how to make a large cross-platform library more performant on one very specific platform.\n\n*So this does everything Q does?*\n\nNope! **Q** is still an awesome library and does *way* more than **kew**. We support a tiny subset of the **Q** functionality (the subset that we happen to use in our actual use cases).\n\nWhat are Promises?\n-------\n\nAt its core, a *Promise* is a promise to return a value at some point in the future. A *Promise* represents a value that will be (or may return an error if something goes wrong). *Promises* heavily reduce the complexity of asynchronous coding in node.js-like environments. Example:\n\n```javascript\n// assuming the getUrlContent() function exists and retrieves the content of a url\nvar htmlPromise = getUrlContent(myUrl)\n\n// we can then filter that through an http parser (our imaginary parseHtml() function) asynchronously (or maybe synchronously, who knows)\nvar tagsPromise = htmlPromise.then(parseHtml)\n\n// and then filter it through another function (getLinks()) which retrieves only the link tags\nvar linksPromise = tagsPromise.then(getLinks)\n\n// and then parses the actual urls from the links (using parseUrlsFromLinks())\nvar urlsPromise = linksPromise.then(linksPromise)\n\n// finally, we have a promise that should only provide us with the urls and will run once all the previous steps have ran\nurlsPromise.then(function (urls) {\n  // do something with the urls\n})\n```\n\nHow do I use **kew**?\n-------\n\nAs a precursor to all the examples, the following code must be at the top of your page:\n\n```javascript\nvar Q = require(\'kew\')\n```\n\n### Convert a literal into a promise\n\nThe easiest way to start a promise chain is by creating a new promise with a specified literal using Q.resolve() or Q.reject()\n\n```javascript\n// create a promise which passes a value to the next then() call\nvar successPromise = Q.resolve(val)\n\n// create a promise which throws an error to be caught by the next fail() call\nvar failPromise = Q.reject(err)\n```\n\nIn addition, you can create deferreds which can be used if you need to create a promise but resolve it later:\n\n```javascript\n// create the deferreds\nvar successDefer = Q.defer()\nvar failDefer = Q.defer()\n\n// resolve or reject the defers in 1 second\nsetTimeout(function () {\n  successDefer.resolve("ok")\n  failDefer.reject(new Error("this failed"))\n}, 1000)\n\n// extract promises from the deferreds\nvar successPromise = successDefer.promise\nvar failPromise = failDefer.promise\n```\n\nIf you have a node-style callback (taking an **Error** as the first parameter and a response as the second), you can call the magic `makeNodeResolver()` function on a defer to allow the defer to handle the callbacks:\n\n```javascript\n// create the deferred\nvar defer = Q.defer()\n\n// some node-style function\ngetObjectFromDatabase(myObjectId, defer.makeNodeResolver())\n\n// grab the output\ndefer.promise\n  .then(function (obj) {\n    // successfully retrieved the object\n  })\n  .fail(function (e) {\n    // failed retrieving the object\n  })\n```\n\n### Handling successful results with `.then()`\n\nWhen a promise is resolved, you may call the `.then()` method to retrieve the value of the promise:\n\n```javascript\npromise.then(function (result) {\n  // do something with the result here\n})\n```\n\n`.then()` will in turn return a promise which will return the results of whatever it returns (asynchronously or not), allowing it to be chained indefinitely:\n\n```javascript\nQ.resolve(\'a\')\n  .then(function (result) {\n    return result + \'b\'\n  })\n  .then(function (result) {\n    return result + \'c\'\n  })\n  .then(function (result) {\n    // result should be \'abc\'\n  })\n```\n\nIn addition, `.then()` calls may return promises themselves, allowing for complex nesting of asynchronous calls in a flat manner:\n\n```javascript\nvar htmlPromise = getUrlContent(myUrl)\n\nvar tagsPromise = htmlPromise.then(function (html) {\n  if (!validHtml(html)) throw new Error("Invalid HTML")\n\n  // pretend that parseHtml() returns a promise and is asynchronous\n  return parseHtml(html)\n})\n```\n\n### Handling errors with `.fail()`\n\nIf a promise is rejected for some reason, you may handle the failure case with the `.fail()` function:\n\n```javascript\ngetObjectPromise\n  .fail(function (e) {\n    console.error("Failed to retrieve object", e)\n  })\n```\n\nLike `.then()`, `.fail()` also returns a promise. If the `.fail()` call does not throw an error, it will pass the return value of the `.fail()` handler to any `.then()` calls chained to it:\n\n```javascript\ngetObjectPromise\n  .fail(function (e) {\n    return retryGetObject(objId)\n  })\n  .then(function (obj) {\n    // yay, we received an object\n  })\n  .fail(function (e) {\n    // the retry failed :(\n    console.error("Retrieving the object \'" + objId + "\' failed")\n  })\n})\n```\n\nIf you\'ve reached the end of your promise chain, you may call `.end()` which signifies that the promise chain is ended and any errors should be thrown in whatever scope the code is currently in:\n\n```javascript\ngetObjectPromise\n  // this will throw an error to the uncaught exception handler if the getObjectPromise call is asynchronous\n  .end()\n```\n\n### `.fin()` when things are finished\n\nYou may attach a handler to a promise which will be ran regardless of whether the promise was resolved or rejected (but will only run upon completion). This is useful in the cases where you may have set up resources to run a request and wish to tear them down afterwards. `.fin()` will return the promise it is called upon:\n\n```javascript\nvar connection = db.connect()\n\nvar itemPromise = db.getItem(itemId)\n  .fin(function () {\n    db.close()\n  })\n```\n\nOther utility methods\n-------\n\nThere\'s only one utility method as of now:\n\n### `.all()` for many things\n\nIf you\'re waiting for multiple promises to return, you may pass them (mixed in with literals if you desire) into `.all()` which will create a promise that resolves successfully with an array of the results of the promises:\n\n```javascript\nvar promises = []\npromises.push(getUrlContent(url1))\npromises.push(getUrlContent(url2))\npromises.push(getUrlContent(url3))\n\nQ.all(promises)\n  .then(function (content) {\n    // content[0] === content for url 1\n    // content[1] === content for url 2\n    // content[2] === content for url 3\n  })\n```\n\nIf any of the promises fail, Q.all will fail as well (so make sure to guard your promises with a `.fail()` call beforehand if you don\'t care whether they succeed or not):\n\n```javascript\nvar promises = []\npromises.push(getUrlContent(url1))\npromises.push(getUrlContent(url2))\npromises.push(getUrlContent(url3))\n\nQ.all(promises)\n  .fail(function (e) {\n    console.log("Failed retrieving a url", e)\n  })\n```\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.\nSubmit them at [the project on GitHub](https://github.com/Obvious/kew/).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests that update\nthe test suite. Thanks!\n\n\nAuthor\n------\n\n[Jeremy Stanley](https://github.com/azulus)\nsupported by\n[The Obvious Corporation](http://obvious.com/).\n\n\nLicense\n-------\n\nCopyright 2013 [The Obvious Corporation](http://obvious.com/).\n\nLicensed under the Apache License, Version 2.0.\nSee the top-level file `LICENSE.TXT` and\n(http://www.apache.org/licenses/LICENSE-2.0).\n',
825 silly resolved     readmeFilename: 'README.md',
825 silly resolved     _id: 'kew@0.1.7',
825 silly resolved     dist: { shasum: 'c41fbeddb6576d70b9e0652aeb7f3d23863e92c9' },
825 silly resolved     _from: 'kew@~0.1.7',
825 silly resolved     _resolved: 'https://registry.npmjs.org/kew/-/kew-0.1.7.tgz' } ]
826 info install mkdirp@0.3.5 into /usr/local/lib/node_modules/phantomjs
827 info install npmconf@0.0.24 into /usr/local/lib/node_modules/phantomjs
828 info install ncp@0.4.2 into /usr/local/lib/node_modules/phantomjs
829 info install which@1.0.5 into /usr/local/lib/node_modules/phantomjs
830 info install adm-zip@0.2.1 into /usr/local/lib/node_modules/phantomjs
831 info install rimraf@2.0.3 into /usr/local/lib/node_modules/phantomjs
832 info install kew@0.1.7 into /usr/local/lib/node_modules/phantomjs
833 info installOne mkdirp@0.3.5
834 info installOne npmconf@0.0.24
835 info installOne ncp@0.4.2
836 info installOne which@1.0.5
837 info installOne adm-zip@0.2.1
838 info installOne rimraf@2.0.3
839 info installOne kew@0.1.7
840 verbose from cache /home/eric/.npm/mkdirp/0.3.5/package/package.json
841 verbose from cache /home/eric/.npm/npmconf/0.0.24/package/package.json
842 verbose from cache /home/eric/.npm/ncp/0.4.2/package/package.json
843 verbose from cache /home/eric/.npm/which/1.0.5/package/package.json
844 verbose from cache /home/eric/.npm/adm-zip/0.2.1/package/package.json
845 verbose from cache /home/eric/.npm/rimraf/2.0.3/package/package.json
846 verbose from cache /home/eric/.npm/kew/0.1.7/package/package.json
847 info /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp unbuild
848 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp/package.json
849 info /usr/local/lib/node_modules/phantomjs/node_modules/npmconf unbuild
850 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/npmconf/package.json
851 info /usr/local/lib/node_modules/phantomjs/node_modules/ncp unbuild
852 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/ncp/package.json
853 info /usr/local/lib/node_modules/phantomjs/node_modules/which unbuild
854 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/which/package.json
855 info /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip unbuild
856 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip/package.json
857 info /usr/local/lib/node_modules/phantomjs/node_modules/rimraf unbuild
858 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/package.json
859 info /usr/local/lib/node_modules/phantomjs/node_modules/kew unbuild
860 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/kew/package.json
861 verbose tar unpack /home/eric/.npm/mkdirp/0.3.5/package.tgz
862 verbose tar unpack /home/eric/.npm/npmconf/0.0.24/package.tgz
863 verbose tar unpack /home/eric/.npm/ncp/0.4.2/package.tgz
864 verbose tar unpack /home/eric/.npm/which/1.0.5/package.tgz
865 verbose tar unpack /home/eric/.npm/adm-zip/0.2.1/package.tgz
866 verbose tar unpack /home/eric/.npm/rimraf/2.0.3/package.tgz
867 verbose tar unpack /home/eric/.npm/kew/0.1.7/package.tgz
868 silly lockFile 25165d35-es-phantomjs-node-modules-mkdirp /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp
869 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp /home/eric/.npm/25165d35-es-phantomjs-node-modules-mkdirp.lock
870 silly lockFile 3ff2c634-ric-npm-mkdirp-0-3-5-package-tgz /home/eric/.npm/mkdirp/0.3.5/package.tgz
871 verbose lock /home/eric/.npm/mkdirp/0.3.5/package.tgz /home/eric/.npm/3ff2c634-ric-npm-mkdirp-0-3-5-package-tgz.lock
872 silly lockFile c52feb62-s-phantomjs-node-modules-npmconf /usr/local/lib/node_modules/phantomjs/node_modules/npmconf
873 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/npmconf /home/eric/.npm/c52feb62-s-phantomjs-node-modules-npmconf.lock
874 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
875 verbose lock /home/eric/.npm/npmconf/0.0.24/package.tgz /home/eric/.npm/36ff404d-c-npm-npmconf-0-0-24-package-tgz.lock
876 silly lockFile b99fb06d-dules-phantomjs-node-modules-ncp /usr/local/lib/node_modules/phantomjs/node_modules/ncp
877 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/ncp /home/eric/.npm/b99fb06d-dules-phantomjs-node-modules-ncp.lock
878 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
879 verbose lock /home/eric/.npm/ncp/0.4.2/package.tgz /home/eric/.npm/cf232116-e-eric-npm-ncp-0-4-2-package-tgz.lock
880 silly lockFile a13540d7-les-phantomjs-node-modules-which /usr/local/lib/node_modules/phantomjs/node_modules/which
881 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/which /home/eric/.npm/a13540d7-les-phantomjs-node-modules-which.lock
882 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
883 verbose lock /home/eric/.npm/which/1.0.5/package.tgz /home/eric/.npm/016a8f98-eric-npm-which-1-0-5-package-tgz.lock
884 silly lockFile c7f5e5c1-s-phantomjs-node-modules-adm-zip /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip
885 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip /home/eric/.npm/c7f5e5c1-s-phantomjs-node-modules-adm-zip.lock
886 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
887 verbose lock /home/eric/.npm/adm-zip/0.2.1/package.tgz /home/eric/.npm/b31c8def-ic-npm-adm-zip-0-2-1-package-tgz.lock
888 silly lockFile c467f83d-es-phantomjs-node-modules-rimraf /usr/local/lib/node_modules/phantomjs/node_modules/rimraf
889 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/rimraf /home/eric/.npm/c467f83d-es-phantomjs-node-modules-rimraf.lock
890 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
891 verbose lock /home/eric/.npm/rimraf/2.0.3/package.tgz /home/eric/.npm/02ef958c-ric-npm-rimraf-2-0-3-package-tgz.lock
892 silly lockFile 28b47dc5-dules-phantomjs-node-modules-kew /usr/local/lib/node_modules/phantomjs/node_modules/kew
893 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/kew /home/eric/.npm/28b47dc5-dules-phantomjs-node-modules-kew.lock
894 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
895 verbose lock /home/eric/.npm/kew/0.1.7/package.tgz /home/eric/.npm/99ef8962-e-eric-npm-kew-0-1-7-package-tgz.lock
896 silly gunzTarPerm modes [ '755', '644' ]
897 silly gunzTarPerm modes [ '755', '644' ]
898 silly gunzTarPerm modes [ '755', '644' ]
899 silly gunzTarPerm modes [ '755', '644' ]
900 silly gunzTarPerm modes [ '755', '644' ]
901 silly gunzTarPerm modes [ '755', '644' ]
902 silly gunzTarPerm modes [ '755', '644' ]
903 silly gunzTarPerm extractEntry package.json
904 silly gunzTarPerm extractEntry package.json
905 silly gunzTarPerm extractEntry package.json
906 silly gunzTarPerm extractEntry package.json
907 silly gunzTarPerm extractEntry package.json
908 silly gunzTarPerm extractEntry package.json
909 silly gunzTarPerm extractEntry .npmignore
910 silly gunzTarPerm extractEntry README.md
911 silly gunzTarPerm extractEntry .npmignore
912 silly gunzTarPerm extractEntry README.md
913 silly gunzTarPerm extractEntry README.md
914 silly gunzTarPerm extractEntry LICENSE
915 silly gunzTarPerm extractEntry README.md
916 silly gunzTarPerm extractEntry sandbox.js
917 silly gunzTarPerm extractEntry README.md
918 silly gunzTarPerm extractEntry LICENSE
919 silly gunzTarPerm extractEntry .npmignore
920 silly gunzTarPerm extractEntry README.md
921 silly gunzTarPerm extractEntry package.json
922 silly gunzTarPerm extractEntry .npmignore
923 silly gunzTarPerm extractEntry LICENSE
924 silly gunzTarPerm extractEntry LICENSE
925 silly gunzTarPerm extractEntry config-defs.js
926 silly gunzTarPerm extractEntry which.js
927 silly gunzTarPerm extractEntry bin/which
928 silly gunzTarPerm extractEntry rimraf.js
929 silly gunzTarPerm extractEntry test/test-fiber.js
930 silly gunzTarPerm extractEntry bin/ncp
931 silly gunzTarPerm extractEntry .travis.yml
932 silly gunzTarPerm extractEntry zipFile.js
933 silly gunzTarPerm extractEntry adm-zip.js
934 silly gunzTarPerm extractEntry kew.js
935 silly gunzTarPerm extractEntry LICENSE.TXT
936 silly gunzTarPerm extractEntry npmconf.js
937 silly gunzTarPerm extractEntry test/save.js
938 silly gunzTarPerm extractEntry index.js
939 silly gunzTarPerm extractEntry readme.markdown
940 silly gunzTarPerm extractEntry lib/ncp.js
941 silly gunzTarPerm extractEntry test/ncp-test.js
942 silly gunzTarPerm extractEntry test/test-async.js
943 silly gunzTarPerm extractEntry test/test-sync.js
944 silly gunzTarPerm extractEntry test/defer.js
945 silly gunzTarPerm extractEntry test/chain.js
946 silly gunzTarPerm extractEntry test/context.js
947 silly gunzTarPerm extractEntry zipEntry.js
948 silly gunzTarPerm extractEntry MIT-LICENSE.txt
949 silly gunzTarPerm extractEntry test/static.js
950 silly gunzTarPerm extractEntry examples/pow.js
951 silly gunzTarPerm extractEntry .travis.yml
952 silly gunzTarPerm extractEntry test/builtin.js
953 silly gunzTarPerm extractEntry test/00-setup.js
954 silly gunzTarPerm extractEntry test/fixtures/src/b
955 silly gunzTarPerm extractEntry test/fixtures/src/c
956 silly gunzTarPerm extractEntry test/setup.sh
957 silly gunzTarPerm extractEntry test/run.sh
958 silly gunzTarPerm extractEntry AUTHORS
959 silly gunzTarPerm extractEntry .travis.yml
960 silly gunzTarPerm extractEntry methods/inflater.js
961 silly gunzTarPerm extractEntry methods/index.js
962 silly gunzTarPerm extractEntry test/return.js
963 silly gunzTarPerm extractEntry test/mkdirp.js
964 silly gunzTarPerm extractEntry methods/deflater.js
965 silly gunzTarPerm extractEntry test/basic.js
966 silly gunzTarPerm extractEntry test/fixtures/userconfig
967 silly gunzTarPerm extractEntry test/fixtures/globalconfig
968 silly gunzTarPerm extractEntry headers/index.js
969 silly gunzTarPerm extractEntry test/fixtures/src/d
970 silly gunzTarPerm extractEntry test/fixtures/src/sub/b
971 silly gunzTarPerm extractEntry test/fixtures/builtin
972 silly gunzTarPerm extractEntry headers/dataHeader.js
973 silly gunzTarPerm extractEntry test/fixtures/src/sub/a
974 silly gunzTarPerm extractEntry test/fixtures/src/f
975 silly gunzTarPerm extractEntry test/fixtures/src/a
976 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/which/package.json
977 silly gunzTarPerm extractEntry test/root.js
978 silly gunzTarPerm extractEntry test/race.js
979 silly gunzTarPerm extractEntry headers/mainHeader.js
980 silly gunzTarPerm extractEntry headers/entryHeader.js
981 silly gunzTarPerm extractEntry util/constants.js
982 silly gunzTarPerm extractEntry test/fixtures/src/e
983 silly gunzTarPerm extractEntry test/chmod.js
984 silly gunzTarPerm extractEntry test/return_sync.js
985 silly lockFile a13540d7-les-phantomjs-node-modules-which /usr/local/lib/node_modules/phantomjs/node_modules/which
986 silly lockFile a13540d7-les-phantomjs-node-modules-which /usr/local/lib/node_modules/phantomjs/node_modules/which
987 silly gunzTarPerm extractEntry util/fattr.js
988 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
989 silly lockFile 016a8f98-eric-npm-which-1-0-5-package-tgz /home/eric/.npm/which/1.0.5/package.tgz
990 silly gunzTarPerm extractEntry util/index.js
991 info preinstall which@1.0.5
992 silly gunzTarPerm extractEntry LICENSE.md
993 silly gunzTarPerm extractEntry util/utils.js
994 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/which/package.json
995 silly gunzTarPerm extractEntry test/umask.js
996 silly gunzTarPerm extractEntry test/perm.js
997 silly gunzTarPerm extractEntry util/errors.js
998 silly gunzTarPerm extractEntry test/umask_sync.js
999 silly gunzTarPerm extractEntry test/rel.js
1000 silly gunzTarPerm extractEntry test/perm_sync.js
1001 silly gunzTarPerm extractEntry test/sync.js
1002 silly gunzTarPerm extractEntry test/clobber.js
1003 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/package.json
1004 silly lockFile c467f83d-es-phantomjs-node-modules-rimraf /usr/local/lib/node_modules/phantomjs/node_modules/rimraf
1005 silly lockFile c467f83d-es-phantomjs-node-modules-rimraf /usr/local/lib/node_modules/phantomjs/node_modules/rimraf
1006 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
1007 silly lockFile 02ef958c-ric-npm-rimraf-2-0-3-package-tgz /home/eric/.npm/rimraf/2.0.3/package.tgz
1008 info preinstall rimraf@2.0.3
1009 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/package.json
1010 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/ncp/package.json
1011 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/kew/package.json
1012 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/npmconf/package.json
1013 silly lockFile b99fb06d-dules-phantomjs-node-modules-ncp /usr/local/lib/node_modules/phantomjs/node_modules/ncp
1014 silly lockFile b99fb06d-dules-phantomjs-node-modules-ncp /usr/local/lib/node_modules/phantomjs/node_modules/ncp
1015 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
1016 silly lockFile cf232116-e-eric-npm-ncp-0-4-2-package-tgz /home/eric/.npm/ncp/0.4.2/package.tgz
1017 silly lockFile 28b47dc5-dules-phantomjs-node-modules-kew /usr/local/lib/node_modules/phantomjs/node_modules/kew
1018 silly lockFile 28b47dc5-dules-phantomjs-node-modules-kew /usr/local/lib/node_modules/phantomjs/node_modules/kew
1019 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
1020 silly lockFile 99ef8962-e-eric-npm-kew-0-1-7-package-tgz /home/eric/.npm/kew/0.1.7/package.tgz
1021 info preinstall ncp@0.4.2
1022 silly lockFile c52feb62-s-phantomjs-node-modules-npmconf /usr/local/lib/node_modules/phantomjs/node_modules/npmconf
1023 silly lockFile c52feb62-s-phantomjs-node-modules-npmconf /usr/local/lib/node_modules/phantomjs/node_modules/npmconf
1024 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/ncp/package.json
1025 info preinstall kew@0.1.7
1026 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
1027 silly lockFile 36ff404d-c-npm-npmconf-0-0-24-package-tgz /home/eric/.npm/npmconf/0.0.24/package.tgz
1028 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/kew/package.json
1029 info preinstall npmconf@0.0.24
1030 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/npmconf/package.json
1031 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp/package.json
1032 silly lockFile 25165d35-es-phantomjs-node-modules-mkdirp /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp
1033 silly lockFile 25165d35-es-phantomjs-node-modules-mkdirp /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp
1034 silly lockFile 3ff2c634-ric-npm-mkdirp-0-3-5-package-tgz /home/eric/.npm/mkdirp/0.3.5/package.tgz
1035 silly lockFile 3ff2c634-ric-npm-mkdirp-0-3-5-package-tgz /home/eric/.npm/mkdirp/0.3.5/package.tgz
1036 info preinstall mkdirp@0.3.5
1037 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp/package.json
1038 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip/package.json
1039 silly lockFile c7f5e5c1-s-phantomjs-node-modules-adm-zip /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip
1040 silly lockFile c7f5e5c1-s-phantomjs-node-modules-adm-zip /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip
1041 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
1042 silly lockFile b31c8def-ic-npm-adm-zip-0-2-1-package-tgz /home/eric/.npm/adm-zip/0.2.1/package.tgz
1043 info preinstall adm-zip@0.2.1
1044 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip/package.json
1045 verbose readDependencies using package.json deps
1046 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/which/package.json
1047 verbose readDependencies using package.json deps
1048 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/package.json
1049 verbose readDependencies using package.json deps
1050 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/ncp/package.json
1051 verbose readDependencies using package.json deps
1052 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/kew/package.json
1053 verbose readDependencies using package.json deps
1054 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/npmconf/package.json
1055 verbose readDependencies using package.json deps
1056 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp/package.json
1057 verbose readDependencies using package.json deps
1058 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip/package.json
1059 verbose readDependencies using package.json deps
1060 silly resolved []
1061 verbose about to build /usr/local/lib/node_modules/phantomjs/node_modules/which
1062 info build /usr/local/lib/node_modules/phantomjs/node_modules/which
1063 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/which/package.json
1064 verbose readDependencies using package.json deps
1065 verbose readDependencies using package.json deps
1066 silly resolved []
1067 verbose about to build /usr/local/lib/node_modules/phantomjs/node_modules/ncp
1068 info build /usr/local/lib/node_modules/phantomjs/node_modules/ncp
1069 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/ncp/package.json
1070 verbose readDependencies using package.json deps
1071 silly resolved []
1072 verbose about to build /usr/local/lib/node_modules/phantomjs/node_modules/kew
1073 info build /usr/local/lib/node_modules/phantomjs/node_modules/kew
1074 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/kew/package.json
1075 verbose readDependencies using package.json deps
1076 verbose readDependencies using package.json deps
1077 silly resolved []
1078 verbose about to build /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp
1079 info build /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp
1080 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/mkdirp/package.json
1081 verbose readDependencies using package.json deps
1082 silly resolved []
1083 verbose about to build /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip
1084 info build /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip
1085 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/adm-zip/package.json
1086 verbose linkStuff [ true,
1086 verbose linkStuff   '/usr/local/lib/node_modules',
1086 verbose linkStuff   false,
1086 verbose linkStuff   '/usr/local/lib/node_modules/phantomjs/node_modules' ]
1087 info linkStuff which@1.0.5
1088 verbose linkBins which@1.0.5
1089 verbose link bins [ { which: './bin/which' },
1089 verbose link bins   '/usr/local/lib/node_modules/phantomjs/node_modules/.bin',
1089 verbose link bins   false ]
1090 verbose linkMans which@1.0.5
1091 verbose rebuildBundles which@1.0.5
1092 verbose linkStuff [ true,
1092 verbose linkStuff   '/usr/local/lib/node_modules',
1092 verbose linkStuff   false,
1092 verbose linkStuff   '/usr/local/lib/node_modules/phantomjs/node_modules' ]
1093 info linkStuff ncp@0.4.2
1094 verbose linkBins ncp@0.4.2
1095 verbose link bins [ { ncp: './bin/ncp' },
1095 verbose link bins   '/usr/local/lib/node_modules/phantomjs/node_modules/.bin',
1095 verbose link bins   false ]
1096 verbose linkMans ncp@0.4.2
1097 verbose rebuildBundles ncp@0.4.2
1098 verbose linkStuff [ true,
1098 verbose linkStuff   '/usr/local/lib/node_modules',
1098 verbose linkStuff   false,
1098 verbose linkStuff   '/usr/local/lib/node_modules/phantomjs/node_modules' ]
1099 info linkStuff kew@0.1.7
1100 verbose linkBins kew@0.1.7
1101 verbose linkMans kew@0.1.7
1102 verbose rebuildBundles kew@0.1.7
1103 verbose linkStuff [ true,
1103 verbose linkStuff   '/usr/local/lib/node_modules',
1103 verbose linkStuff   false,
1103 verbose linkStuff   '/usr/local/lib/node_modules/phantomjs/node_modules' ]
1104 info linkStuff mkdirp@0.3.5
1105 verbose linkBins mkdirp@0.3.5
1106 verbose linkMans mkdirp@0.3.5
1107 verbose rebuildBundles mkdirp@0.3.5
1108 verbose linkStuff [ true,
1108 verbose linkStuff   '/usr/local/lib/node_modules',
1108 verbose linkStuff   false,
1108 verbose linkStuff   '/usr/local/lib/node_modules/phantomjs/node_modules' ]
1109 info linkStuff adm-zip@0.2.1
1110 verbose linkBins adm-zip@0.2.1
1111 verbose linkMans adm-zip@0.2.1
1112 verbose rebuildBundles adm-zip@0.2.1
1113 verbose cache add [ 'graceful-fs@~1.1', null ]
1114 verbose cache add name=undefined spec="graceful-fs@~1.1" args=["graceful-fs@~1.1",null]
1115 verbose parsed url { pathname: 'graceful-fs@~1.1',
1115 verbose parsed url   path: 'graceful-fs@~1.1',
1115 verbose parsed url   href: 'graceful-fs@~1.1' }
1116 verbose cache add name="graceful-fs" spec="~1.1" args=["graceful-fs","~1.1"]
1117 verbose parsed url { pathname: '~1.1', path: '~1.1', href: '~1.1' }
1118 verbose addNamed [ 'graceful-fs', '~1.1' ]
1119 verbose addNamed [ null, '>=1.1.0- <1.2.0-' ]
1120 silly lockFile 0502dd56-graceful-fs-1-1 graceful-fs@~1.1
1121 verbose lock graceful-fs@~1.1 /home/eric/.npm/0502dd56-graceful-fs-1-1.lock
1122 verbose cache add [ 'config-chain@~1.1.1', null ]
1123 verbose cache add name=undefined spec="config-chain@~1.1.1" args=["config-chain@~1.1.1",null]
1124 verbose parsed url { pathname: 'config-chain@~1.1.1',
1124 verbose parsed url   path: 'config-chain@~1.1.1',
1124 verbose parsed url   href: 'config-chain@~1.1.1' }
1125 verbose cache add name="config-chain" spec="~1.1.1" args=["config-chain","~1.1.1"]
1126 verbose parsed url { pathname: '~1.1.1', path: '~1.1.1', href: '~1.1.1' }
1127 verbose addNamed [ 'config-chain', '~1.1.1' ]
1128 verbose addNamed [ null, '>=1.1.1- <1.2.0-' ]
1129 silly lockFile b9689009-config-chain-1-1-1 config-chain@~1.1.1
1130 verbose lock config-chain@~1.1.1 /home/eric/.npm/b9689009-config-chain-1-1-1.lock
1131 verbose cache add [ 'inherits@~1.0.0', null ]
1132 verbose cache add name=undefined spec="inherits@~1.0.0" args=["inherits@~1.0.0",null]
1133 verbose parsed url { pathname: 'inherits@~1.0.0',
1133 verbose parsed url   path: 'inherits@~1.0.0',
1133 verbose parsed url   href: 'inherits@~1.0.0' }
1134 verbose cache add name="inherits" spec="~1.0.0" args=["inherits","~1.0.0"]
1135 verbose parsed url { pathname: '~1.0.0', path: '~1.0.0', href: '~1.0.0' }
1136 verbose addNamed [ 'inherits', '~1.0.0' ]
1137 verbose addNamed [ null, '>=1.0.0- <1.1.0-' ]
1138 silly lockFile 9a68ae75-inherits-1-0-0 inherits@~1.0.0
1139 verbose lock inherits@~1.0.0 /home/eric/.npm/9a68ae75-inherits-1-0-0.lock
1140 verbose cache add [ 'once@~1.1.1', null ]
1141 verbose cache add name=undefined spec="once@~1.1.1" args=["once@~1.1.1",null]
1142 verbose parsed url { pathname: 'once@~1.1.1',
1142 verbose parsed url   path: 'once@~1.1.1',
1142 verbose parsed url   href: 'once@~1.1.1' }
1143 verbose cache add name="once" spec="~1.1.1" args=["once","~1.1.1"]
1144 verbose parsed url { pathname: '~1.1.1', path: '~1.1.1', href: '~1.1.1' }
1145 verbose addNamed [ 'once', '~1.1.1' ]
1146 verbose addNamed [ null, '>=1.1.1- <1.2.0-' ]
1147 silly lockFile 062b4488-once-1-1-1 once@~1.1.1
1148 verbose lock once@~1.1.1 /home/eric/.npm/062b4488-once-1-1-1.lock
1149 verbose cache add [ 'osenv@0.0.3', null ]
1150 verbose cache add name=undefined spec="osenv@0.0.3" args=["osenv@0.0.3",null]
1151 verbose parsed url { pathname: 'osenv@0.0.3',
1151 verbose parsed url   path: 'osenv@0.0.3',
1151 verbose parsed url   href: 'osenv@0.0.3' }
1152 verbose cache add name="osenv" spec="0.0.3" args=["osenv","0.0.3"]
1153 verbose parsed url { pathname: '0.0.3', path: '0.0.3', href: '0.0.3' }
1154 verbose addNamed [ 'osenv', '0.0.3' ]
1155 verbose addNamed [ '0.0.3', '0.0.3' ]
1156 silly lockFile 4085d016-osenv-0-0-3 osenv@0.0.3
1157 verbose lock osenv@0.0.3 /home/eric/.npm/4085d016-osenv-0-0-3.lock
1158 verbose cache add [ 'nopt@2', null ]
1159 verbose cache add name=undefined spec="nopt@2" args=["nopt@2",null]
1160 verbose parsed url { pathname: 'nopt@2', path: 'nopt@2', href: 'nopt@2' }
1161 verbose cache add name="nopt" spec="2" args=["nopt","2"]
1162 verbose parsed url { pathname: '2', path: '2', href: '2' }
1163 verbose addNamed [ 'nopt', '2' ]
1164 verbose addNamed [ null, '>=2.0.0- <3.0.0-' ]
1165 silly lockFile 64594a3f-nopt-2 nopt@2
1166 verbose lock nopt@2 /home/eric/.npm/64594a3f-nopt-2.lock
1167 verbose cache add [ 'semver@~1.1.0', null ]
1168 verbose cache add name=undefined spec="semver@~1.1.0" args=["semver@~1.1.0",null]
1169 verbose parsed url { pathname: 'semver@~1.1.0',
1169 verbose parsed url   path: 'semver@~1.1.0',
1169 verbose parsed url   href: 'semver@~1.1.0' }
1170 verbose cache add name="semver" spec="~1.1.0" args=["semver","~1.1.0"]
1171 verbose parsed url { pathname: '~1.1.0', path: '~1.1.0', href: '~1.1.0' }
1172 verbose addNamed [ 'semver', '~1.1.0' ]
1173 verbose addNamed [ null, '>=1.1.0- <1.2.0-' ]
1174 silly lockFile 384d7ac7-semver-1-1-0 semver@~1.1.0
1175 verbose lock semver@~1.1.0 /home/eric/.npm/384d7ac7-semver-1-1-0.lock
1176 verbose cache add [ 'ini@~1.1.0', null ]
1177 verbose cache add name=undefined spec="ini@~1.1.0" args=["ini@~1.1.0",null]
1178 verbose parsed url { pathname: 'ini@~1.1.0',
1178 verbose parsed url   path: 'ini@~1.1.0',
1178 verbose parsed url   href: 'ini@~1.1.0' }
1179 verbose cache add name="ini" spec="~1.1.0" args=["ini","~1.1.0"]
1180 verbose parsed url { pathname: '~1.1.0', path: '~1.1.0', href: '~1.1.0' }
1181 verbose addNamed [ 'ini', '~1.1.0' ]
1182 verbose addNamed [ null, '>=1.1.0- <1.2.0-' ]
1183 silly lockFile d6a0c59d-ini-1-1-0 ini@~1.1.0
1184 verbose lock ini@~1.1.0 /home/eric/.npm/d6a0c59d-ini-1-1-0.lock
1185 info install kew@0.1.7
1186 info install mkdirp@0.3.5
1187 info install adm-zip@0.2.1
1188 silly addNameRange { name: 'graceful-fs',
1188 silly addNameRange   range: '>=1.1.0- <1.2.0-',
1188 silly addNameRange   hasData: false }
1189 silly addNameRange { name: 'config-chain',
1189 silly addNameRange   range: '>=1.1.1- <1.2.0-',
1189 silly addNameRange   hasData: false }
1190 silly addNameRange { name: 'inherits', range: '>=1.0.0- <1.1.0-', hasData: false }
1191 silly addNameRange { name: 'once', range: '>=1.1.1- <1.2.0-', hasData: false }
1192 silly addNameRange { name: 'nopt', range: '>=2.0.0- <3.0.0-', hasData: false }
1193 silly addNameRange { name: 'semver', range: '>=1.1.0- <1.2.0-', hasData: false }
1194 silly addNameRange { name: 'ini', range: '>=1.1.0- <1.2.0-', hasData: false }
1195 verbose url raw config-chain
1196 verbose url resolving [ 'https://registry.npmjs.org/', './config-chain' ]
1197 verbose url resolved https://registry.npmjs.org/config-chain
1198 info trying registry request attempt 1 at 21:25:29
1199 http GET https://registry.npmjs.org/config-chain
1200 verbose url raw once
1201 verbose url resolving [ 'https://registry.npmjs.org/', './once' ]
1202 verbose url resolved https://registry.npmjs.org/once
1203 info trying registry request attempt 1 at 21:25:29
1204 http GET https://registry.npmjs.org/once
1205 verbose url raw osenv/0.0.3
1206 verbose url resolving [ 'https://registry.npmjs.org/', './osenv/0.0.3' ]
1207 verbose url resolved https://registry.npmjs.org/osenv/0.0.3
1208 info trying registry request attempt 1 at 21:25:29
1209 http GET https://registry.npmjs.org/osenv/0.0.3
1210 verbose url raw nopt
1211 verbose url resolving [ 'https://registry.npmjs.org/', './nopt' ]
1212 verbose url resolved https://registry.npmjs.org/nopt
1213 info trying registry request attempt 1 at 21:25:29
1214 http GET https://registry.npmjs.org/nopt
1215 verbose url raw semver
1216 verbose url resolving [ 'https://registry.npmjs.org/', './semver' ]
1217 verbose url resolved https://registry.npmjs.org/semver
1218 info trying registry request attempt 1 at 21:25:29
1219 http GET https://registry.npmjs.org/semver
1220 verbose url raw ini
1221 verbose url resolving [ 'https://registry.npmjs.org/', './ini' ]
1222 verbose url resolved https://registry.npmjs.org/ini
1223 info trying registry request attempt 1 at 21:25:29
1224 http GET https://registry.npmjs.org/ini
1225 info postinstall kew@0.1.7
1226 info postinstall mkdirp@0.3.5
1227 info postinstall adm-zip@0.2.1
1228 info install which@1.0.5
1229 info install ncp@0.4.2
1230 info postinstall which@1.0.5
1231 info postinstall ncp@0.4.2
1232 verbose url raw graceful-fs
1233 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
1234 verbose url resolved https://registry.npmjs.org/graceful-fs
1235 info trying registry request attempt 1 at 21:25:29
1236 verbose etag "8LXHQOPONJROBW3CL63VPENA7"
1237 http GET https://registry.npmjs.org/graceful-fs
1238 verbose url raw inherits
1239 verbose url resolving [ 'https://registry.npmjs.org/', './inherits' ]
1240 verbose url resolved https://registry.npmjs.org/inherits
1241 info trying registry request attempt 1 at 21:25:29
1242 verbose etag "75IFE02B6138KP4TCCLJ4ABFU"
1243 http GET https://registry.npmjs.org/inherits
1244 http 200 https://registry.npmjs.org/once
1245 silly registry.get cb [ 200,
1245 silly registry.get   { vary: 'Accept',
1245 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1245 silly registry.get     etag: '"2G7E8BPBWI850HJMEHF7RYFBM"',
1245 silly registry.get     date: 'Sat, 17 Aug 2013 18:26:35 GMT',
1245 silly registry.get     'content-type': 'application/json',
1245 silly registry.get     'content-length': '4339' } ]
1246 silly addNameRange number 2 { name: 'once', range: '>=1.1.1- <1.2.0-', hasData: true }
1247 silly addNameRange versions [ 'once', [ '1.1.1', '1.2.0' ] ]
1248 verbose addNamed [ 'once', '1.1.1' ]
1249 verbose addNamed [ '1.1.1', '1.1.1' ]
1250 silly lockFile 6beab3c4-once-1-1-1 once@1.1.1
1251 verbose lock once@1.1.1 /home/eric/.npm/6beab3c4-once-1-1-1.lock
1252 silly lockFile 3dedf4f9-ry-npmjs-org-once-once-1-1-1-tgz https://registry.npmjs.org/once/-/once-1.1.1.tgz
1253 verbose lock https://registry.npmjs.org/once/-/once-1.1.1.tgz /home/eric/.npm/3dedf4f9-ry-npmjs-org-once-once-1-1-1-tgz.lock
1254 verbose addRemoteTarball [ 'https://registry.npmjs.org/once/-/once-1.1.1.tgz',
1254 verbose addRemoteTarball   '9db574933ccb08c3a7614d154032c09ea6f339e7' ]
1255 info retry fetch attempt 1 at 21:25:32
1256 verbose fetch to= /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/tmp.tgz
1257 http GET https://registry.npmjs.org/once/-/once-1.1.1.tgz
1258 http 200 https://registry.npmjs.org/osenv/0.0.3
1259 silly registry.get cb [ 200,
1259 silly registry.get   { vary: 'Accept',
1259 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1259 silly registry.get     etag: '"988AFYLFBQBVSXZR0VKXG5JLY"',
1259 silly registry.get     date: 'Sat, 17 Aug 2013 18:26:36 GMT',
1259 silly registry.get     'content-type': 'application/json',
1259 silly registry.get     'content-length': '2238' } ]
1260 silly lockFile 0118c1bc--npmjs-org-osenv-osenv-0-0-3-tgz https://registry.npmjs.org/osenv/-/osenv-0.0.3.tgz
1261 verbose lock https://registry.npmjs.org/osenv/-/osenv-0.0.3.tgz /home/eric/.npm/0118c1bc--npmjs-org-osenv-osenv-0-0-3-tgz.lock
1262 verbose addRemoteTarball [ 'https://registry.npmjs.org/osenv/-/osenv-0.0.3.tgz',
1262 verbose addRemoteTarball   'cd6ad8ddb290915ad9e22765576025d411f29cb6' ]
1263 info retry fetch attempt 1 at 21:25:33
1264 verbose fetch to= /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/tmp.tgz
1265 http GET https://registry.npmjs.org/osenv/-/osenv-0.0.3.tgz
1266 http 200 https://registry.npmjs.org/ini
1267 silly registry.get cb [ 200,
1267 silly registry.get   { vary: 'Accept',
1267 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1267 silly registry.get     etag: '"EYZBBQXOVH0B3AHO8CTCKP7LU"',
1267 silly registry.get     date: 'Sat, 17 Aug 2013 18:26:38 GMT',
1267 silly registry.get     'content-type': 'application/json',
1267 silly registry.get     'content-length': '16955' } ]
1268 silly addNameRange number 2 { name: 'ini', range: '>=1.1.0- <1.2.0-', hasData: true }
1269 silly addNameRange versions [ 'ini',
1269 silly addNameRange   [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '1.0.4', '1.0.5', '1.1.0' ] ]
1270 verbose addNamed [ 'ini', '1.1.0' ]
1271 verbose addNamed [ '1.1.0', '1.1.0' ]
1272 silly lockFile f80c58e4-ini-1-1-0 ini@1.1.0
1273 verbose lock ini@1.1.0 /home/eric/.npm/f80c58e4-ini-1-1-0.lock
1274 silly lockFile 0256e224-stry-npmjs-org-ini-ini-1-1-0-tgz https://registry.npmjs.org/ini/-/ini-1.1.0.tgz
1275 verbose lock https://registry.npmjs.org/ini/-/ini-1.1.0.tgz /home/eric/.npm/0256e224-stry-npmjs-org-ini-ini-1-1-0-tgz.lock
1276 verbose addRemoteTarball [ 'https://registry.npmjs.org/ini/-/ini-1.1.0.tgz',
1276 verbose addRemoteTarball   '4e808c2ce144c6c1788918e034d6797bc6cf6281' ]
1277 info retry fetch attempt 1 at 21:25:43
1278 verbose fetch to= /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/tmp.tgz
1279 http GET https://registry.npmjs.org/ini/-/ini-1.1.0.tgz
1280 http 304 https://registry.npmjs.org/graceful-fs
1281 silly registry.get cb [ 304,
1281 silly registry.get   { server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1281 silly registry.get     etag: '"8LXHQOPONJROBW3CL63VPENA7"',
1281 silly registry.get     date: 'Sat, 17 Aug 2013 18:26:47 GMT',
1281 silly registry.get     'content-length': '0' } ]
1282 verbose etag graceful-fs from cache
1283 silly addNameRange number 2 { name: 'graceful-fs', range: '>=1.1.0- <1.2.0-', hasData: true }
1284 silly addNameRange versions [ 'graceful-fs',
1284 silly addNameRange   [ '1.0.0',
1284 silly addNameRange     '1.0.1',
1284 silly addNameRange     '1.0.2',
1284 silly addNameRange     '1.1.0',
1284 silly addNameRange     '1.1.1',
1284 silly addNameRange     '1.1.2',
1284 silly addNameRange     '1.1.3',
1284 silly addNameRange     '1.1.4',
1284 silly addNameRange     '1.1.5',
1284 silly addNameRange     '1.1.6',
1284 silly addNameRange     '1.1.7',
1284 silly addNameRange     '1.1.8',
1284 silly addNameRange     '1.1.9',
1284 silly addNameRange     '1.1.10',
1284 silly addNameRange     '1.1.11',
1284 silly addNameRange     '1.1.12',
1284 silly addNameRange     '1.1.13',
1284 silly addNameRange     '1.1.14',
1284 silly addNameRange     '1.2.0',
1284 silly addNameRange     '1.2.1',
1284 silly addNameRange     '1.2.2',
1284 silly addNameRange     '1.2.3',
1284 silly addNameRange     '2.0.0' ] ]
1285 verbose addNamed [ 'graceful-fs', '1.1.14' ]
1286 verbose addNamed [ '1.1.14', '1.1.14' ]
1287 silly lockFile 2cf96e8d-graceful-fs-1-1-14 graceful-fs@1.1.14
1288 verbose lock graceful-fs@1.1.14 /home/eric/.npm/2cf96e8d-graceful-fs-1-1-14.lock
1289 silly lockFile 464c4d45-aceful-fs-graceful-fs-1-1-14-tgz https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz
1290 verbose lock https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz /home/eric/.npm/464c4d45-aceful-fs-graceful-fs-1-1-14-tgz.lock
1291 verbose addRemoteTarball [ 'https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz',
1291 verbose addRemoteTarball   '07078db5f6377f6321fceaaedf497de124dc9465' ]
1292 info retry fetch attempt 1 at 21:25:43
1293 verbose fetch to= /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/tmp.tgz
1294 http GET https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz
1295 http 304 https://registry.npmjs.org/inherits
1296 silly registry.get cb [ 304,
1296 silly registry.get   { server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1296 silly registry.get     etag: '"75IFE02B6138KP4TCCLJ4ABFU"',
1296 silly registry.get     date: 'Sat, 17 Aug 2013 18:26:48 GMT',
1296 silly registry.get     'content-length': '0' } ]
1297 verbose etag inherits from cache
1298 silly addNameRange number 2 { name: 'inherits', range: '>=1.0.0- <1.1.0-', hasData: true }
1299 silly addNameRange versions [ 'inherits', [ '1.0.0', '2.0.0' ] ]
1300 verbose addNamed [ 'inherits', '1.0.0' ]
1301 verbose addNamed [ '1.0.0', '1.0.0' ]
1302 silly lockFile 776fbe77-inherits-1-0-0 inherits@1.0.0
1303 verbose lock inherits@1.0.0 /home/eric/.npm/776fbe77-inherits-1-0-0.lock
1304 verbose read json /home/eric/.npm/inherits/1.0.0/package/package.json
1305 silly lockFile 776fbe77-inherits-1-0-0 inherits@1.0.0
1306 silly lockFile 776fbe77-inherits-1-0-0 inherits@1.0.0
1307 silly lockFile 9a68ae75-inherits-1-0-0 inherits@~1.0.0
1308 silly lockFile 9a68ae75-inherits-1-0-0 inherits@~1.0.0
1309 http 200 https://registry.npmjs.org/once/-/once-1.1.1.tgz
1310 silly shasum updated bytes 1752
1311 info shasum 9db574933ccb08c3a7614d154032c09ea6f339e7
1311 info shasum /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/tmp.tgz
1312 verbose tar unpack /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/tmp.tgz
1313 silly lockFile 8dfe0219-32971-0-5264666872099042-package /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package
1314 verbose lock /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package /home/eric/.npm/8dfe0219-32971-0-5264666872099042-package.lock
1315 silly lockFile 221dae37-32971-0-5264666872099042-tmp-tgz /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/tmp.tgz
1316 verbose lock /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/tmp.tgz /home/eric/.npm/221dae37-32971-0-5264666872099042-tmp-tgz.lock
1317 silly gunzTarPerm modes [ '755', '644' ]
1318 silly gunzTarPerm extractEntry package.json
1319 silly gunzTarPerm extractEntry README.md
1320 silly gunzTarPerm extractEntry LICENSE
1321 silly gunzTarPerm extractEntry once.js
1322 silly gunzTarPerm extractEntry test/once.js
1323 verbose read json /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package/package.json
1324 silly lockFile 8dfe0219-32971-0-5264666872099042-package /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package
1325 silly lockFile 8dfe0219-32971-0-5264666872099042-package /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package
1326 silly lockFile 221dae37-32971-0-5264666872099042-tmp-tgz /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/tmp.tgz
1327 silly lockFile 221dae37-32971-0-5264666872099042-tmp-tgz /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/tmp.tgz
1328 verbose from cache /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package/package.json
1329 verbose tar pack [ '/home/eric/.npm/once/1.1.1/package.tgz',
1329 verbose tar pack   '/home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package' ]
1330 verbose tarball /home/eric/.npm/once/1.1.1/package.tgz
1331 verbose folder /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package
1332 silly lockFile 8dfe0219-32971-0-5264666872099042-package /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package
1333 verbose lock /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package /home/eric/.npm/8dfe0219-32971-0-5264666872099042-package.lock
1334 silly lockFile 29122557--eric-npm-once-1-1-1-package-tgz /home/eric/.npm/once/1.1.1/package.tgz
1335 verbose lock /home/eric/.npm/once/1.1.1/package.tgz /home/eric/.npm/29122557--eric-npm-once-1-1-1-package-tgz.lock
1336 silly lockFile 8dfe0219-32971-0-5264666872099042-package /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package
1337 silly lockFile 8dfe0219-32971-0-5264666872099042-package /home/eric/tmp/npm-10959/1376763932971-0.5264666872099042/package
1338 silly lockFile 29122557--eric-npm-once-1-1-1-package-tgz /home/eric/.npm/once/1.1.1/package.tgz
1339 silly lockFile 29122557--eric-npm-once-1-1-1-package-tgz /home/eric/.npm/once/1.1.1/package.tgz
1340 silly lockFile 7336f281-home-eric-npm-once-1-1-1-package /home/eric/.npm/once/1.1.1/package
1341 verbose lock /home/eric/.npm/once/1.1.1/package /home/eric/.npm/7336f281-home-eric-npm-once-1-1-1-package.lock
1342 silly lockFile 7336f281-home-eric-npm-once-1-1-1-package /home/eric/.npm/once/1.1.1/package
1343 silly lockFile 7336f281-home-eric-npm-once-1-1-1-package /home/eric/.npm/once/1.1.1/package
1344 verbose tar unpack /home/eric/.npm/once/1.1.1/package.tgz
1345 silly lockFile 7336f281-home-eric-npm-once-1-1-1-package /home/eric/.npm/once/1.1.1/package
1346 verbose lock /home/eric/.npm/once/1.1.1/package /home/eric/.npm/7336f281-home-eric-npm-once-1-1-1-package.lock
1347 silly lockFile 29122557--eric-npm-once-1-1-1-package-tgz /home/eric/.npm/once/1.1.1/package.tgz
1348 verbose lock /home/eric/.npm/once/1.1.1/package.tgz /home/eric/.npm/29122557--eric-npm-once-1-1-1-package-tgz.lock
1349 silly gunzTarPerm modes [ '755', '644' ]
1350 silly gunzTarPerm extractEntry package.json
1351 silly gunzTarPerm extractEntry README.md
1352 silly gunzTarPerm extractEntry LICENSE
1353 silly gunzTarPerm extractEntry once.js
1354 silly gunzTarPerm extractEntry test/once.js
1355 verbose read json /home/eric/.npm/once/1.1.1/package/package.json
1356 silly lockFile 7336f281-home-eric-npm-once-1-1-1-package /home/eric/.npm/once/1.1.1/package
1357 silly lockFile 7336f281-home-eric-npm-once-1-1-1-package /home/eric/.npm/once/1.1.1/package
1358 silly lockFile 29122557--eric-npm-once-1-1-1-package-tgz /home/eric/.npm/once/1.1.1/package.tgz
1359 silly lockFile 29122557--eric-npm-once-1-1-1-package-tgz /home/eric/.npm/once/1.1.1/package.tgz
1360 silly shasum updated bytes 1750
1361 info shasum 0703d0bc022e8b2d8e75748ea185b7df18d0f6c8
1361 info shasum /home/eric/.npm/once/1.1.1/package.tgz
1362 verbose from cache /home/eric/.npm/once/1.1.1/package/package.json
1363 verbose chmod /home/eric/.npm/once/1.1.1/package.tgz 644
1364 verbose chown /home/eric/.npm/once/1.1.1/package.tgz [ 1000, 1000 ]
1365 silly lockFile 3dedf4f9-ry-npmjs-org-once-once-1-1-1-tgz https://registry.npmjs.org/once/-/once-1.1.1.tgz
1366 silly lockFile 3dedf4f9-ry-npmjs-org-once-once-1-1-1-tgz https://registry.npmjs.org/once/-/once-1.1.1.tgz
1367 silly lockFile 6beab3c4-once-1-1-1 once@1.1.1
1368 silly lockFile 6beab3c4-once-1-1-1 once@1.1.1
1369 silly lockFile 062b4488-once-1-1-1 once@~1.1.1
1370 silly lockFile 062b4488-once-1-1-1 once@~1.1.1
1371 http 200 https://registry.npmjs.org/osenv/-/osenv-0.0.3.tgz
1372 silly shasum updated bytes 3477
1373 info shasum cd6ad8ddb290915ad9e22765576025d411f29cb6
1373 info shasum /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/tmp.tgz
1374 verbose tar unpack /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/tmp.tgz
1375 silly lockFile 3be36d84-33890-0-9576484239660203-package /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package
1376 verbose lock /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package /home/eric/.npm/3be36d84-33890-0-9576484239660203-package.lock
1377 silly lockFile 9605dd13-33890-0-9576484239660203-tmp-tgz /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/tmp.tgz
1378 verbose lock /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/tmp.tgz /home/eric/.npm/9605dd13-33890-0-9576484239660203-tmp-tgz.lock
1379 silly gunzTarPerm modes [ '755', '644' ]
1380 silly gunzTarPerm extractEntry package.json
1381 silly gunzTarPerm extractEntry README.md
1382 silly gunzTarPerm extractEntry LICENSE
1383 silly gunzTarPerm extractEntry osenv.js
1384 silly gunzTarPerm extractEntry test/unix.js
1385 silly gunzTarPerm extractEntry test/windows.js
1386 verbose read json /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package/package.json
1387 silly lockFile 3be36d84-33890-0-9576484239660203-package /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package
1388 silly lockFile 3be36d84-33890-0-9576484239660203-package /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package
1389 silly lockFile 9605dd13-33890-0-9576484239660203-tmp-tgz /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/tmp.tgz
1390 silly lockFile 9605dd13-33890-0-9576484239660203-tmp-tgz /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/tmp.tgz
1391 verbose from cache /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package/package.json
1392 verbose tar pack [ '/home/eric/.npm/osenv/0.0.3/package.tgz',
1392 verbose tar pack   '/home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package' ]
1393 verbose tarball /home/eric/.npm/osenv/0.0.3/package.tgz
1394 verbose folder /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package
1395 silly lockFile 3be36d84-33890-0-9576484239660203-package /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package
1396 verbose lock /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package /home/eric/.npm/3be36d84-33890-0-9576484239660203-package.lock
1397 silly lockFile c311f06f-eric-npm-osenv-0-0-3-package-tgz /home/eric/.npm/osenv/0.0.3/package.tgz
1398 verbose lock /home/eric/.npm/osenv/0.0.3/package.tgz /home/eric/.npm/c311f06f-eric-npm-osenv-0-0-3-package-tgz.lock
1399 silly lockFile 3be36d84-33890-0-9576484239660203-package /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package
1400 silly lockFile 3be36d84-33890-0-9576484239660203-package /home/eric/tmp/npm-10959/1376763933890-0.9576484239660203/package
1401 silly lockFile c311f06f-eric-npm-osenv-0-0-3-package-tgz /home/eric/.npm/osenv/0.0.3/package.tgz
1402 silly lockFile c311f06f-eric-npm-osenv-0-0-3-package-tgz /home/eric/.npm/osenv/0.0.3/package.tgz
1403 silly lockFile 7759d766-ome-eric-npm-osenv-0-0-3-package /home/eric/.npm/osenv/0.0.3/package
1404 verbose lock /home/eric/.npm/osenv/0.0.3/package /home/eric/.npm/7759d766-ome-eric-npm-osenv-0-0-3-package.lock
1405 silly lockFile 7759d766-ome-eric-npm-osenv-0-0-3-package /home/eric/.npm/osenv/0.0.3/package
1406 silly lockFile 7759d766-ome-eric-npm-osenv-0-0-3-package /home/eric/.npm/osenv/0.0.3/package
1407 verbose tar unpack /home/eric/.npm/osenv/0.0.3/package.tgz
1408 silly lockFile 7759d766-ome-eric-npm-osenv-0-0-3-package /home/eric/.npm/osenv/0.0.3/package
1409 verbose lock /home/eric/.npm/osenv/0.0.3/package /home/eric/.npm/7759d766-ome-eric-npm-osenv-0-0-3-package.lock
1410 silly lockFile c311f06f-eric-npm-osenv-0-0-3-package-tgz /home/eric/.npm/osenv/0.0.3/package.tgz
1411 verbose lock /home/eric/.npm/osenv/0.0.3/package.tgz /home/eric/.npm/c311f06f-eric-npm-osenv-0-0-3-package-tgz.lock
1412 silly gunzTarPerm modes [ '755', '644' ]
1413 silly gunzTarPerm extractEntry package.json
1414 silly gunzTarPerm extractEntry README.md
1415 silly gunzTarPerm extractEntry LICENSE
1416 silly gunzTarPerm extractEntry osenv.js
1417 silly gunzTarPerm extractEntry test/windows.js
1418 silly gunzTarPerm extractEntry test/unix.js
1419 verbose read json /home/eric/.npm/osenv/0.0.3/package/package.json
1420 silly lockFile 7759d766-ome-eric-npm-osenv-0-0-3-package /home/eric/.npm/osenv/0.0.3/package
1421 silly lockFile 7759d766-ome-eric-npm-osenv-0-0-3-package /home/eric/.npm/osenv/0.0.3/package
1422 silly lockFile c311f06f-eric-npm-osenv-0-0-3-package-tgz /home/eric/.npm/osenv/0.0.3/package.tgz
1423 silly lockFile c311f06f-eric-npm-osenv-0-0-3-package-tgz /home/eric/.npm/osenv/0.0.3/package.tgz
1424 silly shasum updated bytes 3459
1425 info shasum f46379cb56b7822f3bdfe9703ad7c42371b584ae
1425 info shasum /home/eric/.npm/osenv/0.0.3/package.tgz
1426 verbose from cache /home/eric/.npm/osenv/0.0.3/package/package.json
1427 verbose chmod /home/eric/.npm/osenv/0.0.3/package.tgz 644
1428 verbose chown /home/eric/.npm/osenv/0.0.3/package.tgz [ 1000, 1000 ]
1429 silly lockFile 0118c1bc--npmjs-org-osenv-osenv-0-0-3-tgz https://registry.npmjs.org/osenv/-/osenv-0.0.3.tgz
1430 silly lockFile 0118c1bc--npmjs-org-osenv-osenv-0-0-3-tgz https://registry.npmjs.org/osenv/-/osenv-0.0.3.tgz
1431 silly lockFile 4085d016-osenv-0-0-3 osenv@0.0.3
1432 silly lockFile 4085d016-osenv-0-0-3 osenv@0.0.3
1433 http 200 https://registry.npmjs.org/ini/-/ini-1.1.0.tgz
1434 silly shasum updated bytes 4895
1435 info shasum 4e808c2ce144c6c1788918e034d6797bc6cf6281
1435 info shasum /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/tmp.tgz
1436 verbose tar unpack /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/tmp.tgz
1437 silly lockFile 84ac2fd7-43449-0-8241480353754014-package /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package
1438 verbose lock /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package /home/eric/.npm/84ac2fd7-43449-0-8241480353754014-package.lock
1439 silly lockFile 7681f06c-43449-0-8241480353754014-tmp-tgz /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/tmp.tgz
1440 verbose lock /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/tmp.tgz /home/eric/.npm/7681f06c-43449-0-8241480353754014-tmp-tgz.lock
1441 silly gunzTarPerm modes [ '755', '644' ]
1442 silly gunzTarPerm extractEntry package.json
1443 silly gunzTarPerm extractEntry README.md
1444 silly gunzTarPerm extractEntry LICENSE
1445 silly gunzTarPerm extractEntry ini.js
1446 silly gunzTarPerm extractEntry test/bar.js
1447 silly gunzTarPerm extractEntry test/foo.js
1448 silly gunzTarPerm extractEntry test/fixtures/foo.ini
1449 verbose read json /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package/package.json
1450 silly lockFile 84ac2fd7-43449-0-8241480353754014-package /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package
1451 silly lockFile 84ac2fd7-43449-0-8241480353754014-package /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package
1452 silly lockFile 7681f06c-43449-0-8241480353754014-tmp-tgz /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/tmp.tgz
1453 silly lockFile 7681f06c-43449-0-8241480353754014-tmp-tgz /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/tmp.tgz
1454 verbose from cache /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package/package.json
1455 verbose tar pack [ '/home/eric/.npm/ini/1.1.0/package.tgz',
1455 verbose tar pack   '/home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package' ]
1456 verbose tarball /home/eric/.npm/ini/1.1.0/package.tgz
1457 verbose folder /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package
1458 silly lockFile 84ac2fd7-43449-0-8241480353754014-package /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package
1459 verbose lock /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package /home/eric/.npm/84ac2fd7-43449-0-8241480353754014-package.lock
1460 silly lockFile 5a47b07d-e-eric-npm-ini-1-1-0-package-tgz /home/eric/.npm/ini/1.1.0/package.tgz
1461 verbose lock /home/eric/.npm/ini/1.1.0/package.tgz /home/eric/.npm/5a47b07d-e-eric-npm-ini-1-1-0-package-tgz.lock
1462 silly lockFile 84ac2fd7-43449-0-8241480353754014-package /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package
1463 silly lockFile 84ac2fd7-43449-0-8241480353754014-package /home/eric/tmp/npm-10959/1376763943449-0.8241480353754014/package
1464 silly lockFile 5a47b07d-e-eric-npm-ini-1-1-0-package-tgz /home/eric/.npm/ini/1.1.0/package.tgz
1465 silly lockFile 5a47b07d-e-eric-npm-ini-1-1-0-package-tgz /home/eric/.npm/ini/1.1.0/package.tgz
1466 silly lockFile 1621bd3b-home-eric-npm-ini-1-1-0-package /home/eric/.npm/ini/1.1.0/package
1467 verbose lock /home/eric/.npm/ini/1.1.0/package /home/eric/.npm/1621bd3b-home-eric-npm-ini-1-1-0-package.lock
1468 silly lockFile 1621bd3b-home-eric-npm-ini-1-1-0-package /home/eric/.npm/ini/1.1.0/package
1469 silly lockFile 1621bd3b-home-eric-npm-ini-1-1-0-package /home/eric/.npm/ini/1.1.0/package
1470 verbose tar unpack /home/eric/.npm/ini/1.1.0/package.tgz
1471 silly lockFile 1621bd3b-home-eric-npm-ini-1-1-0-package /home/eric/.npm/ini/1.1.0/package
1472 verbose lock /home/eric/.npm/ini/1.1.0/package /home/eric/.npm/1621bd3b-home-eric-npm-ini-1-1-0-package.lock
1473 silly lockFile 5a47b07d-e-eric-npm-ini-1-1-0-package-tgz /home/eric/.npm/ini/1.1.0/package.tgz
1474 verbose lock /home/eric/.npm/ini/1.1.0/package.tgz /home/eric/.npm/5a47b07d-e-eric-npm-ini-1-1-0-package-tgz.lock
1475 silly gunzTarPerm modes [ '755', '644' ]
1476 silly gunzTarPerm extractEntry package.json
1477 silly gunzTarPerm extractEntry README.md
1478 silly gunzTarPerm extractEntry LICENSE
1479 silly gunzTarPerm extractEntry ini.js
1480 silly gunzTarPerm extractEntry test/foo.js
1481 silly gunzTarPerm extractEntry test/bar.js
1482 silly gunzTarPerm extractEntry test/fixtures/foo.ini
1483 verbose read json /home/eric/.npm/ini/1.1.0/package/package.json
1484 silly lockFile 1621bd3b-home-eric-npm-ini-1-1-0-package /home/eric/.npm/ini/1.1.0/package
1485 silly lockFile 1621bd3b-home-eric-npm-ini-1-1-0-package /home/eric/.npm/ini/1.1.0/package
1486 silly lockFile 5a47b07d-e-eric-npm-ini-1-1-0-package-tgz /home/eric/.npm/ini/1.1.0/package.tgz
1487 silly lockFile 5a47b07d-e-eric-npm-ini-1-1-0-package-tgz /home/eric/.npm/ini/1.1.0/package.tgz
1488 silly shasum updated bytes 4889
1489 info shasum bc3b87fad55ac44206f663f274144316864bebc2
1489 info shasum /home/eric/.npm/ini/1.1.0/package.tgz
1490 verbose from cache /home/eric/.npm/ini/1.1.0/package/package.json
1491 verbose chmod /home/eric/.npm/ini/1.1.0/package.tgz 644
1492 verbose chown /home/eric/.npm/ini/1.1.0/package.tgz [ 1000, 1000 ]
1493 silly lockFile 0256e224-stry-npmjs-org-ini-ini-1-1-0-tgz https://registry.npmjs.org/ini/-/ini-1.1.0.tgz
1494 silly lockFile 0256e224-stry-npmjs-org-ini-ini-1-1-0-tgz https://registry.npmjs.org/ini/-/ini-1.1.0.tgz
1495 silly lockFile f80c58e4-ini-1-1-0 ini@1.1.0
1496 silly lockFile f80c58e4-ini-1-1-0 ini@1.1.0
1497 silly lockFile d6a0c59d-ini-1-1-0 ini@~1.1.0
1498 silly lockFile d6a0c59d-ini-1-1-0 ini@~1.1.0
1499 http 200 https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz
1500 silly shasum updated bytes 4025
1501 info shasum 07078db5f6377f6321fceaaedf497de124dc9465
1501 info shasum /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/tmp.tgz
1502 verbose tar unpack /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/tmp.tgz
1503 silly lockFile 57ad8b47-3858-0-37510474608279765-package /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package
1504 verbose lock /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package /home/eric/.npm/57ad8b47-3858-0-37510474608279765-package.lock
1505 silly lockFile e5daa86d-3858-0-37510474608279765-tmp-tgz /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/tmp.tgz
1506 verbose lock /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/tmp.tgz /home/eric/.npm/e5daa86d-3858-0-37510474608279765-tmp-tgz.lock
1507 silly gunzTarPerm modes [ '755', '644' ]
1508 silly gunzTarPerm extractEntry package.json
1509 silly gunzTarPerm extractEntry .npmignore
1510 silly gunzTarPerm extractEntry README.md
1511 silly gunzTarPerm extractEntry LICENSE
1512 silly gunzTarPerm extractEntry graceful-fs.js
1513 silly gunzTarPerm extractEntry test/open.js
1514 verbose read json /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package/package.json
1515 silly lockFile 57ad8b47-3858-0-37510474608279765-package /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package
1516 silly lockFile 57ad8b47-3858-0-37510474608279765-package /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package
1517 silly lockFile e5daa86d-3858-0-37510474608279765-tmp-tgz /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/tmp.tgz
1518 silly lockFile e5daa86d-3858-0-37510474608279765-tmp-tgz /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/tmp.tgz
1519 verbose from cache /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package/package.json
1520 verbose tar pack [ '/home/eric/.npm/graceful-fs/1.1.14/package.tgz',
1520 verbose tar pack   '/home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package' ]
1521 verbose tarball /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1522 verbose folder /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package
1523 silly lockFile 57ad8b47-3858-0-37510474608279765-package /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package
1524 verbose lock /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package /home/eric/.npm/57ad8b47-3858-0-37510474608279765-package.lock
1525 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1526 verbose lock /home/eric/.npm/graceful-fs/1.1.14/package.tgz /home/eric/.npm/225e53e8-m-graceful-fs-1-1-14-package-tgz.lock
1527 silly lockFile 57ad8b47-3858-0-37510474608279765-package /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package
1528 silly lockFile 57ad8b47-3858-0-37510474608279765-package /home/eric/tmp/npm-10959/1376763943858-0.37510474608279765/package
1529 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1530 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1531 silly lockFile 9aa8de3d-c-npm-graceful-fs-1-1-14-package /home/eric/.npm/graceful-fs/1.1.14/package
1532 verbose lock /home/eric/.npm/graceful-fs/1.1.14/package /home/eric/.npm/9aa8de3d-c-npm-graceful-fs-1-1-14-package.lock
1533 silly lockFile 9aa8de3d-c-npm-graceful-fs-1-1-14-package /home/eric/.npm/graceful-fs/1.1.14/package
1534 silly lockFile 9aa8de3d-c-npm-graceful-fs-1-1-14-package /home/eric/.npm/graceful-fs/1.1.14/package
1535 verbose tar unpack /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1536 silly lockFile 9aa8de3d-c-npm-graceful-fs-1-1-14-package /home/eric/.npm/graceful-fs/1.1.14/package
1537 verbose lock /home/eric/.npm/graceful-fs/1.1.14/package /home/eric/.npm/9aa8de3d-c-npm-graceful-fs-1-1-14-package.lock
1538 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1539 verbose lock /home/eric/.npm/graceful-fs/1.1.14/package.tgz /home/eric/.npm/225e53e8-m-graceful-fs-1-1-14-package-tgz.lock
1540 silly gunzTarPerm modes [ '755', '644' ]
1541 silly gunzTarPerm extractEntry package.json
1542 silly gunzTarPerm extractEntry .npmignore
1543 silly gunzTarPerm extractEntry README.md
1544 silly gunzTarPerm extractEntry LICENSE
1545 silly gunzTarPerm extractEntry graceful-fs.js
1546 silly gunzTarPerm extractEntry test/open.js
1547 verbose read json /home/eric/.npm/graceful-fs/1.1.14/package/package.json
1548 silly lockFile 9aa8de3d-c-npm-graceful-fs-1-1-14-package /home/eric/.npm/graceful-fs/1.1.14/package
1549 silly lockFile 9aa8de3d-c-npm-graceful-fs-1-1-14-package /home/eric/.npm/graceful-fs/1.1.14/package
1550 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1551 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1552 silly shasum updated bytes 4016
1553 info shasum 53d4ff5ec9fe985d343e4cec7fcd8b79ae07b8ba
1553 info shasum /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1554 verbose from cache /home/eric/.npm/graceful-fs/1.1.14/package/package.json
1555 verbose chmod /home/eric/.npm/graceful-fs/1.1.14/package.tgz 644
1556 verbose chown /home/eric/.npm/graceful-fs/1.1.14/package.tgz [ 1000, 1000 ]
1557 silly lockFile 464c4d45-aceful-fs-graceful-fs-1-1-14-tgz https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz
1558 silly lockFile 464c4d45-aceful-fs-graceful-fs-1-1-14-tgz https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz
1559 silly lockFile 2cf96e8d-graceful-fs-1-1-14 graceful-fs@1.1.14
1560 silly lockFile 2cf96e8d-graceful-fs-1-1-14 graceful-fs@1.1.14
1561 silly lockFile 0502dd56-graceful-fs-1-1 graceful-fs@~1.1
1562 silly lockFile 0502dd56-graceful-fs-1-1 graceful-fs@~1.1
1563 silly resolved [ { author:
1563 silly resolved      { name: 'Isaac Z. Schlueter',
1563 silly resolved        email: 'i@izs.me',
1563 silly resolved        url: 'http://blog.izs.me' },
1563 silly resolved     name: 'graceful-fs',
1563 silly resolved     description: 'fs monkey-patching to avoid EMFILE and other problems',
1563 silly resolved     version: '1.1.14',
1563 silly resolved     repository:
1563 silly resolved      { type: 'git',
1563 silly resolved        url: 'git://github.com/isaacs/node-graceful-fs.git' },
1563 silly resolved     main: 'graceful-fs.js',
1563 silly resolved     engines: { node: '>=0.4.0' },
1563 silly resolved     directories: { test: 'test' },
1563 silly resolved     scripts: { test: 'tap test/*.js' },
1563 silly resolved     keywords: [ 'fs', 'EMFILE', 'error', 'handling', 'monkeypatch' ],
1563 silly resolved     license: 'BSD',
1563 silly resolved     readme: 'Just like node\'s `fs` module, but it does an incremental back-off when\nEMFILE is encountered.\n\nUseful in asynchronous situations where one needs to try to open lots\nand lots of files.\n',
1563 silly resolved     readmeFilename: 'README.md',
1563 silly resolved     _id: 'graceful-fs@1.1.14',
1563 silly resolved     dist: { shasum: '53d4ff5ec9fe985d343e4cec7fcd8b79ae07b8ba' },
1563 silly resolved     _from: 'graceful-fs@~1.1',
1563 silly resolved     _resolved: 'https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.1.14.tgz' } ]
1564 info install graceful-fs@1.1.14 into /usr/local/lib/node_modules/phantomjs/node_modules/rimraf
1565 info installOne graceful-fs@1.1.14
1566 verbose from cache /home/eric/.npm/graceful-fs/1.1.14/package/package.json
1567 info /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs unbuild
1568 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs/package.json
1569 verbose tar unpack /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1570 silly lockFile a8377817--rimraf-node-modules-graceful-fs /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs
1571 verbose lock /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs /home/eric/.npm/a8377817--rimraf-node-modules-graceful-fs.lock
1572 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1573 verbose lock /home/eric/.npm/graceful-fs/1.1.14/package.tgz /home/eric/.npm/225e53e8-m-graceful-fs-1-1-14-package-tgz.lock
1574 silly gunzTarPerm modes [ '755', '644' ]
1575 silly gunzTarPerm extractEntry package.json
1576 silly gunzTarPerm extractEntry .npmignore
1577 silly gunzTarPerm extractEntry README.md
1578 silly gunzTarPerm extractEntry LICENSE
1579 silly gunzTarPerm extractEntry graceful-fs.js
1580 silly gunzTarPerm extractEntry test/open.js
1581 verbose read json /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs/package.json
1582 silly lockFile a8377817--rimraf-node-modules-graceful-fs /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs
1583 silly lockFile a8377817--rimraf-node-modules-graceful-fs /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs
1584 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1585 silly lockFile 225e53e8-m-graceful-fs-1-1-14-package-tgz /home/eric/.npm/graceful-fs/1.1.14/package.tgz
1586 info preinstall graceful-fs@1.1.14
1587 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs/package.json
1588 verbose readDependencies using package.json deps
1589 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs/package.json
1590 verbose readDependencies using package.json deps
1591 silly resolved []
1592 verbose about to build /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs
1593 info build /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs
1594 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules/graceful-fs/package.json
1595 verbose linkStuff [ true,
1595 verbose linkStuff   '/usr/local/lib/node_modules',
1595 verbose linkStuff   false,
1595 verbose linkStuff   '/usr/local/lib/node_modules/phantomjs/node_modules/rimraf/node_modules' ]
1596 info linkStuff graceful-fs@1.1.14
1597 verbose linkBins graceful-fs@1.1.14
1598 verbose linkMans graceful-fs@1.1.14
1599 verbose rebuildBundles graceful-fs@1.1.14
1600 info install graceful-fs@1.1.14
1601 info postinstall graceful-fs@1.1.14
1602 verbose about to build /usr/local/lib/node_modules/phantomjs/node_modules/rimraf
1603 info build /usr/local/lib/node_modules/phantomjs/node_modules/rimraf
1604 verbose from cache /usr/local/lib/node_modules/phantomjs/node_modules/rimraf/package.json
1605 verbose linkStuff [ true,
1605 verbose linkStuff   '/usr/local/lib/node_modules',
1605 verbose linkStuff   false,
1605 verbose linkStuff   '/usr/local/lib/node_modules/phantomjs/node_modules' ]
1606 info linkStuff rimraf@2.0.3
1607 verbose linkBins rimraf@2.0.3
1608 verbose linkMans rimraf@2.0.3
1609 verbose rebuildBundles rimraf@2.0.3
1610 verbose rebuildBundles [ 'graceful-fs' ]
1611 info install rimraf@2.0.3
1612 info postinstall rimraf@2.0.3
1613 http 200 https://registry.npmjs.org/nopt
1614 silly registry.get cb [ 200,
1614 silly registry.get   { vary: 'Accept',
1614 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1614 silly registry.get     etag: '"BP28HFNHLIWHELLFJ2AYRRKY5"',
1614 silly registry.get     date: 'Sat, 17 Aug 2013 18:26:37 GMT',
1614 silly registry.get     'content-type': 'application/json',
1614 silly registry.get     'content-length': '47109' } ]
1615 silly addNameRange number 2 { name: 'nopt', range: '>=2.0.0- <3.0.0-', hasData: true }
1616 silly addNameRange versions [ 'nopt',
1616 silly addNameRange   [ '1.0.0',
1616 silly addNameRange     '1.0.1',
1616 silly addNameRange     '1.0.2',
1616 silly addNameRange     '1.0.3',
1616 silly addNameRange     '1.0.4',
1616 silly addNameRange     '1.0.5',
1616 silly addNameRange     '1.0.6',
1616 silly addNameRange     '1.0.7',
1616 silly addNameRange     '1.0.8',
1616 silly addNameRange     '1.0.9',
1616 silly addNameRange     '1.0.10',
1616 silly addNameRange     '2.0.0',
1616 silly addNameRange     '2.1.0',
1616 silly addNameRange     '2.1.1',
1616 silly addNameRange     '2.1.2' ] ]
1617 verbose addNamed [ 'nopt', '2.1.2' ]
1618 verbose addNamed [ '2.1.2', '2.1.2' ]
1619 silly lockFile 7d0298b9-nopt-2-1-2 nopt@2.1.2
1620 verbose lock nopt@2.1.2 /home/eric/.npm/7d0298b9-nopt-2-1-2.lock
1621 silly lockFile 44760744-ry-npmjs-org-nopt-nopt-2-1-2-tgz https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz
1622 verbose lock https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz /home/eric/.npm/44760744-ry-npmjs-org-nopt-nopt-2-1-2-tgz.lock
1623 verbose addRemoteTarball [ 'https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz',
1623 verbose addRemoteTarball   '6cccd977b80132a07731d6e8ce58c2c8303cf9af' ]
1624 info retry fetch attempt 1 at 21:26:01
1625 verbose fetch to= /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/tmp.tgz
1626 http GET https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz
1627 http 200 https://registry.npmjs.org/config-chain
1628 silly registry.get cb [ 200,
1628 silly registry.get   { vary: 'Accept',
1628 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1628 silly registry.get     etag: '"7FFK6OPNG5JF61CT7VH07PG51"',
1628 silly registry.get     date: 'Sat, 17 Aug 2013 18:26:36 GMT',
1628 silly registry.get     'content-type': 'application/json',
1628 silly registry.get     'content-length': '70839' } ]
1629 silly addNameRange number 2 { name: 'config-chain',
1629 silly addNameRange   range: '>=1.1.1- <1.2.0-',
1629 silly addNameRange   hasData: true }
1630 silly addNameRange versions [ 'config-chain',
1630 silly addNameRange   [ '0.1.0',
1630 silly addNameRange     '0.1.1',
1630 silly addNameRange     '0.2.0',
1630 silly addNameRange     '0.3.0',
1630 silly addNameRange     '0.3.1',
1630 silly addNameRange     '0.3.2',
1630 silly addNameRange     '0.3.3',
1630 silly addNameRange     '1.0.0',
1630 silly addNameRange     '1.0.1',
1630 silly addNameRange     '1.1.0',
1630 silly addNameRange     '1.1.1',
1630 silly addNameRange     '1.1.2',
1630 silly addNameRange     '1.1.3',
1630 silly addNameRange     '1.1.4',
1630 silly addNameRange     '1.1.5',
1630 silly addNameRange     '1.1.6',
1630 silly addNameRange     '0.3.4',
1630 silly addNameRange     '1.1.7' ] ]
1631 verbose addNamed [ 'config-chain', '1.1.7' ]
1632 verbose addNamed [ '1.1.7', '1.1.7' ]
1633 silly lockFile 11d7e7ad-config-chain-1-1-7 config-chain@1.1.7
1634 verbose lock config-chain@1.1.7 /home/eric/.npm/11d7e7ad-config-chain-1-1-7.lock
1635 silly lockFile 09204e56-fig-chain-config-chain-1-1-7-tgz https://registry.npmjs.org/config-chain/-/config-chain-1.1.7.tgz
1636 verbose lock https://registry.npmjs.org/config-chain/-/config-chain-1.1.7.tgz /home/eric/.npm/09204e56-fig-chain-config-chain-1-1-7-tgz.lock
1637 verbose addRemoteTarball [ 'https://registry.npmjs.org/config-chain/-/config-chain-1.1.7.tgz',
1637 verbose addRemoteTarball   '99fcaaaf343a557782a142d201747bb8142bbf9a' ]
1638 info retry fetch attempt 1 at 21:26:02
1639 verbose fetch to= /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/tmp.tgz
1640 http GET https://registry.npmjs.org/config-chain/-/config-chain-1.1.7.tgz
1641 http 200 https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz
1642 http 200 https://registry.npmjs.org/config-chain/-/config-chain-1.1.7.tgz
1643 silly shasum updated bytes 7597
1644 info shasum 99fcaaaf343a557782a142d201747bb8142bbf9a
1644 info shasum /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/tmp.tgz
1645 verbose tar unpack /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/tmp.tgz
1646 silly lockFile 65f06b8a-2068-0-39658861537463963-package /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package
1647 verbose lock /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package /home/eric/.npm/65f06b8a-2068-0-39658861537463963-package.lock
1648 silly lockFile 8dd9f1d0-2068-0-39658861537463963-tmp-tgz /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/tmp.tgz
1649 verbose lock /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/tmp.tgz /home/eric/.npm/8dd9f1d0-2068-0-39658861537463963-tmp-tgz.lock
1650 silly gunzTarPerm modes [ '755', '644' ]
1651 silly gunzTarPerm extractEntry package.json
1652 silly gunzTarPerm extractEntry .npmignore
1653 silly gunzTarPerm extractEntry LICENCE
1654 silly gunzTarPerm extractEntry index.js
1655 silly gunzTarPerm extractEntry readme.markdown
1656 silly gunzTarPerm extractEntry test/broken.js
1657 silly gunzTarPerm extractEntry test/chain-class.js
1658 silly gunzTarPerm extractEntry test/env.js
1659 silly gunzTarPerm extractEntry test/find-file.js
1660 silly gunzTarPerm extractEntry test/ignore-unfound-file.js
1661 silly gunzTarPerm extractEntry test/ini.js
1662 silly gunzTarPerm extractEntry test/save.js
1663 silly gunzTarPerm extractEntry test/broken.json
1664 verbose read json /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package/package.json
1665 silly lockFile 65f06b8a-2068-0-39658861537463963-package /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package
1666 silly lockFile 65f06b8a-2068-0-39658861537463963-package /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package
1667 silly lockFile 8dd9f1d0-2068-0-39658861537463963-tmp-tgz /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/tmp.tgz
1668 silly lockFile 8dd9f1d0-2068-0-39658861537463963-tmp-tgz /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/tmp.tgz
1669 verbose from cache /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package/package.json
1670 verbose tar pack [ '/home/eric/.npm/config-chain/1.1.7/package.tgz',
1670 verbose tar pack   '/home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package' ]
1671 verbose tarball /home/eric/.npm/config-chain/1.1.7/package.tgz
1672 verbose folder /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package
1673 silly lockFile 65f06b8a-2068-0-39658861537463963-package /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package
1674 verbose lock /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package /home/eric/.npm/65f06b8a-2068-0-39658861537463963-package.lock
1675 silly lockFile 28ac5279-m-config-chain-1-1-7-package-tgz /home/eric/.npm/config-chain/1.1.7/package.tgz
1676 verbose lock /home/eric/.npm/config-chain/1.1.7/package.tgz /home/eric/.npm/28ac5279-m-config-chain-1-1-7-package-tgz.lock
1677 silly lockFile 65f06b8a-2068-0-39658861537463963-package /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package
1678 silly lockFile 65f06b8a-2068-0-39658861537463963-package /home/eric/tmp/npm-10959/1376763962068-0.39658861537463963/package
1679 silly lockFile 28ac5279-m-config-chain-1-1-7-package-tgz /home/eric/.npm/config-chain/1.1.7/package.tgz
1680 silly lockFile 28ac5279-m-config-chain-1-1-7-package-tgz /home/eric/.npm/config-chain/1.1.7/package.tgz
1681 silly lockFile e43843a5-c-npm-config-chain-1-1-7-package /home/eric/.npm/config-chain/1.1.7/package
1682 verbose lock /home/eric/.npm/config-chain/1.1.7/package /home/eric/.npm/e43843a5-c-npm-config-chain-1-1-7-package.lock
1683 silly lockFile e43843a5-c-npm-config-chain-1-1-7-package /home/eric/.npm/config-chain/1.1.7/package
1684 silly lockFile e43843a5-c-npm-config-chain-1-1-7-package /home/eric/.npm/config-chain/1.1.7/package
1685 verbose tar unpack /home/eric/.npm/config-chain/1.1.7/package.tgz
1686 silly lockFile e43843a5-c-npm-config-chain-1-1-7-package /home/eric/.npm/config-chain/1.1.7/package
1687 verbose lock /home/eric/.npm/config-chain/1.1.7/package /home/eric/.npm/e43843a5-c-npm-config-chain-1-1-7-package.lock
1688 silly lockFile 28ac5279-m-config-chain-1-1-7-package-tgz /home/eric/.npm/config-chain/1.1.7/package.tgz
1689 verbose lock /home/eric/.npm/config-chain/1.1.7/package.tgz /home/eric/.npm/28ac5279-m-config-chain-1-1-7-package-tgz.lock
1690 silly gunzTarPerm modes [ '755', '644' ]
1691 silly gunzTarPerm extractEntry package.json
1692 silly gunzTarPerm extractEntry .npmignore
1693 silly gunzTarPerm extractEntry LICENCE
1694 silly gunzTarPerm extractEntry index.js
1695 silly gunzTarPerm extractEntry readme.markdown
1696 silly gunzTarPerm extractEntry test/find-file.js
1697 silly gunzTarPerm extractEntry test/save.js
1698 silly gunzTarPerm extractEntry test/broken.js
1699 silly gunzTarPerm extractEntry test/env.js
1700 silly gunzTarPerm extractEntry test/ignore-unfound-file.js
1701 silly gunzTarPerm extractEntry test/chain-class.js
1702 silly gunzTarPerm extractEntry test/ini.js
1703 silly gunzTarPerm extractEntry test/broken.json
1704 verbose read json /home/eric/.npm/config-chain/1.1.7/package/package.json
1705 silly lockFile e43843a5-c-npm-config-chain-1-1-7-package /home/eric/.npm/config-chain/1.1.7/package
1706 silly lockFile e43843a5-c-npm-config-chain-1-1-7-package /home/eric/.npm/config-chain/1.1.7/package
1707 silly lockFile 28ac5279-m-config-chain-1-1-7-package-tgz /home/eric/.npm/config-chain/1.1.7/package.tgz
1708 silly lockFile 28ac5279-m-config-chain-1-1-7-package-tgz /home/eric/.npm/config-chain/1.1.7/package.tgz
1709 silly shasum updated bytes 7611
1710 info shasum bef9aa1740b29a3944b4c0b2a2224de9ca1c394b
1710 info shasum /home/eric/.npm/config-chain/1.1.7/package.tgz
1711 verbose from cache /home/eric/.npm/config-chain/1.1.7/package/package.json
1712 verbose chmod /home/eric/.npm/config-chain/1.1.7/package.tgz 644
1713 verbose chown /home/eric/.npm/config-chain/1.1.7/package.tgz [ 1000, 1000 ]
1714 silly lockFile 09204e56-fig-chain-config-chain-1-1-7-tgz https://registry.npmjs.org/config-chain/-/config-chain-1.1.7.tgz
1715 silly lockFile 09204e56-fig-chain-config-chain-1-1-7-tgz https://registry.npmjs.org/config-chain/-/config-chain-1.1.7.tgz
1716 silly lockFile 11d7e7ad-config-chain-1-1-7 config-chain@1.1.7
1717 silly lockFile 11d7e7ad-config-chain-1-1-7 config-chain@1.1.7
1718 silly lockFile b9689009-config-chain-1-1-1 config-chain@~1.1.1
1719 silly lockFile b9689009-config-chain-1-1-1 config-chain@~1.1.1
1720 silly shasum updated bytes 9690
1721 info shasum 6cccd977b80132a07731d6e8ce58c2c8303cf9af
1721 info shasum /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/tmp.tgz
1722 verbose tar unpack /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/tmp.tgz
1723 silly lockFile 47527dd1-61455-0-8954069695901126-package /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package
1724 verbose lock /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package /home/eric/.npm/47527dd1-61455-0-8954069695901126-package.lock
1725 silly lockFile 5054ee6c-61455-0-8954069695901126-tmp-tgz /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/tmp.tgz
1726 verbose lock /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/tmp.tgz /home/eric/.npm/5054ee6c-61455-0-8954069695901126-tmp-tgz.lock
1727 silly gunzTarPerm modes [ '755', '644' ]
1728 silly gunzTarPerm extractEntry package.json
1729 silly gunzTarPerm extractEntry .npmignore
1730 silly gunzTarPerm extractEntry README.md
1731 silly gunzTarPerm extractEntry LICENSE
1732 silly gunzTarPerm extractEntry bin/nopt.js
1733 silly gunzTarPerm extractEntry examples/my-program.js
1734 silly gunzTarPerm extractEntry lib/nopt.js
1735 verbose read json /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package/package.json
1736 silly lockFile 47527dd1-61455-0-8954069695901126-package /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package
1737 silly lockFile 47527dd1-61455-0-8954069695901126-package /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package
1738 silly lockFile 5054ee6c-61455-0-8954069695901126-tmp-tgz /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/tmp.tgz
1739 silly lockFile 5054ee6c-61455-0-8954069695901126-tmp-tgz /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/tmp.tgz
1740 verbose from cache /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package/package.json
1741 verbose tar pack [ '/home/eric/.npm/nopt/2.1.2/package.tgz',
1741 verbose tar pack   '/home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package' ]
1742 verbose tarball /home/eric/.npm/nopt/2.1.2/package.tgz
1743 verbose folder /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package
1744 silly lockFile 47527dd1-61455-0-8954069695901126-package /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package
1745 verbose lock /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package /home/eric/.npm/47527dd1-61455-0-8954069695901126-package.lock
1746 silly lockFile 0d64e592--eric-npm-nopt-2-1-2-package-tgz /home/eric/.npm/nopt/2.1.2/package.tgz
1747 verbose lock /home/eric/.npm/nopt/2.1.2/package.tgz /home/eric/.npm/0d64e592--eric-npm-nopt-2-1-2-package-tgz.lock
1748 silly lockFile 47527dd1-61455-0-8954069695901126-package /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package
1749 silly lockFile 47527dd1-61455-0-8954069695901126-package /home/eric/tmp/npm-10959/1376763961455-0.8954069695901126/package
1750 silly lockFile 0d64e592--eric-npm-nopt-2-1-2-package-tgz /home/eric/.npm/nopt/2.1.2/package.tgz
1751 silly lockFile 0d64e592--eric-npm-nopt-2-1-2-package-tgz /home/eric/.npm/nopt/2.1.2/package.tgz
1752 silly lockFile ffc5d081-home-eric-npm-nopt-2-1-2-package /home/eric/.npm/nopt/2.1.2/package
1753 verbose lock /home/eric/.npm/nopt/2.1.2/package /home/eric/.npm/ffc5d081-home-eric-npm-nopt-2-1-2-package.lock
1754 silly lockFile ffc5d081-home-eric-npm-nopt-2-1-2-package /home/eric/.npm/nopt/2.1.2/package
1755 silly lockFile ffc5d081-home-eric-npm-nopt-2-1-2-package /home/eric/.npm/nopt/2.1.2/package
1756 verbose tar unpack /home/eric/.npm/nopt/2.1.2/package.tgz
1757 silly lockFile ffc5d081-home-eric-npm-nopt-2-1-2-package /home/eric/.npm/nopt/2.1.2/package
1758 verbose lock /home/eric/.npm/nopt/2.1.2/package /home/eric/.npm/ffc5d081-home-eric-npm-nopt-2-1-2-package.lock
1759 silly lockFile 0d64e592--eric-npm-nopt-2-1-2-package-tgz /home/eric/.npm/nopt/2.1.2/package.tgz
1760 verbose lock /home/eric/.npm/nopt/2.1.2/package.tgz /home/eric/.npm/0d64e592--eric-npm-nopt-2-1-2-package-tgz.lock
1761 silly gunzTarPerm modes [ '755', '644' ]
1762 silly gunzTarPerm extractEntry package.json
1763 silly gunzTarPerm extractEntry .npmignore
1764 silly gunzTarPerm extractEntry README.md
1765 silly gunzTarPerm extractEntry LICENSE
1766 silly gunzTarPerm extractEntry bin/nopt.js
1767 silly gunzTarPerm extractEntry examples/my-program.js
1768 silly gunzTarPerm extractEntry lib/nopt.js
1769 verbose read json /home/eric/.npm/nopt/2.1.2/package/package.json
1770 silly lockFile ffc5d081-home-eric-npm-nopt-2-1-2-package /home/eric/.npm/nopt/2.1.2/package
1771 silly lockFile ffc5d081-home-eric-npm-nopt-2-1-2-package /home/eric/.npm/nopt/2.1.2/package
1772 silly lockFile 0d64e592--eric-npm-nopt-2-1-2-package-tgz /home/eric/.npm/nopt/2.1.2/package.tgz
1773 silly lockFile 0d64e592--eric-npm-nopt-2-1-2-package-tgz /home/eric/.npm/nopt/2.1.2/package.tgz
1774 silly shasum updated bytes 9682
1775 info shasum e8c9b162781a1b262015c3e7fbeef20c3abec912
1775 info shasum /home/eric/.npm/nopt/2.1.2/package.tgz
1776 verbose from cache /home/eric/.npm/nopt/2.1.2/package/package.json
1777 verbose chmod /home/eric/.npm/nopt/2.1.2/package.tgz 644
1778 verbose chown /home/eric/.npm/nopt/2.1.2/package.tgz [ 1000, 1000 ]
1779 silly lockFile 44760744-ry-npmjs-org-nopt-nopt-2-1-2-tgz https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz
1780 silly lockFile 44760744-ry-npmjs-org-nopt-nopt-2-1-2-tgz https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz
1781 silly lockFile 7d0298b9-nopt-2-1-2 nopt@2.1.2
1782 silly lockFile 7d0298b9-nopt-2-1-2 nopt@2.1.2
1783 silly lockFile 64594a3f-nopt-2 nopt@2
1784 silly lockFile 64594a3f-nopt-2 nopt@2
1785 http 200 https://registry.npmjs.org/commander
1786 verbose bad json {"_id":"commander","_rev":"117-efcdeb4b0ec00cd4670221b66dc6c05f","name":"commander","description":"the complete solution for node.js command-line programs","dist-tags":{"latest":"2.0.0"},"versions":{"0.0.1":{"name":"commander","version":"0.0.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.1","_engineSupported":true,"_npmVersion":"1.0.14","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"4d4128672182d377fa53618d31282a985eeb0298","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.1.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.0.3":{"name":"commander","version":"0.0.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.3/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.3","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"9feeaa41be6cd27a5682218cb986773e25b49525","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.3.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.0.4":{"name":"commander","version":"0.0.4","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.4/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.4","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"72206c96453f4475c0a6e0f041707b217bef8331","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.4.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.0.5":{"name":"commander","version":"0.0.5","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.5/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.5","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"7824fe04d5357f6dba0045fba86fffcfc843ebfd","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.5.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.1.0":{"name":"commander","version":"0.1.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.1.0","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"4f1b767116853b659106f9cf5897c8bac2c189b2","tarball":"http://registry.npmjs.org/commander/-/commander-0.1.0.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.2.0":{"name":"commander","version":"0.2.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.2.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.2.0","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"61d495ef9c5d9d4ab0a9d168674822ae07e961cc","tarball":"http://registry.npmjs.org/commander/-/commander-0.2.0.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.2.1":{"name":"commander","version":"0.2.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.2.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.2.1","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.5.9","_defaultsLoaded":true,"dist":{"shasum":"32ca3c217ac340082bd70e1326b5bbd41fbc6cd1","tarball":"http://registry.npmjs.org/commander/-/commander-0.2.1.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.0":{"name":"commander","version":"0.3.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.0","_engineSupported":true,"_npmVersion":"1.0.102","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"02cafd95f625df941eb0697b6bb540127c4778a7","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.1":{"name":"commander","version":"0.3.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.1","_engineSupported":true,"_npmVersion":"1.0.102","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"a70cc95038d614937abf9349b0b94f5491bcd8eb","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.2":{"name":"commander","version":"0.3.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.2","_engineSupported":true,"_npmVersion":"1.0.102","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"8a98a6b590d2abab04892739da8f8577da964961","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.3":{"name":"commander","version":"0.3.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.3","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"388a4097f857e9299c26415352b54d0706b06a2c","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.3.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.0":{"name":"commander","version":"0.4.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.0","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"85f193a56264f4959401bdbbce0bb09e5a8764cf","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.1":{"name":"commander","version":"0.4.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.1","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1","_defaultsLoaded":true,"dist":{"shasum":"85c30d8e80fb57de9a95ae9bd5084021abc1dfdf","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.2":{"name":"commander","version":"0.4.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.2","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.2","_defaultsLoaded":true,"dist":{"shasum":"f1872070e42d271a2a1c419981628628716ce01c","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.3":{"name":"commander","version":"0.4.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.3","_engineSupported":true,"_npmVersion":"1.0.105","_nodeVersion":"v0.6.4","_defaultsLoaded":true,"dist":{"shasum":"1f9c45f5c2d314c4bc9f9a3dd5b883261fbac8fc","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.3.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.0":{"name":"commander","version":"0.5.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.5.0","_engineSupported":true,"_npmVersion":"1.0.105","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"8fe03c71e444891dbda97c7dfbb108a33a05eaf3","tarball":"http://registry.npmjs.org/commander/-/commander-0.5.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.1":{"name":"commander","version":"0.5.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.5.1","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"08477afb326d1adf9d4ee73af7170c70caa14f95","tarball":"http://registry.npmjs.org/commander/-/commander-0.5.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.0":{"name":"commander","version":"0.6.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.6.0","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"778f617d8a485268b0e06c02576d5a349aa25a9d","tarball":"http://registry.npmjs.org/commander/-/commander-0.6.0.tgz"},"readme":"\n# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -v, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -v, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.1":{"name":"commander","version":"0.6.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.6.1","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"fa68a14f6a945d54dbbe50d8cdb3320e9e3b1a06","tarball":"http://registry.npmjs.org/commander/-/commander-0.6.1.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.2":{"name":"commander","version":"0.5.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_id":"commander@0.5.2","dist":{"shasum":"f270326709a115a126cfed5623852439b8e4a3b5","tarball":"http://registry.npmjs.org/commander/-/commander-0.5.2.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.0":{"name":"commander","version":"1.0.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_id":"commander@1.0.0","dist":{"shasum":"5e6a88e7070ff5908836ead19169548c30f90bcd","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.0.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.1":{"name":"commander","version":"1.0.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_id":"commander@1.0.1","dist":{"shasum":"e2c18dc9b8f7ce51185b248271890b1af62cceaf","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.1.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.2":{"name":"commander","version":"1.0.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.2","dist":{"shasum":"b9443ef3a966fb3a77d62f2d92dc5a06f1516116","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.3":{"name":"commander","version":"1.0.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.3","dist":{"shasum":"037451a770f85c2fbb760e2911757fd79a366e2a","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.3.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.4":{"name":"commander","version":"1.0.4","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.4","dist":{"shasum":"5edeb1aee23c4fb541a6b70d692abef19669a2d3","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.4.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.5":{"name":"commander","version":"1.0.5","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.5","dist":{"shasum":"457295bb976e388e9dd0db52de4333e249f3d88c","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.5.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.0":{"name":"commander","version":"1.1.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","readmeFilename":"Readme.md","_id":"commander@1.1.0","dist":{"shasum":"88ab74780346d69a112d2efd30f2f4132624af67","tarball":"http://registry.npmjs.org/commander/-/commander-1.1.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.1":{"name":"commander","version":"1.1.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","readmeFilename":"Readme.md","_id":"commander@1.1.1","dist":{"shasum":"50d1651868ae60eccff0a2d9f34595376bc6b041","tarball":"http://registry.npmjs.org/commander/-/commander-1.1.1.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.0":{"name":"commander","version":"1.2.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","readmeFilename":"Readme.md","_id":"commander@1.2.0","dist":{"shasum":"fd5713bfa153c7d6cc599378a5ab4c45c535029e","tarball":"http://registry.npmjs.org/commander/-/commander-1.2.0.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.0":{"name":"commander","version":"1.3.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@1.3.0","dist":{"shasum":"01e9f594426491a8baa85ebece3366685e0a031e","tarball":"http://registry.npmjs.org/commander/-/commander-1.3.0.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.1":{"name":"commander","version":"1.3.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@1.3.1","dist":{"shasum":"02443e02db96f4b32b674225451abb6e9510000e","tarball":"http://registry.npmjs.org/commander/-/commander-1.3.1.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.2":{"name":"commander","version":"1.3.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@1.3.2","dist":{"shasum":"8a8f30ec670a6fdd64af52f1914b907d79ead5b5","tarball":"http://registry.npmjs.org/commander/-/commander-1.3.2.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"2.0.0":{"name":"commander","version":"2.0.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@2.0.0","dist":{"shasum":"d1b86f901f8b64bd941bdeadaf924530393be928","tarball":"http://registry.npmjs.org/commander/-/commander-2.0.0.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}}},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"time":{"0.0.1":"2011-08-14T22:17:52.365Z","0.0.3":"2011-08-15T15:30:08.289Z","0.0.4":"2011-08-15T15:45:00.595Z","0.0.5":"2011-08-19T01:18:17.154Z","0.1.0":"2011-08-24T11:45:37.962Z","0.2.0":"2011-09-26T15:44:03.241Z","0.2.1":"2011-10-24T21:03:27.736Z","0.3.0":"2011-10-31T15:36:53.375Z","0.3.1":"2011-10-31T22:07:16.209Z","0.3.2":"2011-11-01T21:27:35.103Z","0.3.3":"2011-11-14T19:02:49.976Z","0.4.0":"2011-11-15T16:05:27.872Z","0.4.1":"2011-11-18T16:48:21.692Z","0.4.2":"2011-11-24T15:22:25.202Z","0.4.3":"2011-12-04T17:54:46.487Z","0.5.0":"2011-12-04T19:44:41.915Z","0.5.1":"2011-12-20T16:26:29.300Z","0.5.2":"2012-06-25T21:09:05.996Z","0.6.0":"2012-04-11T00:52:24.970Z","0.6.1":"2012-06-01T19:23:51.854Z","1.0.0":"2012-07-05T15:39:47.150Z","1.0.1":"2012-08-03T20:48:33.507Z","1.0.2":"2012-08-24T20:37:14.775Z","1.0.3":"2012-08-30T15:07:57.325Z","1.0.4":"2012-09-03T15:41:28.290Z","1.0.5":"2012-10-10T15:56:29.273Z","1.1.0":"2012-11-17T04:59:23.345Z","1.1.1":"2012-11-20T23:09:50.552Z","1.2.0":"2013-06-13T13:52:46.805Z","1.3.0":"2013-07-09T15:15:27.256Z","1.3.1":"2013-07-18T16:17:47.951Z","1.3.2":"2013-07-18T16:26:50.160Z","2.0.0":"2013-07-19T00:55:45.073Z"},"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"users":{"vesln":true,"dresende":true,"vasc":true,"carloselias":true,"gabrielfalcao":true,"saintedlama":true,"pierre":true,"yazgazan":true,"sjonnet":true,"fgribreau":true,"sjonnet19":true,"pid":true,"vtsvang":true,"drudge":true,"m42am":true,"carlos8f":true,"kennethjor":true,"glukki":true,"popeindustries":true,"dannydulai":true,"megadrive":true,"evanlucas":true,"rwillrich":true,"maxmaximov":true,"zonetti":true,"leesei":true,"moonpyk":true,"webpro":true,"strathausen":true,"joliva":true,"drkibitz":true},"_attachments":{"commander-2.0.0.tgz":{"content_type":"application/octet-stream","revpos":115,"digest":"md5-pFto9uayi6kxZZvqHtzXEw==","length":9024,"stub":true},"commander-1.3.2.tgz":{"content_type":"application/octet-stream","revpos":113,"digest":"md5-gMONZ+ayRAjyE1Axax0yQA==","length":10942,"stub":true},"commander-1.3.1.tgz":{"content_type":"application/octet-stream","revpos":111,"digest":"md5-ctbGDPiH1la8ijXXtrk6yg==","length":10893,"stub":true},"commander-1.3.0.tgz":{"content_type":"application/octet-stream","revpos":107,"digest":"md5-9ML3rHNiRJfDBzLPDiNaug==","length":10845,"stub":true},"commander-1.2.0.tgz":{"content_type":"application/octet-stream","revpos":102,"digest":"md5-80c2wNro14nLt+Awk9RXrg==","length":10786,"stub":true},"commander-1.1.1.tgz":{"content_type":"application/octet-stream","revpos":89,"digest":"md5-rWhs1AC2sVR01f3ntPQZ8g==","length":10791,"stub":true},"commander-1.1.0.tgz":{"content_type":"application/octet-stream","revpos":87,"digest":"md5-yApK8W7c0OTY5VlBtk+NFg==","length":10747,"stub":true},"commander-1.0.5.tgz":{"content_type":"application/octet-strea
1787 error registry error parsing json
1788 silly registry.get cb [ 200,
1788 silly registry.get   { vary: 'Accept',
1788 silly registry.get     server: 'CouchDB/1.3.0 (Erlang OTP/R15B03)',
1788 silly registry.get     etag: '"963K7TYH6UP7JSFBNMS9L3V8X"',
1788 silly registry.get     date: 'Sat, 17 Aug 2013 18:25:54 GMT',
1788 silly registry.get     'content-type': 'application/json',
1788 silly registry.get     'content-length': '146572' } ]
1789 silly lockFile c6adb5d0-commander-1-2-x commander@1.2.x
1790 silly lockFile c6adb5d0-commander-1-2-x commander@1.2.x
1791 verbose about to build /usr/local/lib/node_modules/mocha-phantomjs
1792 info /usr/local/lib/node_modules/mocha-phantomjs unbuild
1793 verbose from cache /usr/local/lib/node_modules/mocha-phantomjs/package.json
1794 info preuninstall mocha-phantomjs@3.1.1
1795 info uninstall mocha-phantomjs@3.1.1
1796 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild mocha-phantomjs@3.1.1
1797 verbose /usr/local/bin,[object Object] binRoot
1798 info postuninstall mocha-phantomjs@3.1.1
1799 error SyntaxError: Unexpected end of input
1799 error {"_id":"commander","_rev":"117-efcdeb4b0ec00cd4670221b66dc6c05f","name":"commander","description":"the complete solution for node.js command-line programs","dist-tags":{"latest":"2.0.0"},"versions":{"0.0.1":{"name":"commander","version":"0.0.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.1","_engineSupported":true,"_npmVersion":"1.0.14","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"4d4128672182d377fa53618d31282a985eeb0298","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.1.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.0.3":{"name":"commander","version":"0.0.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.3/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.3","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"9feeaa41be6cd27a5682218cb986773e25b49525","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.3.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.0.4":{"name":"commander","version":"0.0.4","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.4/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.4","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"72206c96453f4475c0a6e0f041707b217bef8331","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.4.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.0.5":{"name":"commander","version":"0.0.5","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.0.5/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.0.5","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"7824fe04d5357f6dba0045fba86fffcfc843ebfd","tarball":"http://registry.npmjs.org/commander/-/commander-0.0.5.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.1.0":{"name":"commander","version":"0.1.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.1.0","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"4f1b767116853b659106f9cf5897c8bac2c189b2","tarball":"http://registry.npmjs.org/commander/-/commander-0.1.0.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.2.0":{"name":"commander","version":"0.2.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":"0.4.x"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.2.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.2.0","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"61d495ef9c5d9d4ab0a9d168674822ae07e961cc","tarball":"http://registry.npmjs.org/commander/-/commander-0.2.0.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.2.1":{"name":"commander","version":"0.2.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmJsonOpts":{"file":"/Users/tj/.npm/commander/0.2.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"commander@0.2.1","_engineSupported":true,"_npmVersion":"1.0.24","_nodeVersion":"v0.5.9","_defaultsLoaded":true,"dist":{"shasum":"32ca3c217ac340082bd70e1326b5bbd41fbc6cd1","tarball":"http://registry.npmjs.org/commander/-/commander-0.2.1.tgz"},"scripts":{},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.0":{"name":"commander","version":"0.3.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.0","_engineSupported":true,"_npmVersion":"1.0.102","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"02cafd95f625df941eb0697b6bb540127c4778a7","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.1":{"name":"commander","version":"0.3.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.1","_engineSupported":true,"_npmVersion":"1.0.102","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"a70cc95038d614937abf9349b0b94f5491bcd8eb","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.2":{"name":"commander","version":"0.3.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.2","_engineSupported":true,"_npmVersion":"1.0.102","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"8a98a6b590d2abab04892739da8f8577da964961","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.3.3":{"name":"commander","version":"0.3.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.3.3","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"388a4097f857e9299c26415352b54d0706b06a2c","tarball":"http://registry.npmjs.org/commander/-/commander-0.3.3.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.0":{"name":"commander","version":"0.4.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.0","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"85f193a56264f4959401bdbbce0bb09e5a8764cf","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.1":{"name":"commander","version":"0.4.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.1","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.1","_defaultsLoaded":true,"dist":{"shasum":"85c30d8e80fb57de9a95ae9bd5084021abc1dfdf","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.2":{"name":"commander","version":"0.4.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.2","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.6.2","_defaultsLoaded":true,"dist":{"shasum":"f1872070e42d271a2a1c419981628628716ce01c","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.4.3":{"name":"commander","version":"0.4.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.4.3","_engineSupported":true,"_npmVersion":"1.0.105","_nodeVersion":"v0.6.4","_defaultsLoaded":true,"dist":{"shasum":"1f9c45f5c2d314c4bc9f9a3dd5b883261fbac8fc","tarball":"http://registry.npmjs.org/commander/-/commander-0.4.3.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.0":{"name":"commander","version":"0.5.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.5.0","_engineSupported":true,"_npmVersion":"1.0.105","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"8fe03c71e444891dbda97c7dfbb108a33a05eaf3","tarball":"http://registry.npmjs.org/commander/-/commander-0.5.0.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.1":{"name":"commander","version":"0.5.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.5.1","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"08477afb326d1adf9d4ee73af7170c70caa14f95","tarball":"http://registry.npmjs.org/commander/-/commander-0.5.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.0":{"name":"commander","version":"0.6.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x < 0.7.0"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.6.0","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"778f617d8a485268b0e06c02576d5a349aa25a9d","tarball":"http://registry.npmjs.org/commander/-/commander-0.6.0.tgz"},"readme":"\n# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -v, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -v, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.6.1":{"name":"commander","version":"0.6.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"git://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"_id":"commander@0.6.1","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.12","_defaultsLoaded":true,"dist":{"shasum":"fa68a14f6a945d54dbbe50d8cdb3320e9e3b1a06","tarball":"http://registry.npmjs.org/commander/-/commander-0.6.1.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"0.5.2":{"name":"commander","version":"0.5.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_id":"commander@0.5.2","dist":{"shasum":"f270326709a115a126cfed5623852439b8e4a3b5","tarball":"http://registry.npmjs.org/commander/-/commander-0.5.2.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.0":{"name":"commander","version":"1.0.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_id":"commander@1.0.0","dist":{"shasum":"5e6a88e7070ff5908836ead19169548c30f90bcd","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.0.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.1":{"name":"commander","version":"1.0.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.4.x"},"_id":"commander@1.0.1","dist":{"shasum":"e2c18dc9b8f7ce51185b248271890b1af62cceaf","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.1.tgz"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.2":{"name":"commander","version":"1.0.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.2","dist":{"shasum":"b9443ef3a966fb3a77d62f2d92dc5a06f1516116","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.2.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.3":{"name":"commander","version":"1.0.3","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.3","dist":{"shasum":"037451a770f85c2fbb760e2911757fd79a366e2a","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.3.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.4":{"name":"commander","version":"1.0.4","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.4","dist":{"shasum":"5edeb1aee23c4fb541a6b70d692abef19669a2d3","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.4.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.5":{"name":"commander","version":"1.0.5","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","_id":"commander@1.0.5","dist":{"shasum":"457295bb976e388e9dd0db52de4333e249f3d88c","tarball":"http://registry.npmjs.org/commander/-/commander-1.0.5.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.0":{"name":"commander","version":"1.1.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","readmeFilename":"Readme.md","_id":"commander@1.1.0","dist":{"shasum":"88ab74780346d69a112d2efd30f2f4132624af67","tarball":"http://registry.npmjs.org/commander/-/commander-1.1.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.1":{"name":"commander","version":"1.1.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","readmeFilename":"Readme.md","_id":"commander@1.1.1","dist":{"shasum":"50d1651868ae60eccff0a2d9f34595376bc6b041","tarball":"http://registry.npmjs.org/commander/-/commander-1.1.1.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.0":{"name":"commander","version":"1.2.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineappe');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineappe\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","readmeFilename":"Readme.md","_id":"commander@1.2.0","dist":{"shasum":"fd5713bfa153c7d6cc599378a5ab4c45c535029e","tarball":"http://registry.npmjs.org/commander/-/commander-1.2.0.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.0":{"name":"commander","version":"1.3.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@1.3.0","dist":{"shasum":"01e9f594426491a8baa85ebece3366685e0a031e","tarball":"http://registry.npmjs.org/commander/-/commander-1.3.0.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.1":{"name":"commander","version":"1.3.1","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@1.3.1","dist":{"shasum":"02443e02db96f4b32b674225451abb6e9510000e","tarball":"http://registry.npmjs.org/commander/-/commander-1.3.1.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.2":{"name":"commander","version":"1.3.2","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"dependencies":{"keypress":"0.1.x"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .prompt(msg, fn)\n\n Single-line prompt:\n\n```js\nprogram.prompt('name: ', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Multi-line prompt:\n\n```js\nprogram.prompt('description:', function(name){\n  console.log('hi %s', name);\n});\n```\n\n Coercion:\n\n```js\nprogram.prompt('Age: ', Number, function(age){\n  console.log('age: %j', age);\n});\n```\n\n```js\nprogram.prompt('Birthdate: ', Date, function(date){\n  console.log('date: %s', date);\n});\n```\n\n```js\nprogram.prompt('Email: ', /^.+@.+\\..+$/, function(email){\n  console.log('email: %j', email);\n});\n```\n\n## .password(msg[, mask], fn)\n\nPrompt for password without echoing:\n\n```js\nprogram.password('Password: ', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\nPrompt for password with mask char \"*\":\n\n```js\nprogram.password('Password: ', '*', function(pass){\n  console.log('got \"%s\"', pass);\n  process.stdin.destroy();\n});\n```\n\n## .confirm(msg, fn)\n\n Confirm with the given `msg`:\n\n```js\nprogram.confirm('continue? ', function(ok){\n  console.log(' got %j', ok);\n});\n```\n\n## .choose(list, fn)\n\n Let the user choose from a `list`:\n\n```js\nvar list = ['tobi', 'loki', 'jane', 'manny', 'luna'];\n\nconsole.log('Choose the coolest pet:');\nprogram.choose(list, function(i){\n  console.log('you chose %d \"%s\"', i, list[i]);\n});\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@1.3.2","dist":{"shasum":"8a8f30ec670a6fdd64af52f1914b907d79ead5b5","tarball":"http://registry.npmjs.org/commander/-/commander-1.3.2.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"2.0.0":{"name":"commander","version":"2.0.0","description":"the complete solution for node.js command-line programs","keywords":["command","option","parser","prompt","stdin"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"devDependencies":{"should":">= 0.0.1"},"scripts":{"test":"make test"},"main":"index","engines":{"node":">= 0.6.x"},"readme":"# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('commander');\n\nprogram\n  .version('0.0.1')\n  .option('-p, --peppers', 'Add peppers')\n  .option('-P, --pineapple', 'Add pineapple')\n  .option('-b, --bbq', 'Add bbq sauce')\n  .option('-c, --cheese [type]', 'Add the specified type of cheese [marble]', 'marble')\n  .parse(process.argv);\n\nconsole.log('you ordered a pizza with:');\nif (program.peppers) console.log('  - peppers');\nif (program.pineapple) console.log('  - pineapple');\nif (program.bbq) console.log('  - bbq');\nconsole.log('  - %s cheese', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split('..').map(Number);\n}\n\nfunction list(val) {\n  return val.split(',');\n}\n\nprogram\n  .version('0.0.1')\n  .usage('[options] <file ...>')\n  .option('-i, --integer <n>', 'An integer argument', parseInt)\n  .option('-f, --float <n>', 'A float argument', parseFloat)\n  .option('-r, --range <a>..<b>', 'A range', range)\n  .option('-l, --list <items>', 'A list', list)\n  .option('-o, --optional [value]', 'An optional value')\n  .parse(process.argv);\n\nconsole.log(' int: %j', program.integer);\nconsole.log(' float: %j', program.float);\nconsole.log(' optional: %j', program.optional);\nprogram.range = program.range || [];\nconsole.log(' range: %j..%j', program.range[0], program.range[1]);\nconsole.log(' list: %j', program.list);\nconsole.log(' args: %j', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for \"--help\". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable \"stuff\" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require('../');\n\nfunction list(val) {\n  return val.split(',').map(Number);\n}\n\nprogram\n  .version('0.0.1')\n  .option('-f, --foo', 'enable some foo')\n  .option('-b, --bar', 'enable some bar')\n  .option('-B, --baz', 'enable some baz');\n\n// must be before .parse() since\n// node's emit() is immediate\n\nprogram.on('--help', function(){\n  console.log('  Examples:');\n  console.log('');\n  console.log('    $ custom-help --help');\n  console.log('    $ custom-help -h');\n  console.log('');\n});\n\nprogram.parse(process.argv);\n\nconsole.log('stuff');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/visionmedia/commander.js/issues"},"_id":"commander@2.0.0","dist":{"shasum":"d1b86f901f8b64bd941bdeadaf924530393be928","tarball":"http://registry.npmjs.org/commander/-/commander-2.0.0.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}}},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"time":{"0.0.1":"2011-08-14T22:17:52.365Z","0.0.3":"2011-08-15T15:30:08.289Z","0.0.4":"2011-08-15T15:45:00.595Z","0.0.5":"2011-08-19T01:18:17.154Z","0.1.0":"2011-08-24T11:45:37.962Z","0.2.0":"2011-09-26T15:44:03.241Z","0.2.1":"2011-10-24T21:03:27.736Z","0.3.0":"2011-10-31T15:36:53.375Z","0.3.1":"2011-10-31T22:07:16.209Z","0.3.2":"2011-11-01T21:27:35.103Z","0.3.3":"2011-11-14T19:02:49.976Z","0.4.0":"2011-11-15T16:05:27.872Z","0.4.1":"2011-11-18T16:48:21.692Z","0.4.2":"2011-11-24T15:22:25.202Z","0.4.3":"2011-12-04T17:54:46.487Z","0.5.0":"2011-12-04T19:44:41.915Z","0.5.1":"2011-12-20T16:26:29.300Z","0.5.2":"2012-06-25T21:09:05.996Z","0.6.0":"2012-04-11T00:52:24.970Z","0.6.1":"2012-06-01T19:23:51.854Z","1.0.0":"2012-07-05T15:39:47.150Z","1.0.1":"2012-08-03T20:48:33.507Z","1.0.2":"2012-08-24T20:37:14.775Z","1.0.3":"2012-08-30T15:07:57.325Z","1.0.4":"2012-09-03T15:41:28.290Z","1.0.5":"2012-10-10T15:56:29.273Z","1.1.0":"2012-11-17T04:59:23.345Z","1.1.1":"2012-11-20T23:09:50.552Z","1.2.0":"2013-06-13T13:52:46.805Z","1.3.0":"2013-07-09T15:15:27.256Z","1.3.1":"2013-07-18T16:17:47.951Z","1.3.2":"2013-07-18T16:26:50.160Z","2.0.0":"2013-07-19T00:55:45.073Z"},"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"repository":{"type":"git","url":"https://github.com/visionmedia/commander.js.git"},"users":{"vesln":true,"dresende":true,"vasc":true,"carloselias":true,"gabrielfalcao":true,"saintedlama":true,"pierre":true,"yazgazan":true,"sjonnet":true,"fgribreau":true,"sjonnet19":true,"pid":true,"vtsvang":true,"drudge":true,"m42am":true,"carlos8f":true,"kennethjor":true,"glukki":true,"popeindustries":true,"dannydulai":true,"megadrive":true,"evanlucas":true,"rwillrich":true,"maxmaximov":true,"zonetti":true,"leesei":true,"moonpyk":true,"webpro":true,"strathausen":true,"joliva":true,"drkibitz":true},"_attachments":{"commander-2.0.0.tgz":{"content_type":"application/octet-stream","revpos":115,"digest":"md5-pFto9uayi6kxZZvqHtzXEw==","length":9024,"stub":true},"commander-1.3.2.tgz":{"content_type":"application/octet-stream","revpos":113,"digest":"md5-gMONZ+ayRAjyE1Axax0yQA==","length":10942,"stub":true},"commander-1.3.1.tgz":{"content_type":"application/octet-stream","revpos":111,"digest":"md5-ctbGDPiH1la8ijXXtrk6yg==","length":10893,"stub":true},"commander-1.3.0.tgz":{"content_type":"application/octet-stream","revpos":107,"digest":"md5-9ML3rHNiRJfDBzLPDiNaug==","length":10845,"stub":true},"commander-1.2.0.tgz":{"content_type":"application/octet-stream","revpos":102,"digest":"md5-80c2wNro14nLt+Awk9RXrg==","length":10786,"stub":true},"commander-1.1.1.tgz":{"content_type":"application/octet-stream","revpos":89,"digest":"md5-rWhs1AC2sVR01f3ntPQZ8g==","length":10791,"stub":true},"commander-1.1.0.tgz":{"content_type":"application/octet-stream","revpos":87,"digest":"md5-yApK8W7c0OTY5VlBtk+NFg==","length":10747,"stub":true},"commander-1.0.5.tgz":{"content_type":"application/octet-strea
1799 error     at Object.parse (native)
1799 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:235:23)
1799 error     at Request.init.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/main.js:120:22)
1799 error     at Request.EventEmitter.emit (events.js:99:17)
1799 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/main.js:648:16)
1799 error     at Request.EventEmitter.emit (events.js:126:20)
1799 error     at IncomingMessage.Request.start.self.req.self.httpModule.request.buffer (/usr/local/lib/node_modules/npm/node_modules/request/main.js:610:14)
1799 error     at IncomingMessage.EventEmitter.emit (events.js:126:20)
1799 error     at IncomingMessage._emitEnd (http.js:366:10)
1799 error     at http.js:1403:11
1800 error If you need help, you may report this log at:
1800 error     <http://github.com/isaacs/npm/issues>
1800 error or email it to:
1800 error     <npm-@googlegroups.com>
1801 error System Linux 3.2.0-37-generic-pae
1802 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "-g" "mocha-phantomjs" "phantomjs"
1803 error cwd /home/eric/Projects/livelypaper/js_lib/test
1804 error node -v v0.8.20
1805 error npm -v 1.2.11
1806 error type unexpected_eos
1807 verbose exit [ 1, true ]
